(this.webpackJsonpmegadocker=this.webpackJsonpmegadocker||[]).push([[0],{114:function(e,t,r){"use strict";r.r(t);var n=r(32),o=r.n(n),i=r(0),a=r(172),s=r(164),p=r(168),c=r(169),l=r(167),d=r(166),m=r(170),u=r(163),h=r(13),x=r(78),k=function(e){return e.filter((function(e){return e.isSelected})).flatMap((function(e){return e.memories}))},f=r(82),g=r(33),S=(r(99),{fontFamily:"Asap",fontWeight:300}),y={},v={boxShadow:"none"},b={backgroundColor:"#131313",borderRadius:"24px",boxShadow:"7px 7px 15px #000000, -3px -3px 7px #39393A","&:hover":{borderColor:"#131313",boxShadow:"7px 7px 15px #000000, -3px -3px 7px #39393A"}},A={display:"flex",verticalAlign:"center",boxShadow:"0 5px 10px 10px #131313"},D={backgroundColor:"#131313",color:"#FFFFFF",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{backgroundColor:"#131313",color:"#FFFFFF",boxShadow:".75px -4px 3px -3px #000000, \n  inset .75px 1px .5px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A"}},M={marginBottom:"12px",borderRadius:"25px",boxShadow:"5px 5px 12px #000000, \ninset -1px -1px .5px #000000, \ninset 1px 1px .5px #39393A",color:"#FFFFFF"},R={color:g.a[600],backgroundColor:"#131313",borderRadius:"25px",margin:"7px","&:hover":{backgroundColor:"#131313",boxShadow:".75px -4px 3px -3px black, \n  inset .75px 1px .5px black, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A"},"&$selected":{backgroundColor:"#131313",color:"#FFFFFF","&:hover":{backgroundColor:"#131313",boxShadow:"none"}}},w=R,O={borderTopLeftRadius:"25px",borderTopRightRadius:"25px",boxShadow:"0 -3px 7px  #000000, \ninset 0 .5px .5px #000000"},I={color:"#FFFFFF",boxShadow:"-.75px 4px 3px -3px #000000, \n  inset -.75px -1px .75px #000000, \n  .75px -4px 3px -3px #39393A, \n  inset .75px 1px .75px #39393A","&:hover":{backgroundColor:"#131313",boxShadow:".75px -4px 3px -3px #000000, \n    inset .75px 1px .75px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -1px .75px #39393A"}},P={color:"#FFFFFF",borderRadius:"24px",textTransform:"uppercase","&:hover":{textTransform:"uppercase"}},E={backgroundColor:"#131313",boxShadow:"-.75px 4px 3px -3px #000000, \n  inset -.75px -1px .75px #000000, \n  .75px -4px 3px -3px #39393A, \n  inset .75px 1px .75px #39393A",color:"#FFFFFF","&:hover":{backgroundColor:"#131313",color:"#FFFFFF",boxShadow:".75px -4px 3px -3px #000000, \n    inset .75px 1px .75px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -1px .75px #39393A"}},T={color:"#FFFFFF",borderRadius:"24px",margin:"7px",textTransform:"uppercase","&:hover":{textTransform:"uppercase"}},N={color:"#000000",boxShadow:"-.75px 5px 4px -3px #000000, \n  inset -.75px -1px .75px #000000, \n  .75px -4px 3px -3px #39393A, \n  inset .75px 1px .75px #39393A","&:hover":{color:"#FFFFFF",backgroundColor:"#131313",boxShadow:".75px -4px 3px -3px #000000, \n    inset .75px 1px .75px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -1px .75px #39393A"}},F={paddingTop:"24px",borderRadius:"50px",boxShadow:"5px 5px 12px #000000, \n  -2px -2px 8px #39393A,  \n  inset -1px -1px .5px #000000, \n  inset 1px 1px .5px #39393A",color:"#FFFFFF"},C={boxShadow:"none",marginLeft:"5px",marginRight:"5px"},B={color:g.a[100]},_=B,L={},U={alignContent:"center",borderRadius:"25px",padding:"25px",boxShadow:"5px 5px 12px #000000, \n  -2px -2px 8px #39393A, \n  inset -1px -1px .5px #000000, \n  inset 1px 1px .5px #39393A",color:"#FFFFFF"},$={borderRadius:"24px"},H={},W={width:240,height:"calc(100%-".concat(70,"px)"),marginTop:0,borderRadius:"25px",backgroundColor:"#131313",boxShadow:"12px 12px 30px -6px #000000"},j=W,Y={width:240,height:"calc(100%-".concat(70,"px)"),marginTop:0,flexShrink:0},G=Y,z={},K={},q={},Z={color:g.a[300]},X=Z,Q={},V={borderBottomLeftRadius:"12px",borderBottomRightRadius:"12px"},J={borderRadius:"12px",boxShadow:"5px 5px 12px #000000, -5px -5px 12px #39393A"},ee={"&:hover":{},"&$focused":{"&:hover":{}}},te={color:g.a[400],marginBottom:"5px",boxShadow:"inset -1px -1px 3px #39393A, inset 3px 3px 5px #000000","&:hover":{color:g.a[300],boxShadow:"5px 5px 10px #000000, -2px -2px 5px #39393A"},"&$focused":{color:g.a[200],boxShadow:"7px 7px 15px #000000, -2px -2px 7px #39393A","&:hover":{color:g.a[200],boxShadow:"7px 7px 15px #000000, -2px -2px 7px #39393A"}}},re=te,ne={color:g.a[300],textShadow:"2px 2px 3px #131313, -2px -2px 3px #131313, -2px 2px 3px #131313, 2px -2px 3px #131313","&$focused":{color:"#FFFFFF"}},oe=ne,ie={borderRadius:"50px",boxShadow:".75px -4px 3px -3px #000000, \n    inset .75px 3px 3px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -3px 3px #39393A","&:hover":{color:"#FFFFFF",boxShadow:"7px 7px 15px #000000, -3px -3px 7px #39393A"},"&$focused":{color:"#FFFFFF",boxShadow:"7px 7px 15px #000000, -3px -3px 7px #39393A","&:hover":{color:"#FFFFFF",boxShadow:"7px 7px 15px #000000, -3px -3px 7px #39393A"}}},ae={backgroundColor:"transparent",color:"#FFFFFF",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{color:"#FFFFFF",boxShadow:".75px -4px 3px -3px #000000, \n  inset .75px 1px .5px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A"},"&$selected":{color:"#FFFFFF",boxShadow:".75px -4px 5px -3px #000000, \n  inset .75px 1px .75px #000000, \n  -.75px 4px 5px -3px #39393A, \n  inset -.75px -1px .75px #39393A"}},se={marginTop:"8px",marginBottom:"8px"},pe={borderRadius:"25px",boxShadow:"5px 5px 12px #000000, \n  -2px -2px 7px #39393A, \n  inset -1px -1px .5px #000000, \n  inset 1px 1px .5px #39393A",color:"#FFFFFF"},ce={backgroundColor:g.a[50]},le=ce,de={backgroundColor:g.a[800]},me=de,ue={border:"5px",backgroundColor:g.a[400],borderColor:g.a[50],borderTopLeftRadius:"5px",borderTopRightRadius:"5px",borderBottomLeftRadius:"5px",borderBottomRightRadius:"5px"},he=ue,xe={marginLeft:"12px","&$disabled":{marginLeft:"12px"}},ke={borderTopLeftRadius:"25px",borderTopRightRadius:"25px",borderBottomLeftRadius:"25px",borderBottomRightRadius:"25px"},fe={default:"#131313",paper:"#131313"},ge={main:"#131313",light:g.a[50],dark:"#000000",contrastText:g.a[400]},Se=ge,ye=r(60),ve={main:ye.a[300],light:ye.a[200],dark:ye.a[700],contrastText:"#000000"},be=ve,Ae={paddingLeft:"30px",paddingRight:"30px",marginLeft:"-8px",marginRight:"-8px"},De={boxShadow:"none",marginLeft:"5px",marginRight:"5px"},Me={borderRadius:"25px",color:g.a[300]},Re=Me,we={},Oe={opacity:1,backgroundColor:"currentColor"},Ie={backgroundColor:g.a[700],height:8,width:1,marginTop:-3},Pe=Ie,Ee={height:2,backgroundColor:g.a[700]},Te=Ee,Ne=r(154),Fe={color:Ne.a[800],height:2,padding:"15px 0"},Ce=Fe,Be={height:28,width:28,backgroundColor:"#131313",boxShadow:"inset -1px -1px 2px #39393A, inset 2px 2px 3px #000000, -1px -1px 2px #39393A, 2px 2px 3px #000000,\n  inset -1px 1px 2px #39393A, inset -2px 2px 3px #000000,  inset 1px -1px 2px #39393A, inset 2px -2px 3px #000000",marginTop:-14,marginLeft:-14,"&:focus, &:hover, &.Mui-active":{boxShadow:"3px 3px 6px #000000, -1px -1px 1px #39393A, inset -6px -6px 12px #000000, inset 5px 5px 10px #39393A","@media (hover: none)":{boxShadow:"inset -1px -1px 2px #39393A, inset 2px 2px 3px #000000, -1px -1px 2px #39393A, 2px 2px 3px #000000,\n        inset -1px 1px 2px #39393A, inset -2px 2px 3px #000000,  inset 1px -1px 2px #39393A, inset 2px -2px 3px #000000"}}},_e={height:2},Le={left:"calc(-50% + 12px)",top:-22,"& *":{background:"transparent",color:g.a[400]}},Ue=Le,$e={},He={},We={backgroundColor:g.a[500],borderRadius:"50%"},je=We,Ye={color:g.a[900],"&$error":{borderColor:g.a[900],color:"red"}},Ge=Ye,ze={root:{width:42,height:26,padding:3},switchBase:{padding:1,"&$checked":{transform:"translateX(16px)",color:"#ffffff","& + $track":{backgroundColor:"#52d869",opacity:1,border:"none"}}},thumb:{width:24,height:24},track:{borderRadius:26,backgroundColor:g.a[200],opacity:1}},Ke=ze,qe={},Ze={},Xe={backgroundColor:"#131313",color:"#FFFFFF",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{backgroundColor:"#131313",color:"#FFFFFF",boxShadow:".75px -4px 3px -3px #000000, \n  inset .75px 1px .5px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A"}},Qe={},Ve={},Je={},et={},tt={},rt={borderRadius:"12px",border:"none","&:hover":{backgroundColor:"#131313",boxShadow:".75px -4px 3px -3px #000000, \n  inset .75px 1px .75px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .75px #39393A"},"&$selected":{backgroundColor:"#131313",color:"#FFFFFF",boxShadow:".75px -4px 5px -3px #000000, \n  inset .75px 1px .75px #000000, \n  -.75px 4px 5px -3px #39393A, \n  inset -.75px -1px .75px #39393A"}},nt={color:g.a[600]},ot=nt,it=Object(f.a)({components:{MuiAccordion:{styleOverrides:{root:v,expanded:y}},MuiAlert:{styleOverrides:{root:b}},MuiAppBar:{styleOverrides:{root:A}},MuiAutocomplete:{styleOverrides:{paper:M,option:D}},MuiBottomNavigation:{styleOverrides:{root:O}},MuiBottomNavigationAction:{styleOverrides:{root:w}},MuiButton:{styleOverrides:{root:T,containedPrimary:E,containedSecondary:N}},MuiCard:{styleOverrides:{root:F}},MuiCheckbox:{styleOverrides:{root:C}},MuiChip:{styleOverrides:{root:E}},MuiCircularProgress:{styleOverrides:{root:L,colorPrimary:_}},MuiContainer:{styleOverrides:{root:U}},MuiCssBaseline:{styleOverrides:{"@global":{"@font-face":S}}},MuiDialog:{styleOverrides:{paper:$,root:H}},MuiDrawer:{styleOverrides:{paper:j,root:G}},MuiFab:{styleOverrides:{root:z}},MuiFormControl:{styleOverrides:{root:q}},MuiFormControlLabel:{styleOverrides:{root:K}},MuiFormHelperText:{styleOverrides:{root:X}},MuiIconButton:{styleOverrides:{root:P,colorInherit:I,colorPrimary:E,colorSecondary:N}},MuiIcon:{styleOverrides:{root:Q}},MuiImageList:{styleOverrides:{root:J}},MuiImageListItemBar:{styleOverrides:{root:V}},MuiInputAdornment:{styleOverrides:{root:ee}},MuiInputBase:{styleOverrides:{root:re}},MuiInputLabel:{styleOverrides:{root:oe}},MuiList:{styleOverrides:{root:se}},MuiListItem:{styleOverrides:{root:ae}},MuiMenu:{styleOverrides:{paper:pe}},MuiMobileStepper:{styleOverrides:{dot:me,dotActive:le,progress:he}},MuiNativeSelect:{styleOverrides:{root:xe,filled:xe,select:xe,outlined:xe}},MuiOutlinedInput:{styleOverrides:{root:ie,multiline:ke}},MuiPaginationItem:{styleOverrides:{root:Ze}},MuiPaper:{styleOverrides:{root:Ae}},MuiPopover:{styleOverrides:{paper:pe}},MuiRadio:{styleOverrides:{root:De}},MuiSelect:{styleOverrides:{root:we,selectMenu:Re}},MuiSlider:{styleOverrides:{root:Ce,thumb:Be,valueLabel:Ue,track:_e,rail:Te,mark:Pe,markActive:Oe}},MuiSpeedDial:{styleOverrides:{root:$e,fab:E}},MuiStepIcon:{styleOverrides:{root:Ge,active:He,completed:je}},MuiSwitch:{styleOverrides:{root:Ke}},MuiTab:{styleOverrides:{root:Qe,selected:Ve,labelIcon:qe}},MuiTabs:{styleOverrides:{root:Je,indicator:Ve}},MuiTablePagination:{styleOverrides:{root:Ze,selectRoot:Xe}},MuiTextField:{styleOverrides:{root:et}},MuiToggleButton:{styleOverrides:{root:rt}},MuiToggleButtonGroup:{styleOverrides:{root:tt}},MuiTouchRipple:{styleOverrides:{root:ot}}},palette:{mode:"dark",background:fe,primary:Se,secondary:be,text:{primary:g.a[300],secondary:g.a[500],disabled:g.a[700]}},typography:{fontFamily:"Asap"}}),at={},st={boxShadow:"none"},pt={backgroundColor:"#F0F0F3",borderRadius:"24px",boxShadow:"7px 7px 15px #9B9B9E, -3px -3px 7px white",color:"#000000","&:hover":{borderColor:"#F0F0F3",boxShadow:"7px 7px 15px #c2c2c5, -3px -3px 7px white"}},ct={display:"flex",verticalAlign:"center",boxShadow:"0 5px 10px 10px #F0F0F3"},lt={backgroundColor:"#F0F0F3",color:"#000000",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{backgroundColor:"#F0F0F3",color:"#000000",boxShadow:".75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white"}},dt={marginBottom:"12px",borderRadius:"25px",boxShadow:"5px 5px 12px #BFBFC1, \ninset -1px -1px .5px #BFBFC1, \ninset 1px 1px .5px white",color:"#000000"},mt={color:g.a[600],backgroundColor:"#F0F0F3",borderRadius:"25px",margin:"7px","&:hover":{backgroundColor:"#F0F0F3",boxShadow:".75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white"},"&$selected":{backgroundColor:"#F0F0F3",color:"#000000","&:hover":{backgroundColor:"#F0F0F3",boxShadow:"none"}}},ut=mt,ht={borderTopLeftRadius:"25px",borderTopRightRadius:"25px",boxShadow:"0 -3px 7px  #BFBFC1, \ninset 0 .5px .5px #BFBFC1"},xt={boxShadow:"-.75px 4px 3px -3px #D8D8DB, \n  inset -.75px -1px .75px #D8D8DB, \n  .75px -4px 3px -3px white, \n  inset .75px 1px .75px white","&:hover":{backgroundColor:"#F0F0F3",color:"#000000",boxShadow:".75px -4px 3px -3px #D8D8DB, \n    inset .75px 1px .75px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -1px .75px white"}},kt={borderRadius:"24px",textTransform:"uppercase","&:hover":{textTransform:"uppercase"}},ft={boxShadow:"-.75px 4px 3px -3px #D8D8DB, \n  inset -.75px -1px .75px #D8D8DB, \n  .75px -4px 3px -3px white, \n  inset .75px 1px .75px white",color:"#000000","&:hover":{backgroundColor:"#F0F0F3",color:"#000000",boxShadow:".75px -4px 3px -3px #D8D8DB, \n    inset .75px 1px .75px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -1px .75px white"}},gt={borderRadius:"24px",margin:"7px",textTransform:"uppercase","&:hover":{textTransform:"uppercase"}},St={color:"#000000",boxShadow:"-.75px 4px 3px -3px #D8D8DB, \n  inset -.75px -1px .75px #D8D8DB, \n  .75px -4px 3px -3px white, \n  inset .75px 1px .75px white","&:hover":{color:"#000000",backgroundColor:"#F0F0F3",boxShadow:".75px -4px 3px -3px #D8D8DB, \n    inset .75px 1px .75px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -1px .75px white"}},yt={paddingTop:"24px",borderRadius:"50px",boxShadow:"5px 5px 12px #BFBFC1, \n  -5px -5px 12px white, \n  inset -1px -1px .5px #BFBFC1, \n  inset 1px 1px .5px white",color:"#000000"},vt={boxShadow:"none",marginLeft:"5px",marginRight:"5px"},bt={color:g.a[700]},At=bt,Dt={},Mt={alignContent:"center",borderRadius:"25px",padding:"25px",boxShadow:"5px 5px 12px #BFBFC1, \n  -5px -5px 12px white, \n  inset -1px -1px .5px #BFBFC1, \n  inset 1px 1px .5px white",color:"#000000"},Rt={borderRadius:"24px"},wt={},Ot={width:240,height:"calc(100%-".concat(70,"px)"),marginTop:0,borderRadius:"25px",backgroundColor:"#F0F0F3",boxShadow:"12px 12px 30px -6px #B4B4B5"},It=Ot,Pt={width:240,height:"calc(100%-".concat(70,"px)"),marginTop:0,flexShrink:0},Et=Pt,Tt={},Nt={},Ft={},Ct={color:g.a[700]},Bt=Ct,_t={},Lt={borderBottomLeftRadius:"12px",borderBottomRightRadius:"12px"},Ut={borderRadius:"12px",boxShadow:"5px 5px 12px #C2C2C5, -5px -5px 12px white"},$t={"&:hover":{},"&$focused":{"&:hover":{}}},Ht={color:"black",marginBottom:"5px",boxShadow:"inset -3px -3px 7px #ffffff, inset 3px 3px 5px #D8D8DB","&:hover":{color:"black",boxShadow:"7px 7px 15px #c2c2c5, -3px -3px 7px white"},"&$focused":{color:"black",boxShadow:"7px 7px 15px #9B9B9E, -3px -3px 7px white","&:hover":{color:"black",boxShadow:"7px 7px 15px #9B9B9E, -3px -3px 7px white"}}},Wt={color:g.a[700],textShadow:"2px 2px 3px #F0F0F3, -2px -2px 3px #F0F0F3, -2px 2px 3px #F0F0F3, 2px -2px 3px #F0F0F3","&$focused":{color:"black"}},jt=Wt,Yt={borderRadius:"50px",boxShadow:".75px -4px 3px -3px #D8D8DB, \n    inset .75px 3px 3px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -3px 3px white","&:hover":{color:"black",boxShadow:"7px 7px 15px #c2c2c5, -3px -3px 7px white"},"&$focused":{color:"black",boxShadow:"7px 7px 15px #9B9B9E, -3px -3px 7px white","&:hover":{color:"black",boxShadow:"7px 7px 15px #9B9B9E, -3px -3px 7px white"}}},Gt={backgroundColor:"transparent",color:"#000000",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{color:"#000000",boxShadow:".75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white"},"&$selected":{color:"#000000",boxShadow:".75px -4px 5px -3px #D8D8DB, \n  inset .75px 1px .75px #D8D8DB, \n  -.75px 4px 5px -3px white, \n  inset -.75px -1px .75px white"}},zt={marginTop:"8px",marginBottom:"8px"},Kt={borderRadius:"25px",boxShadow:"5px 5px 12px #BFBFC1, \n  -5px -5px 12px white, \n  inset -1px -1px .5px #BFBFC1, \n  inset 1px 1px .5px white",color:"#000000"},qt={backgroundColor:g.a[800]},Zt=qt,Xt={backgroundColor:g.a[400]},Qt=Xt,Vt={backgroundColor:g.a[400],color:"#000000"},Jt=Vt,er={marginLeft:"12px","&$disabled":{marginLeft:"12px"}},tr={borderTopLeftRadius:"25px",borderTopRightRadius:"25px",borderBottomLeftRadius:"25px",borderBottomRightRadius:"25px"},rr={default:"#F0F0F3",paper:"#F0F0F3"},nr={main:"#F0F0F3",light:g.a[500],dark:"#d8d8da",contrastText:g.a[900]},or=nr,ir={main:Ne.a[200],light:Ne.a[100],dark:Ne.a[300],contrastText:g.a[900]},ar=ir,sr={paddingLeft:"30px",paddingRight:"30px",marginLeft:"-8px",marginRight:"-8px"},pr={boxShadow:"none",marginLeft:"5px",marginRight:"5px"},cr={borderRadius:"25px",color:"#000000"},lr={},dr={backgroundColor:g.a[700]},mr=dr,ur={backgroundColor:g.a[400],height:8,width:1,marginTop:-3},hr=ur,xr={height:2,backgroundColor:g.a[700]},kr=xr,fr={color:Ne.a[300],height:2,padding:"15px 0"},gr=fr,Sr={height:28,width:28,backgroundColor:"#F0F0F3",boxShadow:"inset -2px -2px 3px #FFFFFF, inset 1px 1px 2px #aeaeb1, -2px -2px 3px #FFFFFF, 1px 1px 2px #aeaeb1,\n  inset -2px 2px 3px #FFFFFF, inset -1px 1px 2px #aeaeb1,  inset 2px -2px 3px #FFFFFF, inset 1px -1px 2px #aeaeb1",marginTop:-14,marginLeft:-14,"&:focus, &:hover, &.Mui-active":{boxShadow:"2px 2px 4px #aeaeb1, -3px -3px 6px #FFFFFF, inset -5px -5px 10px #aeaeb1, inset 6px 6px 12px #FFFFFF","@media (hover: none)":{boxShadow:"inset -2px -2px 3px #FFFFFF, inset 1px 1px 2px #aeaeb1, -2px -2px 3px #FFFFFF, 1px 1px 2px #aeaeb1,\n        inset -2px 2px 3px #FFFFFF, inset -1px 1px 2px #aeaeb1,  inset 2px -2px 3px #FFFFFF, inset 1px -1px 2px #aeaeb1"}}},yr={height:2},vr={left:"calc(-50% + 12px)",top:-22,"& *":{background:"transparent",color:"#000000"}},br={},Ar={},Dr={backgroundColor:"#000000",borderRadius:"50%"},Mr={color:g.a[300],"&$error":{borderColor:g.a[300],color:"red"}},Rr=Mr,wr={root:{width:42,height:26,padding:3},switchBase:{padding:1,"&$checked":{transform:"translateX(16px)",color:"#ffffff","& + $track":{backgroundColor:"#52d869",opacity:1,border:"none"}}},thumb:{width:24,height:24},track:{borderRadius:26,backgroundColor:g.a[900],opacity:1}},Or=wr,Ir={},Pr={},Er={backgroundColor:"#F0F0F3",color:"#000000",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{backgroundColor:"#F0F0F3",color:"#000000",boxShadow:".75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white"}},Tr={backgroundColor:"#FFFFFF",color:"#000000",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{backgroundColor:"#EEEEEE",color:"#000000",boxShadow:".75px -4px 3px -3px #D8D8DB, inset .75px 1px .5px #D8D8DB, -.75px 4px 3px -3px white, inset -.75px -1px .5px white"}},Nr={backgroundColor:"#EEEEEE",color:"#000000",borderRadius:"25px",marginTop:"8px",marginBottom:"8px","&:hover":{backgroundColor:"#EEEEEE",color:"#000000",boxShadow:".75px -4px 3px -3px #D8D8DB, inset .75px 1px .5px #D8D8DB, -.75px 4px 3px -3px white, inset -.75px -1px .5px white"}},Fr={},Cr={},Br={},_r={},Lr={},Ur={borderRadius:"12px",border:"none","&:hover":{backgroundColor:"#F0F0F3",boxShadow:".75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .75px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .75px white"},"&$selected":{backgroundColor:"#F0F0F3",color:"#000000",boxShadow:".75px -4px 5px -3px #D8D8DB, \n  inset .75px 1px .75px #D8D8DB, \n  -.75px 4px 5px -3px white, \n  inset -.75px -1px .75px white"}},$r=Object(f.a)({components:{MuiAccordion:{styleOverrides:{root:st,expanded:at}},MuiAlert:{styleOverrides:{root:pt}},MuiAppBar:{styleOverrides:{root:ct}},MuiAutocomplete:{styleOverrides:{paper:dt,option:lt}},MuiBottomNavigation:{styleOverrides:{root:ht}},MuiBottomNavigationAction:{styleOverrides:{root:ut}},MuiButton:{styleOverrides:{root:gt,containedPrimary:ft,containedSecondary:St}},MuiCard:{styleOverrides:{root:yt}},MuiCheckbox:{styleOverrides:{root:vt}},MuiChip:{styleOverrides:{root:ft}},MuiCircularProgress:{styleOverrides:{root:Dt,colorPrimary:At}},MuiContainer:{styleOverrides:{root:Mt}},MuiCssBaseline:{styleOverrides:{"@global":{"@font-face":S}}},MuiDialog:{styleOverrides:{root:wt,paper:Rt}},MuiDrawer:{styleOverrides:{root:Et,paper:It}},MuiFab:{styleOverrides:{root:Tt}},MuiFormControl:{styleOverrides:{root:Ft}},MuiFormControlLabel:{styleOverrides:{root:Nt}},MuiFormHelperText:{styleOverrides:{root:Bt}},MuiIconButton:{styleOverrides:{root:kt,colorInherit:xt,colorPrimary:ft,colorSecondary:St}},MuiIcon:{styleOverrides:{root:_t}},MuiImageList:{styleOverrides:{root:Ut}},MuiImageListItemBar:{styleOverrides:{root:Lt}},MuiInputAdornment:{styleOverrides:{root:$t}},MuiInputBase:{styleOverrides:{root:Ht}},MuiInputLabel:{styleOverrides:{root:jt}},MuiList:{styleOverrides:{root:zt}},MuiListItem:{styleOverrides:{root:Gt}},MuiMenu:{styleOverrides:{paper:Kt}},MuiMobileStepper:{styleOverrides:{dot:Qt,dotActive:Zt,progress:Jt}},MuiNativeSelect:{styleOverrides:{root:er,filled:er,select:er,outlined:er}},MuiOutlinedInput:{styleOverrides:{root:Yt,multiline:tr}},MuiPaginationItem:{styleOverrides:{root:Pr}},MuiPaper:{styleOverrides:{root:sr}},MuiPopover:{styleOverrides:{paper:Kt}},MuiRadio:{styleOverrides:{root:pr}},MuiSelect:{styleOverrides:{root:lr,selectMenu:cr}},MuiSlider:{styleOverrides:{root:gr,thumb:Sr,valueLabel:vr,track:yr,rail:kr,mark:hr,markActive:mr}},MuiSpeedDial:{styleOverrides:{root:br,fab:ft}},MuiStepIcon:{styleOverrides:{root:Rr,active:Ar,completed:Dr}},MuiSwitch:{styleOverrides:{root:Or}},MuiTab:{styleOverrides:{root:Fr,selected:Cr,labelIcon:Ir}},MuiTabs:{styleOverrides:{root:Br,indicator:Cr}},MuiTablePagination:{styleOverrides:{root:Pr,selectRoot:Er}},MuiTableRow:{styleOverrides:{root:Tr,selected:Nr}},MuiTextField:{styleOverrides:{root:_r}},MuiToggleButton:{styleOverrides:{root:Ur}},MuiToggleButtonGroup:{styleOverrides:{root:Lr}}},palette:{mode:"light",background:rr,primary:or,secondary:ar,action:{selected:"#C0C0C2"},text:{primary:"#000000",secondary:"#646465",disabled:"#818182"}},typography:{fontFamily:"Asap"}}),Hr=r(49),Wr=r.n(Hr),jr=r(68),Yr=r(15),Gr=r(80),zr=r.n(Gr),Kr=r(81),qr=r.n(Kr),Zr={type:"DockerSwarmHeader",miteIndex:29999,miteString:"\n# MegaDocker YML File\nversion: '3.9'\n\n# Created by MegaDocker\n# Mob is named: [[MOBNAME]]\n\n# Begin Services Section\n\nservices:\n"},Xr="\n\n# End Services Section\n\n",Qr="\n\n# Begin Networks Section\n\nnetworks:\n\n",Vr="\n\n# End Networks Section\n\n",Jr={memoryIndex:20004,memoryMarker:"[[CLOUDFLAREAPITOKEN]]",memoryType:"SecretMemory",shouldAutocomplete:!0,name:"CloudFlare API Token",tooltip:'A CloudFlare API token with "DNS: Edit" and "Zone: Read" privileges for your domains',value:"",valueType:"password",isReady:!1,validator:function(e){if(!e||0===e.length)return!1;var t=40===e.length;return new RegExp("^[a-zA-Z0-9_]*$").test(e)&&t}},en={memoryIndex:20024,memoryMarker:"[[LETSENCRYPTEMAIL]]",memoryType:"NormalMemory",shouldAutocomplete:!0,name:"Let's Encrypt Email Address",tooltip:"The email address used to register your domain",value:"",valueType:"email",isReady:!1,validator:function(e){return!(!e||0===e.length)&&!!new RegExp("^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$").test(e)}},tn={memoryIndex:20038,memoryMarker:"[[PRIMARYDOMAIN]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Web Domain",tooltip:"The domain name for your MEGADOCKER Mob (such as 'example.com' or 'myawesomemob.org')",value:"",valueType:"text",isReady:!1,validator:function(e){if(!e||0===e.length)return!1;return!!/^(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/.test(e)}},rn=["traefik"],nn={type:"DockerSwarmService",miteIndex:30030,webInterfaceHostnames:rn,miteString:"\n\n# Begin Traefik Service Section\n\n traefik:\n  image: traefik\n  command:\n   - '--accesslog=true'\n   - '--api.dashboard=true'\n   - '--certificatesresolvers.cloudflarecerts.acme.email=[[LETSENCRYPTEMAIL]]'\n   - '--certificatesresolvers.cloudflarecerts.acme.storage=/acme.json'\n   - '--certificatesresolvers.cloudflarecerts.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'\n   - '--certificatesresolvers.cloudflarecerts.acme.dnschallenge=true'\n   - '--certificatesresolvers.cloudflarecerts.acme.dnschallenge.provider=cloudflare'\n   - '--certificatesresolvers.cloudflarecerts.acme.dnschallenge.resolvers=1.1.1.1:53, 1.0.0.1:53'\n   - '--entrypoints.plainhttp.address=:80'\n   - '--entrypoints.encryptedhttp.address=:443'\n   - '--log.level=DEBUG'\n   - '--log.format=json'\n   - '--accesslog=true'\n   - '--providers.docker.endpoint=unix:///var/run/docker.sock'\n   - '--providers.docker.exposedbydefault=false'\n   - '--providers.docker.network=[[MOBNAME]]_traefik'\n   - '--providers.docker.swarmmode=true'\n   - '--providers.docker.watch=true'\n  networks:\n   - traefik\n  ports:\n   - 80:80\n   - 443:443\n   - 8080:8080\n  volumes:\n   - ${PWD}/logs/traefik:/var/log/traefik\n   - ${PWD}/traefik/acme.json:/acme.json\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  environment:\n   - CF_DNS_API_TOKEN=[[CLOUDFLAREAPITOKEN]]\n   - CF_ZONE_API_TOKEN=[[CLOUDFLAREAPITOKEN]]\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.traefik.entrypoints=plainhttp'\n    - 'traefik.http.routers.traefik.rule=Host(\"".concat(rn[0],".[[PRIMARYDOMAIN]]\") && (PathPrefix(\"/api\") || PathPrefix(\"/dashboard\"))'\n## TODO: integrate LDAP auth to get rid of this sloppiness\n##    - 'traefik.http.middlewares.traefik-auth.basicauth.users=[[TRAEFIKUSER]]:[[TRAEFIKPASSWORD]]'\n    - 'traefik.http.middlewares.traefik-auth.basicauth.users=traefikuser:$$apr1$$OG8S9BgU$$7BwcoMe3X.gpi.aRLljDd.'\n    - 'traefik.http.routers.traefik-https.middlewares=traefik-auth'\n    - 'traefik.http.middlewares.traefik-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.traefik.middlewares=traefik-force-secure'\n    - 'traefik.http.routers.traefik-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.traefik-https.rule=Host(\"").concat(rn[0],".[[PRIMARYDOMAIN]]\") && (PathPrefix(\"/api\") || PathPrefix(\"/dashboard\"))'\n    - 'traefik.http.services.traefik.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.traefik-https.service=api@internal'\n    - 'traefik.http.routers.traefik-https.tls=true'\n    - 'traefik.http.routers.dashboard.tls.certresolver=cloudflarecerts'\n    - 'traefik.http.routers.dashboard.tls.domains[0].main=[[PRIMARYDOMAIN]]'\n    - 'traefik.http.routers.dashboard.tls.domains[0].sans=*.[[PRIMARYDOMAIN]]'\n    - 'com.MegaDocker.description=Traefik - a modern reverse-proxy for microservices environments.'\n   placement:\n    constraints:\n     - node.role == manager\n\n traefik-ssl-exporter:\n  image: ldez/traefik-certs-dumper:latest\n  networks:\n   - traefik\n  volumes:\n   - ${PWD}/logs/traefik:/loglocation\n   - ${PWD}/traefik/acme.json/:/acme.json\n   - ${PWD}/traefik/ssl:/output\n  command: >\n   file\n   --watch\n   --version v2\n   --dest /output\n  deploy:\n   restart_policy:\n    condition: any\n \n# End Traefik Service Section\n\n")},on=r.p+"static/media/traefikIcon.c26ffd4d.png",an={memoryIndex:20026,memoryMarker:"[[MOBNAME]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Mob Name",tooltip:"The name of your MEGADocker Mob (only using lowercase letters or numbers)",value:"",valueType:"text",isReady:!1,validator:function(e){if(!e||0===e.length)return!1;var t=!!new RegExp("^[sa-z0-9]*$").test(e),r=e.length<20&&e.length>4;return t&&r}},sn={description:"Reverse Proxy",folder:"traefik",isCore:!0,isSelected:!0,manikinGroups:["Core","Network"],manikinIcon:on,manikinIndex:10028,memories:[an,en,Jr,tn],name:"Traefik",mites:[nn,{type:"DockerSwarmNetwork",miteIndex:40027,miteString:"\n\n# Begin Traefik Network Section\n\n traefik:\n  driver: overlay\n\n# End Traefik Network Section\n\n"}],ports:[],subfolders:["ssl"]},pn={type:"Custom",miteString:"",miteIndex:50007,miteFile:{path:"ldap/ldif-files",name:"51-bootstrap-megadocker",extension:"ldif",permissions:"644",contents:"# MegaDocker 51-bootstrap-megadocker.ldif file for [[MOBNAME]]\n# base domain name for ldap was automatically generated from [[PRIMARYDOMAIN]]\n\nversion: 1\n    \ndn: ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Customers,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Technicians,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Vendors,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Employees,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Managers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=TraefikUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GitlabUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SwarmpitUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SkoposUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KanboardUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KibanaUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DrupalUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GhostUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WordpressUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PiholeUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=EmailUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RocketchatUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PortainerUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NextcloudUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=OwncloudUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=HeimdallUsers,ou=Employees,ou=Users,ou=People,dc=ldap,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n"}},cn="\n\n# Begin Secrets Section\n\nsecrets:\n\n",ln="\n\n# End Secrets Section\n\n",dn=["books"],mn={type:"DockerSwarmService",miteIndex:3e4,webInterfaceHostnames:dn,miteString:"\n\n# Begin Books Service Section\n\n books:\n  image: linuxserver/lazylibrarian:latest\n  networks:\n   - books\n   - traefik\n  volumes:\n   - ${PWD}/media/books-config:/config\n   - ${PWD}/media/books-data:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.books.entrypoints=plainhttp'\n    - 'traefik.http.services.books.loadbalancer.server.port=5299'\n    - 'traefik.http.routers.books.rule=Host(\"".concat(dn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.books-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.books.middlewares=books-force-secure'\n    - 'traefik.http.routers.books.service=books'\n    - 'traefik.http.routers.books-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.books-https.rule=Host(\"").concat(dn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.books-https.service=books'\n    - 'traefik.http.routers.books-https.tls=true'\n    - 'traefik.http.services.books-https.loadbalancer.server.port=5299'\n    - 'com.MegaDocker.description=LazyLibrarian - a books search tool'\n\n# End Books Service Section \n\n")},un=["requests","torrent","newsgroups","newsgroup-indexer","torrent-indexer"],hn={type:"DockerSwarmService",miteIndex:30015,webInterfaceHostnames:un,miteString:"\n\n# Begin Media Requests Service Sections\n\n requests:\n  image: linuxserver/ombi\n  volumes:\n   - ${PWD}/media/requests-config:/config\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.requests.entrypoints=plainhttp'\n    - 'traefik.http.services.requests.loadbalancer.server.port=80'\n    - 'traefik.http.routers.requests.rule=Host(\"".concat(un[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.requests-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.requests.middlewares=requests-force-secure'\n    - 'traefik.http.routers.requests.service=requests'\n    - 'traefik.http.routers.requests-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.requests-https.rule=Host(\"").concat(un[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.requests-https.service=requests'\n    - 'traefik.http.routers.requests-https.tls=true'\n    - 'traefik.http.services.requests-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Ombi - media download request app'\n\n torrent-indexer:\n  image: linuxserver/jackett\n  volumes:\n   - ${PWD}/media/torrent-indexer-config:/config\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.torrent-indexer.entrypoints=plainhttp'\n    - 'traefik.http.services.torrent-indexer.loadbalancer.server.port=9117'\n    - 'traefik.http.routers.torrent-indexer.rule=Host(\"").concat(un[4],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.torrent-indexer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.torrent-indexer.middlewares=torrent-indexer-force-secure'\n    - 'traefik.http.routers.torrent-indexer.service=torrent-indexer'\n    - 'traefik.http.routers.torrent-indexer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.torrent-indexer-https.rule=Host(\"").concat(un[4],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.torrent-indexer-https.service=torrent-indexer'\n    - 'traefik.http.routers.torrent-indexer-https.tls=true'\n    - 'traefik.http.services.torrent-indexer-https.loadbalancer.server.port=9117'\n    - 'com.MegaDocker.description=Jackett - torrent indexer'\n\n torrent:\n  image: linuxserver/qbittorrent\n  volumes:\n   - ${PWD}/media/torrent-config:/config\n   - ${PWD}/media/torrent-downloads:/downloads\n   - ${PWD}/media/books-data:/media/books\n   - ${PWD}/media/comics-data:/media/comics\n   - ${PWD}/media/movies-data:/media/movies\n   - ${PWD}/media/music-data:/media/music\n   - ${PWD}/media/tv-data:/media/tv\n   - /Volumes/Drobo/Fileshare/plex:/plex\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n   - UMASK_SET=022\n   - WEBUI_PORT=8080\n   - TZ=$HOSTTIMEZONE\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  ports:\n   - 6881:6881\n   - 6881:6881/udp\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.torrent.entrypoints=plainhttp'\n    - 'traefik.http.services.torrent.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.torrent.rule=Host(\"").concat(un[1],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.torrent-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.torrent.middlewares=torrent-force-secure'\n    - 'traefik.http.routers.torrent.service=torrent'\n    - 'traefik.http.routers.torrent-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.torrent-https.rule=Host(\"").concat(un[1],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.torrent-https.service=torrent'\n    - 'traefik.http.routers.torrent-https.tls=true'\n    - 'traefik.http.services.torrent-https.loadbalancer.server.port=8080'\n    - 'com.MegaDocker.description=ruTorrent - torrent downloader'\n\n newsgroups:\n  image: linuxserver/nzbget\n  volumes:\n   - ${PWD}/media/newsgroups-config:/config\n   - ${PWD}/media/newsgroups-downloads:/media\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.newsgroups.entrypoints=plainhttp'\n    - 'traefik.http.services.newsgroups.loadbalancer.server.port=80'\n    - 'traefik.http.routers.newsgroups.rule=Host(\"").concat(un[2],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.newsgroups-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.newsgroups.middlewares=newsgroups-force-secure'\n    - 'traefik.http.routers.newsgroups.service=newsgroups'\n    - 'traefik.http.routers.newsgroups-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.newsgroups-https.rule=Host(\"").concat(un[2],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.newsgroups-https.service=newsgroups'\n    - 'traefik.http.routers.newsgroups-https.tls=true'\n    - 'traefik.http.services.newsgroups-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=NZBGet - newsgroups downloader'\n\n newsgroup-indexer:\n  image: linuxserver/hydra2\n  volumes:\n   - ${PWD}/media/newsgroups-indexer-config:/config\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.newsgroup-indexer.entrypoints=plainhttp'\n    - 'traefik.http.services.newsgroup-indexer.loadbalancer.server.port=80'\n    - 'traefik.http.routers.newsgroup-indexer.rule=Host(\"").concat(un[3],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.newsgroup-indexer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.newsgroup-indexer.middlewares=newsgroup-indexer-force-secure'\n    - 'traefik.http.routers.newsgroup-indexer.service=newsgroup-indexer'\n    - 'traefik.http.routers.newsgroup-indexer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.newsgroup-indexer-https.rule=Host(\"").concat(un[3],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.newsgroup-indexer-https.service=newsgroup-indexer'\n    - 'traefik.http.routers.newsgroup-indexer-https.tls=true'\n    - 'traefik.http.services.newsgroup-indexer-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=NZBGet - newsgroup indexer'\n\n# End Media Requests Service Section\n\n")},xn={type:"DockerSwarmNetwork",miteIndex:40001,miteString:"\n\n# Begin Books Network Section\n\n books:\n  driver: overlay\n\n# End Books Network Section\n\n"},kn=["plex"],fn={type:"DockerSwarmService",miteIndex:30024,webInterfaceHostnames:kn,miteString:"\n\n# Begin Plex Service Section\n\n plex:\n  image: plexinc/pms-docker\n  networks:\n   - traefik\n  ports:\n   - 32469:32469\n   - 32400:32400\n   - 32401:32401\n   - 3005:3005\n   - 8324:8324\n   - 1900:1900/udp\n   - 32410:32410/udp\n   - 32412:32412/udp\n   - 32413:32413/udp\n   - 32414:32414/udp\n  volumes:\n   - ${PWD}/media/plex-config:/config\n   - ${PWD}/media/content\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.plex.entrypoints=plainhttp'\n    - 'traefik.http.services.plex.loadbalancer.server.port=32400'\n    - 'traefik.http.routers.plex.rule=Host(\"".concat(kn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.plex-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.plex.middlewares=plex-force-secure'\n    - 'traefik.http.routers.plex.service=plex'\n    - 'traefik.http.routers.plex-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.plex-https.rule=Host(\"").concat(kn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.plex-https.service=plex'\n    - 'traefik.http.routers.plex-https.tls=true'\n    - 'traefik.http.services.plex-https.loadbalancer.server.port=32400'\n    - 'com.MegaDocker.description=Plex - media streaming server'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End Plex Service Section\n\n")},gn={type:"DockerSwarmNetwork",miteIndex:40022,miteString:"\n\n# Begin Plex Network Section\n\n plex:\n  driver: overlay\n\n# End Plex Network Section\n\n"},Sn=r.p+"static/media/booksIcon.1192fd50.png",yn={type:"DockerSwarmNetwork",miteIndex:40002,miteString:"\n\n# Begin Comics Network Section\n\n comics:\n  driver: overlay\n\n# End Comics Network Section\n\n"},vn={type:"DockerSwarmNetwork",miteIndex:40014,miteString:"\n\n# Begin Movies Network Section\n\n movies:\n  driver: overlay\n\n# End Movies Network Section\n\n"},bn={type:"DockerSwarmNetwork",miteIndex:40015,miteString:"\n\n# Begin Music Network Section\n\n music:\n  driver: overlay\n\n# End Music Network Section\n\n"},An={type:"DockerSwarmNetwork",miteIndex:40028,miteString:"\n\n# Begin TV Network Section\n\n tv:\n  driver: overlay\n\n# End TV Network Section\n\n"},Dn={description:"Automatic Books Downloader",folder:"media",isCore:!1,isSelected:!1,manikinGroups:["Content"],manikinIcon:Sn,manikinIndex:1e4,memories:[],mites:[mn,hn,fn,xn,yn,vn,bn,An,gn],name:"Books",ports:[],subfolders:["books-config","content","newsgroups-config","newsgroup-indexer-config","plex-config","requests-config","torrent-config","torrent-indexer-config"]},Mn=["comics"],Rn={type:"DockerSwarmService",miteIndex:30001,webInterfaceHostnames:Mn,miteString:"\n\n# Begin Comics Service Section\n\n comics:\n  image: linuxserver/mylar:latest\n  networks:\n   - comics\n   - traefik\n  volumes:\n   - ${PWD}/media/comics-config:/config\n   - ${PWD}/media/comics-data:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.comics.entrypoints=plainhttp'\n    - 'traefik.http.services.comics.loadbalancer.server.port=8090'\n    - 'traefik.http.routers.comics.rule=Host(\"".concat(Mn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.comics-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.comics.middlewares=comics-force-secure'\n    - 'traefik.http.routers.comics.service=comics'\n    - 'traefik.http.routers.comics-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.comics-https.rule=Host(\"").concat(Mn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.comics-https.service=comics'\n    - 'traefik.http.routers.comics-https.tls=true'\n    - 'traefik.http.services.comics-https.loadbalancer.server.port=8090'\n    - 'com.MegaDocker.description=Mylar - a comics search tool'\n\n# End Comics Service Section\n\n")},wn=r.p+"static/media/comicsIcon.5c388675.png",On={description:"Automatic Comics Downloader",folder:"media",isCore:!1,isSelected:!1,manikinGroups:["Content"],manikinIcon:wn,manikinIndex:10001,memories:[],mites:[Rn,hn,fn,xn,yn,vn,bn,An,gn],name:"Comics",ports:[],subfolders:["comics-config","content","newsgroups-config","newsgroup-indexer-config","plex-config","requests-config","torrent-config","torrent-indexer-config"]},In=["backup"],Pn={type:"DockerSwarmService",miteIndex:30003,webInterfaceHostnames:In,miteString:"\n\n# Begin Backup Service Section\n\n backup:\n  image: georgegeorgulasiv/duplicati\n  networks:\n   - traefik\n  environment:\n   - TZ=$HOSTTIMEZONE\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  volumes:\n   - ${PWD}/:/source\n   - ${PWD}/backups/data/:/backups\n   - ${PWD}/backups/Duplicati/:/data/Duplicati\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.backup.entrypoints=plainhttp'\n    - 'traefik.http.services.backup.loadbalancer.server.port=8200'\n    - 'traefik.http.routers.backup.rule=Host(\"".concat(In[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.backup-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.backup.middlewares=backup-force-secure'\n    - 'traefik.http.routers.backup.service=backup'\n    - 'traefik.http.routers.backup-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.backup-https.rule=Host(\"").concat(In[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.backup-https.service=backup'\n    - 'traefik.http.routers.backup-https.tls=true'\n    - 'traefik.http.services.backup-interface-https.loadbalancer.server.port=8200'\n    - 'com.MegaDocker.description=Duplicati - automated incremental backup and restore with web interface'\n\n# End Backup Service Section\n\n")},En=r.p+"static/media/duplicatiIcon.52b8b782.png",Tn={description:"Incremental Backup",folder:"duplicati",isCore:!0,isSelected:!0,manikinGroups:["Core","Utility"],manikinIcon:En,manikinIndex:10003,memories:[],mites:[Pn],name:"Duplicati",ports:[],subfolders:["data","Duplicati"]},Nn=["drupal"],Fn={type:"DockerSwarmService",miteIndex:30002,webInterfaceHostnames:Nn,miteString:"\n\n# Begin Drupal Service Section\n\n drupal:\n  image: drupal:8.9.13-php7.4-fpm-alpine\n  networks:\n   - ldap\n   - traefik\n   - drupal\n  environment:\n   - SERVER_NAME=drupal.[[PRIMARYDOMAIN]]\n   - DRUPAL_PROFILE=standard\n   - DRUPAL_SITE_NAME=Drupal\n   - DRUPAL_USER=[[DRUPALPOSTGRESUSER]]\n   - DRUPAL_PASS=[[DRUPALPOSTGRESPASSWORD]]\n   - DRUPAL_DBURL=postgres://drupal:drupaluser@[[MOBNAME]]_drupal-postgres:5432/drupaldb\n  volumes:\n   - ${PWD}/logs/drupal:/loglocation\n   - ${PWD}/drupal/modules:/var/www/html/modules\n   - ${PWD}/drupal/profiles:/var/www/html/profiles\n   - ${PWD}/drupal/themes:/var/www/html/themes\n   - ${PWD}/drupal/sites:/var/www/html/sites\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.drupal.entrypoints=plainhttp'\n    - 'traefik.http.services.drupal.loadbalancer.server.port=80'\n    - 'traefik.http.routers.drupal.rule=Host(\"".concat(Nn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.drupal-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.drupal.middlewares=drupal-force-secure'\n    - 'traefik.http.routers.drupal.service=drupal'\n    - 'traefik.http.routers.drupal-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.drupal-https.rule=Host(\"").concat(Nn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.drupal-https.service=drupal'\n    - 'traefik.http.routers.drupal-https.tls=true'\n    - 'traefik.http.services.drupal-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=drupal-Drupal blogging software'\n   placement:\n    constraints:\n     - node.role == manager\n\n\n drupal-postgres:\n  image: postgres\n  networks:\n   - drupal\n  volumes:\n   - ${PWD}/logs/drupal:/loglocation\n   - ${PWD}/drupal/database:/var/lib/postgresql/data\n  environment:\n   - POSTGRES_DB=drupaldb\n   - POSTGRES_USER=[[DRUPALPOSTGRESUSER]]\n   - POSTGRES_PASSWORD=[[DRUPALPOSTGRESPASSWORD]]\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n\n# End Drupal Service Section\n\n")},Cn=r.p+"static/media/drupalIcon.a26cf1fc.png",Bn=function(e){if(!e)return!1;var t=function(e){if(!e)return!1;var t=e.includes(" "),r=e.includes("\t"),n=e.includes("\n"),o=e.includes("\f");return!t&&!r&&!n&&!o&&!(t||r||n||o)}(e),r=!!new RegExp("^[sa-zA-Z0-9]*$").test(e),n=e.length<21&&e.length>4;return r&&n&&t},_n=function(e){if(!e||0===e.length)return!1;var t=!!new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})").test(e),r=e.length>7;return t&&r},Ln={type:"DockerSwarmNetwork",miteIndex:40011,miteString:"\n\n# Begin LDAP Network Section\n\n ldap:\n  driver: overlay\n\n# End LDAP Network Section\n\n"},Un={description:"Drupal Blog",folder:"drupal",isCore:!1,isSelected:!1,manikinGroups:["Content","Development"],manikinIcon:Cn,manikinIndex:10002,memories:[{memoryIndex:20007,memoryMarker:"[[DRUPALPOSTGRESUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Drupal Postgres User",tooltip:"The Drupal Postgres user",value:"",valueType:"text",isReady:!1,validator:Bn},{memoryIndex:20006,memoryMarker:"[[DRUPALPOSTGRESPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Drupal Postgres Password",tooltip:"The password for Drupal to connect to it's PostgreSQL database.",value:"",valueType:"password",isReady:!1,validator:_n}],mites:[Fn,{type:"DockerSwarmNetwork",miteIndex:40003,miteString:"\n\n# Begin Drupal Network Section\n\n drupal:\n  driver: overlay\n\n# End Drupal Network Section\n\n  "},Ln],name:"Drupal",ports:[],subfolders:["modules","profiles","themes","sites","database"]},$n=["kibana"],Hn={type:"DockerSwarmService",miteIndex:30004,webInterfaceHostnames:$n,miteString:"\n\n# Begin ELK Service Section\n \n elasticsearch:\n  image: elastic/elasticsearch:7.12.0\n  environment:\n   - bootstrap.memory_lock=true\n   - cluster.name=\"[[MOBNAME]]-docker-cluster\"\n   - discovery.type=single-node\n   - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'\n   - ES_PATH_CONF=/usr/share/elasticsearch/configs\n   - network.host=0.0.0.0\n   - path.data=/usr/share/elasticsearch/data\n   - path.logs=/usr/share/elasticsearch/logs\n  networks:\n   - elk\n  volumes:\n   - ${PWD}/logs/elk-elasticsearch:/loglocation\n   - ${PWD}/elk/elasticsearch-config:/usr/share/elasticsearch/configs\n   - ${PWD}/elk/elasticsearch-data:/usr/share/elasticsearch/data\n   - ${PWD}/elk/logfiles:/usr/share/elasticsearch/logs\n\n filebeat:\n  image: elastic/filebeat:7.12.0\n  command: filebeat run --modules traefik\n  environment:\n   - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'\n   - ES_PATH_CONF=/usr/share/elasticsearch/configs\n   - bootstrap.memory_lock=true\n   - discovery.type=single-node\n  networks:\n   - elk\n  volumes:\n  - ./logs/elk-filebeats:/loglocation\n  - ./elk/filebeat-config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro\n  - ./elk/filebeat-modules:/usr/share/filebeat/modules.d\n  - /var/lib/docker/containers:/var/lib/docker/containers:ro\n  - /var/run/docker.sock:/var/run/docker.sock\n\n kibana:\n  image: elastic/kibana:7.12.0\n  networks:\n   - traefik\n   - elk\n  environment:\n   - SERVER_NAME=[[MOBNAME]]_elasticsearch:9200\n  volumes:\n   - ${PWD}/logs/elk-kibana:/loglocation\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.kibana.entrypoints=plainhttp'\n    - 'traefik.http.services.kibana.loadbalancer.server.port=5601'\n    - 'traefik.http.routers.kibana.rule=Host(\"".concat($n[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.kibana-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.kibana.middlewares=kibana-force-secure'\n    - 'traefik.http.routers.kibana.service=kibana'\n    - 'traefik.http.routers.kibana-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.kibana-https.rule=Host(\"").concat($n[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.kibana-https.service=kibana'\n    - 'traefik.http.routers.kibana-https.tls=true'\n    - 'traefik.http.services.kibana-https.loadbalancer.server.port=5601'\n    - 'com.MegaDocker.description=Kibana data visualization dashboard'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End ELK Service Section\n\n")},Wn={description:"Log Monitoring",folder:"elk",isCore:!1,isSelected:!1,manikinGroups:["Monitoring"],manikinIcon:r.p+"static/media/elkIcon.8a51351e.png",manikinIndex:10004,memories:[{memoryIndex:20017,memoryMarker:"[[KIBANAUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Kibana User",tooltip:"The Kibana user",value:"",valueType:"text",isReady:!1,validator:Bn},{memoryIndex:20016,memoryMarker:"[[KIBANAPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Kibana Password",tooltip:"The Kibana user's password",value:"",valueType:"password",isReady:!1,validator:_n}],mites:[Hn,{type:"DockerSwarmNetwork",miteIndex:40004,miteString:"\n\n# Begin ELK Network Section\n\n elk:\n  driver: overlay\n\n# End ELK Network Section\n\n"},{type:"Custom",miteString:"",miteIndex:50006,miteFile:{path:"elk/kibana-config",name:"kibana",extension:"yml",permissions:"644",contents:'# MegaDocker kibana configuration file for [[MOBNAME]]\nserver.port: 80\nxpack.reporting.kibanaServer.hostname: 0.0.0.0\nserver.rewriteBasePath: false\nserver.name: "kibana.[[PRIMARYDOMAIN]]"\nelasticsearch.hosts: ["http://[[MOBNAME]]_elasticsearch:9200"]\nkibana.index: ".kibana"\nelasticsearch.username: "[[KIBANAUSER]]"\nelasticsearch.password: "[[KIBANAPASSWORD]]"\nserver.ssl.enabled: true\nserver.ssl.certificate: /ssl/[[PRIMARYDOMAIN]].crt\nserver.ssl.key: /ssl/[[PRIMARYDOMAIN]].key\nlogging.verbose: true\nelasticsearch.logQueries: true\nlogging.dest: stdout\nlogging.json: true\ni18n.locale: "en"\n'}},{type:"Custom",miteString:"",miteIndex:50001,miteFile:{path:"elk/elasticsearch-config",name:"elasticsearch",extension:"yml",permissions:"644",contents:'# MegaDocker elasticsearch.yml file for [[MOBNAME]]\ncluster.name: "[[MOBNAME]]-docker-cluster"\nnetwork.host: 0.0.0.0\npath.data: /usr/share/elasticsearch/data\npath.logs: /usr/share/elasticsearch/logs\n    '}},{type:"Custom",miteString:"",miteIndex:50002,miteFile:{path:"elk/elasticsearch-config",name:"jvm",extension:"options",permissions:"644",contents:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}},{type:"Custom",miteString:"",miteIndex:50003,miteFile:{path:"elk/elasticsearch-config",name:"log4j2",extension:"properties",permissions:"644",contents:"\n\n\n\n\n\n\n\n\n\n\n"}},{type:"Custom",miteString:"",miteIndex:50004,miteFile:{path:"elk/filebeat-config",name:"filebeat",extension:"yml",permissions:"600",contents:'# MegaDocker filebeat.yml configuration file\nfilebeat.config.modules.path: /usr/share/filebeat/modules.d/*.yml\nfilebeat.config.reload.enabled: false\n\nprocessors.add_docker_metadata. host: "unix:///var/run/docker.sock"\n\ndecode_json_fields.fields: ["message"]\ndecode_json_fields.target: "json"\ndecode_json_fields.overwrite_keys: true\n\noutput.elasticsearch.hosts: ["[[MOBNAME]]_elasticsearch:9200"]\noutput.elasticsearch.username: "[[KIBANAUSER]]"\noutput.elasticsearch.password: "[[KIBANAPASSWORD]]"\noutput.elasticsearch.indices:\n - index: "filebeat-%{[agent.version]}-%{+yyyy.MM.dd}"\n\nsetup.kibana.host: "[[MOBNAME]]_kibana:5601"\nsetup.kibana.protocol: "http"\n\nlogging.json: true\nlogging.metrics.enabled: false\n'}}],name:"ELK",ports:[],subfolders:["elasticsearch-config","elasticsearch-data","filebeat-config","filebeat-modules","kibana-config","logfiles"]},jn=["webmail","mail"],Yn={type:"DockerSwarmService",miteIndex:30005,webInterfaceHostnames:jn,miteString:"\n\n# Begin MailServer section\n\n mailserver:\n  image: tvial/docker-mailserver\n  ports:\n   - 25:25\n   - 587:587\n   - 993:993\n  volumes:\n   - ${PWD}/logs/email:/loglocation\n   - ${PWD}/email/maildata:/var/mail\n   - ${PWD}/email/mailstate:/var/mail-state\n   - ${PWD}/email/config:/tmp/docker-mailserver\n## TODO: mount certs correctly\n#   - ${PWD}/traefik/ssl/certs:/certs:ro\n#   - ${PWD}/traefik/ssl/pem/*.[[PRIMARYDOMAIN]].pem:/etc/letsencrypt/live/*.[[PRIMARYDOMAIN]]/*.[[PRIMARYDOMAIN]].pem:ro\n#   - ${PWD}/traefik/ssl/private/*.[[PRIMARYDOMAIN]].key:/etc/letsencrypt/live/*.[[PRIMARYDOMAIN]]/*.[[PRIMARYDOMAIN]]/key:ro\n#   - ${PWD}/traefik/ssl/private/letsencrypt.key:/etc/letsencrypt/live/*.[[PRIMARYDOMAIN]]/letsencrypt.key:ro\n   - ${PWD}/traefik/ssl:/etc/letsencrypt:ro\n  environment:\n   - ENABLE_SPAMASSASSIN=1\n   - ENABLE_CLAMAV=1\n   - ENABLE_POSTGREY=0\n   - ONE_DIR=1\n   - DOMAIN=[[PRIMARYDOMAIN]]\n## TODO: add MX hosts option to ITraefikedServiceMite\n## TODO: add zipDockerSwarm function to generate MX record in dnssetup.sh\n   - OVERRIDE_HOSTNAME=".concat(jn[1],".[[PRIMARYDOMAIN]]\n   - OVERRIDE_DOMAINNAME=").concat(jn[1],".[[PRIMARYDOMAIN]]\n   - POSTMASTER_ADDRESS=postmaster@[[PRIMARYDOMAIN]]\n   - PERMIT_DOCKER=network\n   - SSL_TYPE=manual\n   - SSL_CERT_PATH=/etc/letsencrypt/certs/[[PRIMARYDOMAIN]].crt\n   - SSL_KEY_PATH=/etc/letsencrypt/private/[[PRIMARYDOMAIN]].key\n  networks:\n   - email\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n\n rainloop:\n  image: hardware/rainloop\n  networks:\n   - email\n   - traefik\n  volumes:\n   - ${PWD}/logs/email:/loglocation\n   - ${PWD}/email/rainloop:/rainloop/data\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.rainloop.entrypoints=plainhttp'\n    - 'traefik.http.services.rainloop.loadbalancer.server.port=80'\n    - 'traefik.http.routers.rainloop.rule=Host(\"").concat(jn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.rainloop-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.rainloop.middlewares=rainloop-force-secure'\n    - 'traefik.http.routers.rainloop.service=rainloop'\n    - 'traefik.http.routers.rainloop-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.rainloop-https.rule=Host(\"").concat(jn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.rainloop-https.service=rainloop'\n    - 'traefik.http.routers.rainloop-https.tls=true'\n    - 'traefik.http.services.rainloop-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Rainloop webmail frontend'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End Mailserver Service Section\n\n")},Gn={description:"Email and Webmail",folder:"email",isCore:!1,isSelected:!1,manikinGroups:["Utility"],manikinIcon:r.p+"static/media/emailIcon.edde9678.png",manikinIndex:10005,memories:[],mites:[Yn,{type:"DockerSwarmNetwork",miteIndex:40005,miteString:"\n\n# Begin email Network Section\n\n email:\n  driver: overlay\n\n# End email Network Section\n\n"}],name:"E-mail",ports:[],subfolders:["config","maildata","mailstate","rainloop"]},zn=["filebrowser"],Kn={type:"DockerSwarmService",miteIndex:30006,webInterfaceHostnames:zn,miteString:"\n\n# Begin filebrowser section\n\n filebrowser:\n  image: filebrowser/filebrowser:v2\n  volumes:\n   - ${PWD}/filebrowser/data:/srv\n   - ${PWD}/filebrowser/database.db:/database.db\n  networks:\n   - traefik\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.filebrowser.entrypoints=plainhttp'\n    - 'traefik.http.services.filebrowser.loadbalancer.server.port=80'\n    - 'traefik.http.routers.filebrowser.rule=Host(\"".concat(zn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.filebrowser-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.filebrowser.middlewares=filebrowser-force-secure'\n    - 'traefik.http.routers.filebrowser.service=filebrowser'\n    - 'traefik.http.routers.filebrowser-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.filebrowser-https.rule=Host(\"").concat(zn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.filebrowser-https.service=rainloop'\n    - 'traefik.http.routers.filebrowser-https.tls=true'\n    - 'traefik.http.services.filebrowser-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Filebrowser - a web filesharing interface'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End filebrowser Service Section\n\n")},qn={description:"File Sharing",folder:"filebrowser",isCore:!1,isSelected:!1,manikinGroups:["Utility"],manikinIcon:r.p+"static/media/filebrowserIcon.1ca2562f.png",manikinIndex:10006,memories:[],mites:[Kn,{type:"Custom",miteString:"",miteIndex:50005,miteFile:{path:"filebrowser",name:"database",extension:"db",permissions:"644",contents:""}}],name:"FileBrowser",ports:[],subfolders:["data"]},Zn=["ghost"],Xn={type:"DockerSwarmService",miteIndex:30007,webInterfaceHostnames:Zn,miteString:"\n\n# Begin Ghost Service Section\n\n ghost:\n  image: ghost\n  networks:\n   - ghost\n   - traefik\n  volumes:\n   - ${PWD}/logs/ghost:/loglocation\n  environment:\n   - database__client=mysql\n   - database__connection__host=[[MOBNAME]]_ghost-mariadb\n   - database__connection__user=root\n   - database__connection__password=[[GHOSTMARIADBROOTPASSWORD]]\n   - database__connection__database=[[MOBNAME]]_ghost-mariadb\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.ghost.entrypoints=plainhttp'\n    - 'traefik.http.services.ghost.loadbalancer.server.port=2368'\n    - 'traefik.http.routers.ghost.rule=Host(\"".concat(Zn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.ghost-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.ghost.middlewares=ghost-force-secure'\n    - 'traefik.http.routers.ghost.service=ghost'\n    - 'traefik.http.routers.ghost-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.ghost-https.rule=Host(\"").concat(Zn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.ghost-https.service=ghost'\n    - 'traefik.http.routers.ghost-https.tls=true'\n    - 'traefik.http.services.ghost-https.loadbalancer.server.port=2368'\n    - 'com.MegaDocker.description=Ghost blogging platform'\n\n ghost-mariadb:\n  image: mariadb\n  networks:\n   - ghost\n  volumes:\n   - ${PWD}/logs/ghost:/loglocation\n   - ${PWD}/ghost/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[GHOSTMARIADBROOTPASSWORD]]\n  deploy:\n   restart_policy:\n    condition: any\n\n# End Ghost Service Section\n\n")},Qn={description:"Ghost Blogging",folder:"ghost",isCore:!1,isSelected:!1,manikinGroups:["Content","Development"],manikinIcon:r.p+"static/media/ghostIcon.68272004.png",manikinIndex:10007,memories:[{memoryIndex:20008,memoryMarker:"[[GHOSTMARIADBROOTPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Ghost MariaDB Root Password",tooltip:"The password for the Ghost MariaDB root user",value:"",valueType:"password",isReady:!1,validator:_n}],mites:[Xn,{type:"DockerSwarmNetwork",miteIndex:40006,miteString:"\n\n# Begin Ghost Network Section\n\n ghost:\n  driver: overlay\n\n# End Ghost Network Section\n\n"}],name:"Ghost",ports:[],subfolders:["mariadb"]},Vn=["grocy","barcodes"],Jn={type:"DockerSwarmService",miteIndex:30009,webInterfaceHostnames:Vn,miteString:"\n\n# Begin Grocy Service Section\n\n grocy-app:\n  image: linuxserver/grocy\n  networks:\n   - grocy\n   - traefik\n  volumes:\n   - ${PWD}/grocy/app:/config\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.grocy-app.entrypoints=plainhttp'\n    - 'traefik.http.services.grocy-app.loadbalancer.server.port=80'\n    - 'traefik.http.routers.grocy-app.rule=Host(\"".concat(Vn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.grocy-app-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.grocy-app.middlewares=grocy-app-force-secure'\n    - 'traefik.http.routers.grocy-app.service=grocy-app'\n    - 'traefik.http.routers.grocy-app-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.grocy-app-https.rule=Host(\"").concat(Vn[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.grocy-app-https.service=grocy-app'\n    - 'traefik.http.routers.grocy-app-https.tls=true'\n    - 'traefik.http.services.grocy-app-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Grocy Web Server - home Enterprise Resource Planning software'\n\n grocy-barcode-buddy:\n  image: f0rc3/barcodebuddy-docker\n  networks:\n   - grocy\n   - traefik\n  volumes:\n   - ${PWD}/grocy/barcodebuddy:/config\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.grocy-barcode-buddy.entrypoints=plainhttp'\n    - 'traefik.http.services.grocy-barcode-buddy.loadbalancer.server.port=80'\n    - 'traefik.http.routers.grocy-barcode-buddy.rule=Host(\"").concat(Vn[1],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.grocy-barcode-buddy-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.grocy-barcode-buddy.middlewares=grocy-barcode-buddy-force-secure'\n    - 'traefik.http.routers.grocy-barcode-buddy.service=grocy-barcode-buddy'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.rule=Host(\"").concat(Vn[1],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.service=grocy-barcode-buddy'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.tls=true'\n    - 'traefik.http.services.grocy-barcode-buddy-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Barcode Buddy - barcode scanner add-on for grocy'\n\n# End Grocy Service Section\n\n")},eo={description:"Home Resource Planning",folder:"grocy",isCore:!1,isSelected:!1,manikinGroups:["Monitoring","Utility"],manikinIcon:r.p+"static/media/grocyIcon.f4377a3a.png",manikinIndex:10009,memories:[],mites:[Jn,{type:"DockerSwarmNetwork",miteIndex:40008,miteString:"\n\n# Begin Grocy Network Section\n\n grocy:\n  driver: overlay\n\n# End Grocy Network Section\n\n"}],name:"Grocy",ports:[],subfolders:["app","barcodebuddy"]},to=["heimdall"],ro={type:"DockerSwarmService",miteIndex:30010,webInterfaceHostnames:to,miteString:"\n\n# Begin Heimdall Service Section\n\n heimdall:\n  image: linuxserver/heimdall\n  networks:\n   - traefik\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n   - TZ=$HOSTTIMEZONE\n  volumes:\n   - ${PWD}/logs/heimdall:/loglocation\n   - ${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/config/keys/[[PRIMARYDOMAIN]].crt\n   - ${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/config/keys/[[PRIMARYDOMAIN]].key\n   - ${PWD}/heimdall/php:/config/php\n   - ${PWD}/heimdall/www:/config/www\n   - ${PWD}/heimdall/log:/config/log\n   - ${PWD}/heimdall/nginx:/config/nginx\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.heimdall.entrypoints=plainhttp'\n    - 'traefik.http.services.heimdall.loadbalancer.server.port=80'\n    - 'traefik.http.routers.heimdall.rule=Host(\"".concat(to[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.heimdall-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.heimdall.middlewares=heimdall-force-secure'\n    - 'traefik.http.routers.heimdall.service=heimdall'\n    - 'traefik.http.routers.heimdall-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.heimdall-https.rule=Host(\"").concat(to[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.heimdall-https.service=heimdall'\n    - 'traefik.http.routers.heimdall-https.tls=true'\n    - 'traefik.http.services.heimdall-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Heimdall - a portal for your MegaDocker interface pages'\n  \n# End Heimdall Service Section\n  \n")},no={description:"Web Portal",folder:"heimdall",isCore:!1,isSelected:!1,manikinGroups:["Utility"],manikinIcon:r.p+"static/media/heimdallIcon.f44912ba.png",manikinIndex:10010,memories:[],mites:[ro,{type:"DockerSwarmNetwork",miteIndex:40009,miteString:"\n\n# Begin Heimdall Network Section\n\n heimdall:\n  driver: overlay\n\n# End Heimdall Network Section\n\n"}],name:"Heimdall",ports:[],subfolders:["log","nginx","php","www"]},oo=["kanboard"],io={type:"DockerSwarmService",miteIndex:30011,webInterfaceHostnames:oo,miteString:"\n\n# Begin Kanboard Service Section\n\n kanboard-app:\n  image: kanboard/kanboard\n  networks:\n   - traefik\n   - kanboard\n  environment:\n   - DATABASE_URL=mysql://[[KANBOARDMARIADBUSER]]:[[KANBOARDMARIADBPASSWORD]]@[[MOBNAME]]_kanboard-mariadb/kanboard\n  volumes:\n   - ${PWD}/logs/kanboard:/loglocation\n   - ${PWD}/kanboard/kanboard-data:/var/www/app/data\n   - ${PWD}/kanboard/kanboard-plugins:/var/www/app/plugins\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.kanboard.entrypoints=plainhttp'\n    - 'traefik.http.services.kanboard.loadbalancer.server.port=80'\n    - 'traefik.http.routers.kanboard.rule=Host(\"".concat(oo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.kanboard-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.kanboard.middlewares=kanboard-force-secure'\n    - 'traefik.http.routers.kanboard.service=kanboard'\n    - 'traefik.http.routers.kanboard-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.kanboard-https.rule=Host(\"").concat(oo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.kanboard-https.service=kanboard'\n    - 'traefik.http.routers.kanboard-https.tls=true'\n    - 'traefik.http.services.kanboard-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Kanboard - an extensible kanban board for task sharing'\n\n kanboard-mariadb:\n  image: mariadb\n  networks:\n   - kanboard\n  volumes:\n   - ${PWD}/logs/kanboard:/loglocation\n   - ${PWD}/kanboard/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[KANBOARDMARIADBROOTPASSWORD]]\n   - MYSQL_DATABASE=kanboard\n   - MYSQL_USER=[[KANBOARDMARIADBUSER]]\n   - MYSQL_PASSWORD=[[KANBOARDMARIADBPASSWORD]]\n  \n# End Kanboard Service Section\n  \n  ")},ao={description:"Task Sharing",folder:"kanboard",isCore:!1,isSelected:!1,manikinGroups:["Utility","Organization","Productivity"],manikinIcon:r.p+"static/media/kanboardIcon.8bb1f0a7.png",manikinIndex:10011,memories:[{memoryIndex:20013,memoryMarker:"[[KANBOARDMARIADBPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Kanboard MariaDB Password",tooltip:"The Kanboard MariaDB user's password",value:"",valueType:"password",isReady:!1,validator:_n},{memoryIndex:20014,memoryMarker:"[[KANBOARDMARIADBROOTPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Kanboard MariaDB Root Password",tooltip:"The Kanboard MariaDB root user's password",value:"",valueType:"password",isReady:!1,validator:_n},{memoryIndex:20015,memoryMarker:"[[KANBOARDMARIADBUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Kanboard MariaDB User",tooltip:"The Kanboard MariaDB user",value:"",valueType:"text",isReady:!1,validator:Bn}],mites:[io,{type:"DockerSwarmNetwork",miteIndex:40010,miteString:"\n\n# Begin Kanboard Network Section\n\n kanboard:\n  driver: overlay\n\n# End Kanboard Network Section\n\n"}],name:"Kanboard",ports:[],subfolders:["kanboard-data","kanboard-plugins","mariadb"]},so={memoryIndex:20018,memoryMarker:"[[LDAPADMINPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"LDAP Admin Password",tooltip:"The LDAP admin user's password",value:"",valueType:"password",isReady:!1,validator:_n},po={memoryIndex:20019,memoryMarker:"[[LDAPADMINUSERNAME]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"LDAP Admin User",tooltip:"The LDAP admin user",value:"",valueType:"text",isReady:!1,validator:Bn},co={memoryIndex:20020,memoryMarker:"[[LDAPCONFIGURATIONPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"LDAP Configuration Password",tooltip:"The LDAP configuration password",value:"",valueType:"password",isReady:!1,validator:_n},lo=["ldapadmin","authelia","ldap"],mo={type:"DockerSwarmService",miteIndex:30012,webInterfaceHostnames:lo,miteString:"\n\n# Begin LDAP Service Section\n\n ldap:\n  image: osixia/openldap\n  command:  --copy-service\n  networks:\n   - ldap\n  environment:\n   - LDAP_BACKEND=mdb\n   - LDAP_DOMAIN=[[PRIMARYDOMAIN]]\n   - LDAP_ORGANISATION=[[LDAPORGANISATION]]\n   - LDAP_ADMIN_PASSWORD=[[LDAPADMINPASSWORD]]\n   - LDAP_CONFIG_PASSWORD=[[LDAPCONFIGURATIONPASSWORD]]\n   - LDAP_TLS_CIPHER_SUITE=NORMAL\n   - LDAP_TLS_VERIFY_CLIENT=allow\n   - LDAP_TLS=true\n   - LDAP_TLS_CRT_FILENAME=[[PRIMARYDOMAIN]].crt\n   - LDAP_TLS_KEY_FILENAME=[[PRIMARYDOMAIN]].key\n   - LDAP_TLS_CA_CRT_FILENAME=[[PRIMARYDOMAIN]].crt\n  tty: true\n  stdin_open: true\n  volumes:\n   - ${PWD}/logs/ldap:/var/log/ldap\n   - ${PWD}/ldap/ldif-files:/container/service/slapd/assets/config/bootstrap/ldif/custom\n   - ${PWD}/ldap/lib:/var/lib/ldap\n   - ${PWD}/ldap/slapd.d:/etc/ldap/slapd.d\n   - ${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/container/service/slapd/assets/certs/[[PRIMARYDOMAIN]].crt:ro\n   - ${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/container/service/slapd/assets/certs/[[PRIMARYDOMAIN]].key:ro\n  ports:\n   - 389:389\n   - 636:636\n\n ldapadmin:\n  image: osixia/phpldapadmin:latest\n  command: --copy-service\n  environment:\n   - SERVER_NAME=[[MOBNAME]]_ldap\n   - PHPLDAPADMIN_LDAP_HOSTS=[[MOBNAME]]_ldap\n   - PHPLDAPADMIN_TRUST_PROXY_SSL=true\n   - PHPLDAPADMIN_HTTPS=false\n   - PHPLDAPADMIN_SERVER_ADMIN=[[LETSENCRYPTEMAIL]]\n   - PHPLDAPADMIN_HTTPS_CRT_FILENAME=certs/[[PRIMARYDOMAIN]].crt\n   - PHPLDAPADMIN_HTTPS_KEY_FILENAME=private/[[PRIMARYDOMAIN]].key\n   - PHPLDAPADMIN_HTTPS_CA_CRT_FILENAME=certs/[[PRIMARYDOMAIN]].crt\n  volumes:\n   - ${PWD}/logs/ldap:/loglocation\n   - ${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/container/service/phpldapadmin/assets/apache2/certs/certs/[[PRIMARYDOMAIN]].crt:ro\n   - ${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/container/service/phpldapadmin/assets/apache2/certs/private/[[PRIMARYDOMAIN]].key:ro\n   - ${PWD}/traefik/ssl/private/letsencrypt.key:/container/service/phpldapadmin/assets/apache2/certs/certs/letsencrypt.key:ro\n   - ${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/container/service/ldap-client/assets/certs/[[PRIMARYDOMAIN]].crt:ro\n   - ${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/container/service/ldap-client/assets/certs/[[PRIMARYDOMAIN]].key:ro\n   - ${PWD}/traefik/ssl/private/letsencrypt.key:/container/service/ldap-client/assets/certs/letsencrypt.key:ro\n  networks:\n   - ldap\n   - traefik\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.ldapadmin.entrypoints=plainhttp'\n    - 'traefik.http.services.ldapadmin.loadbalancer.server.port=80'\n    - 'traefik.http.routers.ldapadmin.rule=Host(\"".concat(lo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.ldapadmin-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.ldapadmin.middlewares=ldapadmin-force-secure'\n    - 'traefik.http.routers.ldapadmin.service=ldapadmin'\n    - 'traefik.http.routers.ldapadmin-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.ldapadmin-https.rule=Host(\"").concat(lo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.ldapadmin-https.service=ldapadmin'\n    - 'traefik.http.routers.ldapadmin-https.tls=true'\n    - 'traefik.http.services.ldapadmin-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=LDAP user authentication server'\n\n authelia-app:\n  image: authelia/authelia\n  networks:\n   - ldap\n   - traefik\n  environment:\n   - TZ=$HOSTTIMEZONE\n  volumes:\n   - ${PWD}/ldap/authelia-data:/var/lib/authelia\n   - ${PWD}/ldap/authelia-config/configuration.yml:/etc/authelia/configuration.yml:ro\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.authelia.entrypoints=plainhttp'\n    - 'traefik.http.services.authelia.loadbalancer.server.port=9091'\n    - 'traefik.http.routers.authelia.rule=Host(\"").concat(lo[1],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.authelia-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.authelia.middlewares=ldapadmin-force-secure'\n    - 'traefik.http.routers.authelia.service=authelia'\n    - 'traefik.http.routers.authelia-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.authelia-https.rule=Host(\"").concat(lo[1],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.authelia-https.service=authelia'\n    - 'traefik.http.routers.authelia-https.tls=true'\n    - 'traefik.http.services.authelia-https.loadbalancer.server.port=9091'\n    - 'com.MegaDocker.description=Authelia - authentication front-end'\n\n authelia-mariadb:\n  image: mariadb\n  networks:\n   - ldap\n  volumes:\n   - ${PWD}/ldap/authelia-mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[AUTHELIAMARIADBROOTPASSWORD]]\n   - MYSQL_DATABASE=authelia\n   - MYSQL_USER=[[AUTHELIAMARIADBUSER]]\n   - MYSQL_PASSWORD=[[AUTHELIAMARIADBPASSWORD]]\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'com.MegaDocker.description=Authelia MariaDB - MariaDB database to store Authelia data'\n  \n# End LDAP Service Section\n\n")},uo={description:"Authentication",folder:"ldap",isCore:!0,isSelected:!0,manikinGroups:["Core","Utility"],manikinIcon:r.p+"static/media/ldapIcon.bc5b181f.png",manikinIndex:10012,memories:[{memoryIndex:2e4,memoryMarker:"[[AUTHELIAMARIADBPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Authelia MariaDB Password",tooltip:"The password for the Authelia MariaDB user",value:"",valueType:"text",isReady:!1,validator:_n},{memoryIndex:20001,memoryMarker:"[[AUTHELIAMARIADBROOTPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Authelia MariaDB Root Password",tooltip:"The password for the Authelia MariaDB root user",value:"",valueType:"password",isReady:!1,validator:_n},{memoryIndex:20002,memoryMarker:"[[AUTHELIAMARIADBUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Authelia MariaDB User",tooltip:"The Authelia MariaDB user",value:"",valueType:"text",isReady:!1,validator:Bn},po,so,co,{memoryIndex:20021,memoryMarker:"[[LDAPORGANISATION]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"LDAP Organisation Name",tooltip:"The top-level LDAP organization",value:"",valueType:"text",isReady:!1,validator:function(e){return!(!e||0===e.length)}}],mites:[{type:"Custom",miteString:"",miteIndex:5e4,miteFile:{path:"ldap/authelia-conf",name:"authelia",extension:"conf",permissions:"644",contents:'# MegaDocker authelia.conf file for [[MOBNAME]]\nhost: 0.0.0.0\nport: 9091\nlog_level: debug\ndefault_redirection_url: https://authelia.[[PRIMARYDOMAIN]]/\n\ntotp:\n issuer: [[PRIMARYDOMAIN]]\n\n authentication_backend:\n ldap:\n  url: ldaps://[[MOBNAME]]_ldap\n  skip_verify: false\n  base_dn: dc=ldap,[[LDAPDOMAINASDCS]]\n  username_attribute: uid\n  additional_users_dn: ou=users\n  users_filter: (&({username_attribute}={input})(objectClass=person))\n  additional_groups_dn: ou=groups\n  groups_filter: (&(member={dn})(objectclass=groupOfNames))\n  group_name_attribute: cn\n  mail_attribute: mail\n  user: cn=[[LDAPADMINUSER]],dc=ldap,[[LDAPDOMAINASDCS]]\n  password: [[LDAPADMINPASSWORD]]\n\nnotifier:\n smtp:\n  username: [[LDAPMAILUSERNAME]]\n  sender: [[LDAPMAILUSERNAME]]@[[LDAPMAILDOMAIN]]\n  password: [[LDAPSMTPASSWORD]]\n  host: [[LDAPSMTPHOST]]\n  port: 587\n\njwt_secret: [[LDAPJWTSECRET]]\n\naccess_control:\n default_policy: deny\n rules:\n  - domain: "*.[[PRIMARYDOMAIN]]"\n    policy: one_factor\n\nsession:\n name: authelia_session\n secret: [[LDAPAUTHELIASESSIONSECRET]]\n expiration: 3600\n inactivity: 300\n domain: [[PRIMARYDOMAIN]]\n\nregulation:\n max_retries: 3\n find_time: 90\n ban_time: 300\n    \nstorage:\n mysql:\n  host: [[MOBNAME]]_authelia-mariadb\n  port: 3306\n  database: authelia\n  username: [[LDAPADMINUSER]]\n  password: [[LDAPADMINPASSWORD]]\n\n        '}},mo,Ln,pn],name:"LDAP",ports:[],subfolders:["authelia-conf","authelia-data","authelia-mariadb","conf","pages","log","certs","lib","ldif-files","slapd.d"]},ho=["ledger"],xo={type:"DockerSwarmService",miteIndex:30013,webInterfaceHostnames:ho,miteString:"\n\n# Begin Ledger Section\n\n ledger:\n  image: ledgersmb/ledgersmb\n  networks:\n   - ledger\n   - traefik\n  environment:\n   - DEFAULT_DB=ledger\n   - POSTGRES_HOST=[[MOBNAME]]_ledger-postgres\n   - POSTGRES_USER=[[LEDGERUSER]]\n   - POSTGRES_PASSWORD=[[LEDGERPOSTGRESPASSWORD]]\n  deploy:\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.ledger.entrypoints=plainhttp'\n    - 'traefik.http.services.ledger.loadbalancer.server.port=5762'\n    - 'traefik.http.routers.ledger.rule=Host(\"".concat(ho[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.ledger-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.ledger.middlewares=ledger-force-secure'\n    - 'traefik.http.routers.ledger.service=ledger'\n    - 'traefik.http.routers.ledger-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.ledger-https.rule=Host(\"").concat(ho[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.ledger-https.service=ledger'\n    - 'traefik.http.routers.ledger-https.tls=true'\n    - 'traefik.http.services.ledger-https.loadbalancer.server.port=5762'\n    - 'com.MegaDocker.description=LedgerSMB - Bookkeeping application'\n\n ledger-postgres:\n  image: postgres\n  networks:\n   - ledger\n  environment:\n   - POSTGRES_USER=[[LEDGERPOSTGRESUSER]]\n   - POSTGRES_PASSWORD=[[LEDGERPOSTGRESPASSWORD]]\n   - PGDATA=/var/lib/postgresql/data/pgdata\n  volumes:\n   - ${PWD}/ledger:/var/lib/postgresql/data\n\n# End Ledger Section\n\n")},ko={memoryIndex:20022,memoryMarker:"[[LEDGERPOSTGRESPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Ledger Postgres Password",tooltip:"The LedgerSMB Postgres user's password",value:"",valueType:"password",isReady:!1,validator:_n},fo={description:"Bookkeeping",folder:"ledger",isCore:!1,isSelected:!1,manikinGroups:["Utility","Financial","Organization","Productivity"],manikinIcon:r.p+"static/media/ledgerIcon.0a660951.png",manikinIndex:10013,memories:[ko,{memoryIndex:20023,memoryMarker:"[[LEDGERPOSTGRESUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Ledger Postgres User",tooltip:"The LedgerSMB Postgres user",value:"",valueType:"text",isReady:!1,validator:Bn}],mites:[xo,{type:"DockerSwarmNetwork",miteIndex:40012,miteString:"\n\n# Begin Ledger Network Section\n\n ledger:\n  driver: overlay\n\n# End Ledger Network Section\n\n"}],name:"Ledger",ports:[],subfolders:["pgdata"]},go=["mealie"],So={type:"DockerSwarmService",miteIndex:30014,webInterfaceHostnames:go,miteString:"\n\n# Begin Mealie Service Section\n \n mealie:\n  image: hkotel/mealie:latest\n  environment:\n   - db_type=sqlite \n  volumes:\n   - /var/data/mealie:/app/data\n   - /etc/localtime:/etc/localtime:ro\n  networks:\n   - traefik\n  deploy:\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.mealie.entrypoints=plainhttp'\n    - 'traefik.http.services.mealie.loadbalancer.server.port=80'\n    - 'traefik.http.routers.mealie.rule=Host(\"".concat(go[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.mealie-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.mealie.middlewares=mealie-force-secure'\n    - 'traefik.http.routers.mealie.service=kanboard'\n    - 'traefik.http.routers.mealie-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.mealie-https.rule=Host(\"").concat(go[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.mealie-https.service=mealie'\n    - 'traefik.http.routers.mealie-https.tls=true'\n    - 'traefik.http.services.mealie-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Mealie - a recipe manager and meal planner'\n\n# End Mealie Service Section\n\n")},yo={description:"Recipe Manager and Meal Planning",folder:"",isCore:!1,isSelected:!1,manikinGroups:["Organization"],manikinIcon:r.p+"static/media/mealieIcon.e1aeed47.png",manikinIndex:10014,memories:[],mites:[So],name:"Mealie",ports:[],subfolders:[]},vo=["n8n"],bo={type:"DockerSwarmService",miteIndex:30018,webInterfaceHostnames:vo,miteString:"\n\n# Begin n8n Service Section\n\n n8n:\n  image: n8nio/n8n:latest\n  networks:\n   - n8n\n   - traefik\n  environment:\n   - ZABBIX_HOSTNAME=n8n\n   - NODE_ENV=production\n   - N8N_BASIC_AUTH_ACTIVE=true\n   - N8N_BASIC_AUTH_USER=[[N8NUSERNAME]]\n   - N8N_BASIC_AUTH_PASSWORD=[[N8NPASSWORD]]\n   - GENERIC_TIMEZONE=HOSTTIMEZONE\n   - WEBHOOK_TUNNEL_URL=https://".concat(vo[0],".[[PRIMARYDOMAIN]]/\n   - VUE_APP_URL_BASE_API=https://").concat(vo[0],".[[PRIMARYDOMAIN]]/\n   - N8N_PROTOCOL=https\n   - N8N_HOST=").concat(vo[0],".[[PRIMARYDOMAIN]]\n   - N8N_PORT=5678 \n   - DEBUG_MODE=FALSE\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n   - DATA_FOLDER=/root/n8n/\n   - DOMAIN_NAME=[[PRIMARYDOMAIN]]\n   - SUBDOMAIN=").concat(vo[0],"\n  volumes:\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n   - ${PWD}/n8n/data:/root/n8n\n   - ${PWD}/n8n/settings:/root/.n8n\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.n8n.entrypoints=plainhttp'\n    - 'traefik.http.services.n8n.loadbalancer.server.port=5678'\n    - 'traefik.http.routers.n8n.rule=Host(\"").concat(vo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.n8n-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.n8n.middlewares=n8n-force-secure'\n    - 'traefik.http.routers.n8n.service=n8n'\n    - 'traefik.http.routers.n8n-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.n8n-https.rule=Host(\"").concat(vo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.n8n-https.service=n8n'\n    - 'traefik.http.routers.n8n-https.tls=true'\n    - 'traefik.http.services.n8n-https.loadbalancer.server.port=5678'\n    - 'com.MegaDocker.description=n8n - a middleware to connect multiple services'\n\n# End n8n Service Section \n\n")},Ao={description:"Automation and Integration",folder:"n8n",isCore:!0,isSelected:!0,manikinGroups:["Utility"],manikinIcon:r.p+"static/media/n8nIcon.8adca8a2.png",manikinIndex:10017,memories:[{memoryIndex:20028,memoryMarker:"[[N8NUSERNAME]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"n8n User",tooltip:"The n8n admin user",value:"",valueType:"text",isReady:!1,validator:Bn},{memoryIndex:20027,memoryMarker:"[[N8NPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"n8n Password",tooltip:"The password for the n8n admin user",value:"",valueType:"password",isReady:!1,validator:_n}],mites:[bo,{type:"DockerSwarmNetwork",miteIndex:40016,miteString:"\n\n# Begin n8n Network Section\n\n n8n:\n  driver: overlay\n\n# End n8n Network Section\n\n"}],name:"n8n",ports:[],subfolders:["data","settings"]},Do=["nextcloud"],Mo={type:"DockerSwarmService",miteIndex:30019,webInterfaceHostnames:Do,miteString:"\n\n# Begin NextCloud Service Sections\n\n nextcloud:\n  image: nextcloud\n  networks:\n   - nextcloud\n   - traefik\n  volumes:\n   - ${PWD}/nextcloud/application:/var/www/html\n  environment:\n   - MYSQL_HOST=[[MOBNAME]]_nextcloud_mariadb\n   - MYSQL_PASSWORD=[[NEXTCLOUDMARIADBPASSWORD]]\n   - MYSQL_DATABASE=nextcloud\n   - MYSQL_USER=[[NEXTCLOUDMARIADBUSER]]\n  deploy:\n   restart_policy:\n    condition: any\n   placement:\n    constraints:\n     - node.role == manager\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.nextcloud.entrypoints=plainhttp'\n    - 'traefik.http.services.nextcloud.loadbalancer.server.port=80'\n    - 'traefik.http.routers.nextcloud.rule=Host(\"".concat(Do[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.nextcloud-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.nextcloud.middlewares=nextcloud-force-secure'\n    - 'traefik.http.routers.nextcloud.service=nextcloud'\n    - 'traefik.http.routers.nextcloud-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.nextcloud-https.rule=Host(\"").concat(Do[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.nextcloud-https.service=nextcloud'\n    - 'traefik.http.routers.nextcloud-https.tls=true'\n    - 'traefik.http.services.nextcloud-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Nextcloud office suite'\n\n nextcloud-mariadb:\n  image: mariadb\n  networks:\n   - nextcloud\n  command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW\n  volumes:\n   - ${PWD}/nextcloud/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[NEXTCLOUDMARIADBROOTPASSWORD]]\n   - MYSQL_PASSWORD=[[NEXTCLOUDMARIADBPASSWORD]]\n   - MYSQL_DATABASE=nextcloud\n   - MYSQL_USER=[[NEXTCLOUDMARIADBUSER]]\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - \"com.MegaDocker.description=MariaDB - Storage for NextCloud\"\n  placement:\n   constraints:\n    - node.role == manager\n\n# End NextCloud Service Section\n\n")},Ro={description:"Filesharing",folder:"nextcloud",isCore:!1,isSelected:!1,manikinGroups:["Utility","Organization","Productivity"],manikinIcon:r.p+"static/media/nextcloudIcon.b557d31b.png",manikinIndex:10018,memories:[{memoryIndex:20029,memoryMarker:"[[NEXTCLOUDMARIADBPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Nextcloud MariaDB Password",tooltip:"The Nextcloud MariaDB password",value:"",valueType:"password",isReady:!1,validator:_n},{memoryIndex:20030,memoryMarker:"[[NEXTCLOUDMARIADBROOTPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Nextcloud MariaDB Root Password",tooltip:"The Nextcloud MariaDB root user",value:"",valueType:"password",isReady:!1,validator:_n},{memoryIndex:20031,memoryMarker:"[[NEXTCLOUDMARIADBUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"Nextcloud MariaDB User",tooltip:"The Nextcloud MariDB user.",value:"",valueType:"text",isReady:!1,validator:Bn}],mites:[Mo,{type:"DockerSwarmNetwork",miteIndex:40017,miteString:"\n\n# Begin Nextcloud Network Section\n\n nextcloud:\n  driver: overlay\n\n# End Nextcloud Network Section\n\n"}],name:"Nextcloud",ports:[],subfolders:["application","mariadb"]},wo=["nginx"],Oo={type:"DockerSwarmService",miteIndex:30020,webInterfaceHostnames:wo,miteString:"\n\n# Begin Nginx Service Sections\n\n nginx:\n  image: nginx:alpine\n  networks:\n   - traefik\n  volumes:\n   - ${PWD}/logs/nginx:/loglocation\n   - ${PWD}/nginx/pages:/usr/share/nginx/html\n   - ${PWD}/nginx/log:/var/log/nginx/log\n  environment:\n   - NGINX_HOST=www.[[PRIMARYDOMAIN]]\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.nginx.entrypoints=plainhttp'\n    - 'traefik.http.services.nginx.loadbalancer.server.port=80'\n    - 'traefik.http.routers.nginx.rule=Host(\"".concat(wo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.nginx-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.nginx.middlewares=nginx-force-secure'\n    - 'traefik.http.routers.nginx.service=nginx'\n    - 'traefik.http.routers.nginx-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.nginx-https.rule=Host(\"").concat(wo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.nginx-https.service=nginx'\n    - 'traefik.http.routers.nginx-https.tls=true'\n    - 'traefik.http.services.nginx-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=nginx - Nginx web server'\n\n# End Nginx Service Section\n\n")},Io={description:"HTTP/S Web Server",folder:"nginx",isCore:!1,isSelected:!1,manikinGroups:["Utility"],manikinIcon:r.p+"static/media/nginxIcon.054bfc6d.png",manikinIndex:10019,memories:[],mites:[Oo,{type:"DockerSwarmNetwork",miteIndex:40018,miteString:"\n\n# Begin Nginx Network Section\n\n nginx:\n  driver: overlay\n\n# End Nginx Network Section\n\n"},{type:"Custom",miteString:"",miteIndex:50012,miteFile:{path:"nginx/pages",name:"index",extension:"html",permissions:"644",contents:'\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico" />\n    <link\n      rel="stylesheet"\n      href="https://fonts.googleapis.com/css?family=Asap"\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\n    <meta name="theme-color" content="#000000" />\n    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />\n    <title>MEGADocker</title>\n  </head>\n  <body>\n    <div id="root">\n      <h1>\n        Welcome to MegaDocker!\n      </h1>\n      <p>\n        You should populate your /nginx/pages folder inside of your mob folder with some actual content.\n      </p>\n    </div>\n  </body>\n</html>\n    '}}],name:"Nginx",ports:[],subfolders:["pages","log"]},Po=["opensourcepos"],Eo={description:"Point of Sale",folder:"opensourcepos",isCore:!1,isSelected:!1,manikinGroups:["Utility","Financial"],manikinIcon:r.p+"static/media/opensourceposIcon.4ae12f81.png",manikinIndex:10020,memories:[{memoryIndex:20034,memoryMarker:"[[OPENSOURCEPOSMARIADBPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"osPOS MariaDB Password",tooltip:"The osPOS MariaDB user's password",value:"",valueType:"password",isReady:!1,validator:_n},{memoryIndex:20036,memoryMarker:"[[OPENSOURCEPOSMARIADBUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"osPOS MariaDB User",tooltip:"The osPOS MariaDB user",value:"",valueType:"text",isReady:!1,validator:Bn},{memoryIndex:20035,memoryMarker:"[[OPENSOURCEPOSMARIADBROOTPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"osPOS MariaDB Root Password",tooltip:"The root password for osPOS's MariaDB instance",value:"",valueType:"password",isReady:!1,validator:_n}],mites:[{type:"DockerSwarmService",miteIndex:30021,webInterfaceHostnames:Po,miteString:"\n\n# Begin opensourcePOS Service Section\n\n opensourcepos-app:\n  image: jekkos/opensourcepos:latest\n  networks:\n   - opensourcepos\n   - traefik\n  volumes:\n   - ${PWD}/opensourcepos/app:/app/public/uploads\n#   - ${PWD}/logs/opensourcepos/app:/app/application/logs\n  environment:\n   - CI_ENV=production\n   - FORCE_HTTPS=true\n   - PHP_TIMEZONE=UTC\n   - MYSQL_USERNAME=[[OPENSOURCEPOSMARIADBUSER]]\n   - MYSQL_PASSWORD=[[OPENSOURCEPOSMARIADBPASSWORD]]\n   - MYSQL_DB_NAME=opensourcepos\n   - MYSQL_HOST_NAME=[[MOBNAME]]_opensourcepos-mariadb\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.opensourcepos.entrypoints=plainhttp'\n    - 'traefik.http.services.opensourcepos.loadbalancer.server.port=80'\n    - 'traefik.http.routers.opensourcepos.rule=Host(\"".concat(Po[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.opensourcepos-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.opensourcepos.middlewares=opensourcepos-force-secure'\n    - 'traefik.http.routers.opensourcepos.service=opensourcepos'\n    - 'traefik.http.routers.opensourcepos-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.opensourcepos-https.rule=Host(\"").concat(Po[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.opensourcepos-https.service=opensourcepos'\n    - 'traefik.http.routers.opensourcepos-https.tls=true'\n    - 'traefik.http.services.opensourcepos-interface-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=opensourcePOS - Point of Sale system'\n\n opensourcepos-mariadb:\n  image: mariadb:latest\n  networks:\n   - opensourcepos\n  volumes:\n## TODO: add database.sql customMite\n   - ${PWD}/opensourcepos/database/database.sql:/docker-entrypoint-initdb.d/database.sql\n   - ${PWD}/opensourcepos/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[OPENSOURCEPOSMARIADBROOTPASSWORD]]\n   - MYSQL_DATABASE=opensourcepos\n   - MYSQL_USER=[[OPENSOURCEPOSMARIADBUSER]]\n   - MYSQL_PASSWORD=[[OPENSOURCEPOSMARIADBPASSWORD]]\n  deploy:\n   restart_policy:\n    condition: any\n\n# End opensourcePOS Service Section\n\n")},{type:"DockerSwarmNetwork",miteIndex:40019,miteString:"\n\n# Begin opensourcePOS Network Section\n\n opensourcepos:\n  driver: overlay\n\n# End opensourcePOS Network Section\n\n"}],name:"osPOS",ports:[],subfolders:["mariadb","opensourcepos"]},To=["pihole"],No={type:"DockerSwarmService",miteIndex:30023,webInterfaceHostnames:To,miteString:"\n  \n# Begin pihole service section\n\n pihole:\n  image: pihole/pihole:latest\n  networks:\n   - traefik\n  ports:\n   - 53:53/tcp\n   - 53:53/udp\n  environment:\n   TZ=$HOSTTIMEZONE\n   WEBPASSWORD=[[PIHOLEPASSWORD]]\n  volumes:\n   - ${PWD}/logs/pihole:/loglocation\n   - ${PWD}/pihole/etc-pihole/:/etc/pihole/\n   - ${PWD}/pihole/etc-dnsmasq/:/etc/dnsmasq.d/\n  dns:\n   - 9.9.9.9\n   - 8.8.8.8\n   - 8.8.4.4\n   - 1.1.1.1\n   - 1.0.0.1\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.pihole.entrypoints=plainhttp'\n    - 'traefik.http.services.pihole.loadbalancer.server.port=80'\n    - 'traefik.http.routers.pihole.rule=Host(\"".concat(To[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.pihole-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.pihole.middlewares=pihole-force-secure'\n    - 'traefik.http.routers.pihole.service=pihole'\n    - 'traefik.http.routers.pihole-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.pihole-https.rule=Host(\"").concat(To[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.pihole-https.service=pihole'\n    - 'traefik.http.routers.pihole-https.tls=true'\n    - 'traefik.http.services.pihole-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Pihole DNS-based adblocker'\n\n# End pihole service section\n\n")},Fo={memoryIndex:20037,memoryMarker:"[[PIHOLEPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"Pihole Password",tooltip:"The Pihole admin user's password",value:"",valueType:"password",isReady:!1,validator:_n},Co={description:"Network Ad Blocker",folder:"pihole",isCore:!1,isSelected:!1,manikinGroups:["Utility","Network"],manikinIcon:r.p+"static/media/piholeIcon.7339fee8.png",manikinIndex:10022,memories:[Fo],mites:[No,{type:"DockerSwarmNetwork",miteIndex:40021,miteString:"\n\n# Begin pihole Network Section\n\n pihole:\n  driver: overlay\n\n# End pihole Network Section\n\n"}],name:"Pihole",ports:[],subfolders:["etc-pihole","etc-dnsmasq"]},Bo=["portainer"],_o={type:"DockerSwarmService",miteIndex:30025,webInterfaceHostnames:Bo,miteString:"\n\n# Begin Portainer Service Section\n\n portainer:\n  image: portainer/portainer\n  networks:\n   - traefik\n  command: '--no-auth'\n  volumes:\n   - ${PWD}/logs/portainer:/loglocation\n   - /var/run/docker.sock:/var/run/docker.sock\n  deploy:\n   mode: global\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.portainer.entrypoints=plainhttp'\n    - 'traefik.http.services.portainer.loadbalancer.server.port=9000'\n    - 'traefik.http.routers.portainer.rule=Host(\"".concat(Bo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.portainer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.portainer.middlewares=portainer-force-secure'\n    - 'traefik.http.routers.portainer.service=portainer'\n    - 'traefik.http.routers.portainer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.portainer-https.rule=Host(\"").concat(Bo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.portainer-https.service=portainer'\n    - 'traefik.http.routers.portainer-https.tls=true'\n    - 'traefik.http.services.portainer-https.loadbalancer.server.port=9000'\n    - 'com.MegaDocker.description=Portainer docker host management UI'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End Portainer Service Section\n\n")},Lo={description:"Docker Host GUI",folder:"portainer",isSelected:!1,isCore:!1,manikinGroups:["Infrastructure","Utility","Monitoring","Network"],manikinIcon:r.p+"static/media/portainerIcon.73d6b827.png",manikinIndex:10023,memories:[],mites:[_o,{type:"DockerSwarmNetwork",miteIndex:40023,miteString:"\n\n# Begin Portainer Network Section\n\n portainer:\n  driver: overlay\n\n# End Portainer Network Section\n\n"}],name:"Portainer",ports:[],subfolders:[]},Uo=["rocketchat"],$o={type:"DockerSwarmService",miteIndex:30026,webInterfaceHostnames:Uo,miteString:"\n\n# Begin Rocketchat Service Section\n\n rocketchat-mongo:\n  image: mongo\n  networks:\n   - rocketchat\n  command: mongod --replSet rocketchat\n  volumes:\n   - ${PWD}/rocketchat/database:/data/db\n   - ${PWD}/rocketchat/dump:/dump\n  deploy:\n   restart_policy:\n    condition: any\n\n rocketchat-mongo-replicator:\n  image: mongo\n  networks:\n   - rocketchat\n  command: 'mongo [[MOBNAME]]_rocketchat-mongo/rocketchat --eval \"rs.initiate({ _id: ''rocketchat'', members: [ { _id: 0, host: ''[[MOBNAME]]_rocketchat-mongo:27017'' } ]})\"'\n  deploy:\n   restart_policy:\n    condition: on-failure\n\n rocketchat-app:\n  image: rocketchat/rocket.chat\n  command: node main.js\n  networks:\n   - ldap\n   - rocketchat\n   - traefik\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.rocketchat.entrypoints=plainhttp'\n    - 'traefik.http.services.rocketchat.loadbalancer.server.port=3000'\n    - 'traefik.http.routers.rocketchat.rule=Host(\"".concat(Uo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.rocketchat-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.rocketchat.middlewares=rocketchat-force-secure'\n    - 'traefik.http.routers.rocketchat.service=rocketchat'\n    - 'traefik.http.routers.rocketchat-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.rocketchat-https.rule=Host(\"").concat(Uo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.rocketchat-https.service=rocketchat'\n    - 'traefik.http.routers.rocketchat-https.tls=true'\n    - 'traefik.http.services.rocketchat-https.loadbalancer.server.port=3000'\n    - 'com.MegaDocker.description=RockeChat team management software'\n  volumes:\n   - ${PWD}/rocketchat/uploads:/app/uploads\n  environment:\n   - PORT=3000\n   - ROOT_URL=https://rocketchat.[[PRIMARYDOMAIN]]\n   - MONGO_URL=mongodb://[[MOBNAME]]_rocketchat-mongo:27017/rocketchat\n   - MONGO_OPLOG_URL=mongodb://[[MOBNAME]]_rocketchat-mongo:27017/local\n\n rocketchat-hubot:\n  image: rocketchat/hubot-rocketchat:latest\n  deploy:\n   restart_policy:\n    condition: any\n  environment:\n   - ROCKETCHAT_URL=[[MOBNAME]]_rocketchat-app:3000\n   - ROCKETCHAT_ROOM=GENERAL\n   - ROCKETCHAT_USER=[[ROCKETCHATBOTUSERNAME]]\n   - ROCKETCHAT_PASSWORD=[[ROCKETCHATBOTPASSWORD]]\n   - BOT_NAME=bot\n  # you can add more scripts as you'd like here, they need to be installable by npm\n   - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics\n  volumes:\n   - ${PWD}/rocketchat/hubot-scripts:/home/hubot/scripts\n# this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier, and should be forwarded through traefik over tcp\n  ports:\n   - 3001:8080\n\n# End Rocketchat Service Section\n\n")},Ho={description:"Collaboration",folder:"rocketchat",manikinGroups:["Utility","Organization","Productivity"],isCore:!1,isSelected:!1,manikinIcon:r.p+"static/media/rocketchatIcon.e1d709e1.png",manikinIndex:10024,memories:[{memoryIndex:20039,memoryMarker:"[[ROCKETCHATBOTPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"RocketChat Bot Password",tooltip:"The RocketChat bot user's password",value:"",valueType:"password",isReady:!1,validator:_n},{memoryIndex:20040,memoryMarker:"[[ROCKETCHATBOTUSERNAME]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"RocketChat Bot User",tooltip:"The RocketChat bot user",value:"",valueType:"text",isReady:!1,validator:Bn}],mites:[$o,{type:"DockerSwarmNetwork",miteIndex:40024,miteString:"\n\n# Begin RocketChat Network Section\n\n rocketchat:\n  driver: overlay\n\n# End RocketChat Network Section\n\n"}],name:"RocketChat",ports:[],subfolders:["database","dump","hubot-scripts","uploads"]},Wo=["style"],jo={type:"DockerSwarmService",miteIndex:30027,webInterfaceHostnames:Wo,miteString:"\n\n# Begin Styleguidist Service Section\n\n styleguidist:\n  image: georgegeorgulasiv/component-library\n  volumes:\n   - ${PWD}/styleguidist/components:/app/src/shared/components\n## TODO: add mite for image typings - probably just use the ones we use internally\n   - ${PWD}/styleguidist/typings:/app/src/shared/typings\n   - ${PWD}/styleguidist/interfaces:/app/src/shared/interfaces\n   - ${PWD}/styleguidist/assets:/app/src/shared/assets\n   - ${PWD}/styleguidist/objects:/app/src/shared/objects\n   - ${PWD}/styleguidist/configs/package.json:/app/package.json\n   - ${PWD}/styleguidist/configs/styleguide.config.js:/app/styleguide.config.js\n   - ${PWD}/styleguidist/configs/tsconfig.json:/app/tsconfig.json\n   - ${PWD}/styleguidist/configs/webpack.config.js:/app/webpack.config.js\n  networks:\n   - styleguidist\n   - traefik\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.styleguidist.entrypoints=plainhttp'\n    - 'traefik.http.services.styleguidist.loadbalancer.server.port=6060'\n    - 'traefik.http.routers.styleguidist.rule=Host(\"".concat(Wo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.styleguidist-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.styleguidist.middlewares=styleguidist-force-secure'\n    - 'traefik.http.routers.styleguidist.service=styleguidist'\n    - 'traefik.http.routers.styleguidist-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.styleguidist-https.rule=Host(\"").concat(Wo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.styleguidist-https.service=styleguidist'\n    - 'traefik.http.routers.styleguidist-https.tls=true'\n    - 'traefik.http.services.styleguidist-https.loadbalancer.server.port=6060'\n    - 'com.MegaDocker.description=Styleguidist - a web sandbox for a react component library.'\n\n# End Styleguidist Service Section\n\n")},Yo={description:"React Component Library",isCore:!1,isSelected:!1,folder:"styleguidist",manikinGroups:["Development","Utility","Organization","Productivity"],manikinIcon:r.p+"static/media/styleguidistIcon.d21ca764.png",manikinIndex:10025,memories:[],name:"Styleguidist",mites:[jo,{type:"DockerSwarmNetwork",miteIndex:40025,miteString:"\n\n# Begin Styleguidist Network Section\n\n styleguidist:\n  driver: overlay\n\n# End Styleguidist Network Section\n\n"},{type:"Custom",miteString:"",miteIndex:50014,miteFile:{path:"styleguidist/configs",name:"package",extension:"json",permissions:"644",contents:'{\n      "name": "styleguidist-typescript-react-material-ui-component-library",\n      "version": "1.0.0",\n      "description": "",\n      "main": "index.js",\n      "scripts": {\n        "build": "./node_modules/.bin/webpack && cp src/index.html dist/index.html",\n        "start": "./node_modules/.bin/webpack-dev-server --port 9000 --open --hot --inline --content-base src",\n        "styleguide": "styleguidist server",\n        "styleguide:build": "styleguidist build"\n      },\n      "engines": {\n        "node": ">=10.13.0"\n      },\n      "author": "george@orb.run",\n      "license": "MIT",\n      "dependencies": {\n        "@material-ui/core": "latest",\n        "@material-ui/icons": "latest",\n        "@material-ui/styles": "latest",\n        "@types/material-ui": "latest",\n        "@types/react": "16.9.22",\n        "@types/react-dom": "16.9.5",\n        "@types/react-intl-redux": "0.1.14",\n        "react": "16.12.0",\n        "react-dom": "16.12.0",\n        "react-intl": "3.12.0",\n        "react-intl-redux": "2.2.0",\n        "react-redux": "7.2.0",\n        "redux": "4.0.5",\n        "typesafe-actions": "4.4.2"\n      },\n      "devDependencies": {\n        "css-loader": "3.4.2",\n        "file-loader": "^6.2.0",\n        "react-docgen-typescript": "1.16.2",\n        "react-styleguidist": "10.6.2",\n        "source-map-loader": "0.2.4",\n        "style-loader": "1.1.3",\n        "ts-loader": "6.2.1",\n        "typescript": "latest",\n        "webpack": "4.41.5",\n        "webpack-cli": "3.3.11",\n        "webpack-dev-server": "3.10.1"\n      }\n    }\n    '}},{type:"Custom",miteString:"",miteIndex:50015,miteFile:{path:"styleguidist/configs",name:"styleguide.config",extension:"js",permissions:"644",contents:'const glob = require("glob");\n    const path = require("path");\n    const fs   = require("fs");\n    \n    module.exports = {\n      components: () => {\n        return glob.sync("src/shared/components/**/*.{ts,tsx}").filter(file => {\n          if (file.match(/connect.tsx$/)) {\n            return true\n          } else {\n            const pathObject = path.parse(file);\n            pathObject.ext = `.connect${pathObject.ext}`\n            const { root, dir, ext, name } = pathObject;\n            return !fs.existsSync(path.format({ root, dir, ext, name }));\n          }\n        });\n      },\n      propsParser: require("react-docgen-typescript").withDefaultConfig({\n        savePropValueAsString: true,\n      }).parse,\n      webpackConfig: Object.assign({}, require("./webpack.config"), {}),\n      styleguideComponents: {\n        Wrapper: __dirname + "/src/styleguide/Wrapper.tsx",\n      },\n      styleguideDir: "docs",\n    };\n    '}},{type:"Custom",miteString:"",miteIndex:50016,miteFile:{path:"styleguidist/configs",name:"tsconfig",extension:"json",permissions:"644",contents:'{\n      "compilerOptions": {\n        "esModuleInterop": true,\n        "outDir": "./dist/",\n        "sourceMap": true,\n        "noImplicitAny": true,\n        "module": "commonjs",\n        "lib": ["es6", "dom", "es2017"],\n        "target": "esnext",\n        "jsx": "react"\n      },\n      "include": [\n        "src",\n        "public",\n        "typings",\n        "./src/**/*"\n      ]\n    }\n    '}},{type:"Custom",miteString:"",miteIndex:50017,miteFile:{path:"styleguidist/configs",name:"webpack.config",extension:"js",permissions:"644",contents:'module.exports = {\n      entry: "./src/index.tsx",\n      output: {\n        filename: "bundle.js",\n        path: __dirname + "/dist"\n      },\n      devServer: {\n        host: \'0.0.0.0\',\n        port: 6060,\n        disableHostCheck: true\n      },\n      devtool: "source-map",\n      resolve: {\n        extensions: [".ts", ".tsx", ".js", ".json"]\n      },\n      module: {\n        rules: [\n          { test: /.tsx?$/, loader: "ts-loader" },\n          { test: /.(png|jpe?g|gif|tif|bmp)$/i, use: [{loader: \'file-loader\'}] },\n          { enforce: "pre", test: /.js$/, loader: "source-map-loader" },\n          { test: /.css$/, use: ["style-loader", "css-loader"] }\n        ]\n      }\n    };'}}],ports:[],subfolders:["assets","components","configs","docs","interfaces","objects","typings"]},Go=["swarmpit"],zo={type:"DockerSwarmService",miteIndex:30028,webInterfaceHostnames:Go,miteString:"\n\n# Begin Swarmpit Service Section\n\n swarmpit-app:\n  image: swarmpit/swarmpit\n  environment:\n   - SWARMPIT_DB=http://[[MOBNAME]]_swarmpit-couchbase-db:5984\n   - SWARMPIT_INFLUXDB=http://[[MOBNAME]]_swarmpit-influx-db:8086\n  volumes:\n   - ${PWD}/logs/swarmpit:/loglocation\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  networks:\n   - traefik\n   - swarmpit\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.swarmpit.entrypoints=plainhttp'\n    - 'traefik.http.services.swarmpit.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.swarmpit.rule=Host(\"".concat(Go[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.swarmpit-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.swarmpit.middlewares=swarmpit-force-secure'\n    - 'traefik.http.routers.swarmpit.service=swarmpit'\n    - 'traefik.http.routers.swarmpit-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.swarmpit-https.rule=Host(\"").concat(Go[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.swarmpit-https.service=swarmpit'\n    - 'traefik.http.routers.swarmpit-https.tls=true'\n    - 'traefik.http.services.swarmpit-https.loadbalancer.server.port=8080'\n    - 'com.MegaDocker.description=Swarmpit App - a web GUI for Docker Swarm.'\n   resources:\n    limits:\n     cpus: '0.50'\n     memory: 1024M\n    reservations:\n     cpus: '0.25'\n     memory: 512M\n   placement:\n    constraints:\n     - node.role == manager\n\n swarmpit-couchbase-db:\n  image: couchdb:2.3.0\n  volumes:\n   - ${PWD}/logs/swarmpit:/loglocation\n   - ${PWD}/swarmpit/couchbase-data:/opt/couchdb/data\n  networks:\n   - swarmpit\n  deploy:\n   labels:\n    - 'com.MegaDocker.description=Swarmpit Couchbase - Swarmpit couchdb database'\n   resources:\n    limits:\n     cpus: '0.30'\n     memory: 256M\n    reservations:\n     cpus: '0.15'\n     memory: 128M\n\n swarmpit-influx-db:\n  image: influxdb:1.7\n  volumes:\n   - ${PWD}/logs/swarmpit:/loglocation\n   - ${PWD}/swarmpit/influx-data:/var/lib/influxdb\n  networks:\n   - swarmpit\n  deploy:\n   labels:\n    - 'com.MegaDocker.description=Swarmpit Influx - Swarmpit influx database'\n   restart_policy:\n    condition: any\n   resources:\n    limits:\n     cpus: '0.60'\n     memory: 512M\n    reservations:\n     cpus: '0.30'\n     memory: 128M\n\n swarmpit-agent:\n  image: swarmpit/agent\n  environment:\n   - DOCKER_API_VERSION=1.35\n  volumes:\n   - ${PWD}/logs/swarmpit:/loglocation\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  networks:\n   - swarmpit\n  deploy:\n   restart_policy:\n    condition: any\n   mode: global\n   labels:\n    - 'swarmpit.agent=true'\n    - 'com.MegaDocker.description=Swarmpit Agent - Swarmpit event monitoring daemon'\n   resources:\n    limits:\n     cpus: '0.10'\n     memory: 64M\n    reservations:\n     cpus: '0.05'\n     memory: 32M\n\n# End Swarmpit Service Section\n\n")},Ko={description:"Docker Swarm GUI",isCore:!0,isSelected:!0,manikinGroups:["Development","Utility","Organization","Productivity"],folder:"swarmpit",manikinIcon:r.p+"static/media/swarmpitIcon.a9733000.png",manikinIndex:10026,memories:[],name:"Swarmpit",mites:[zo,{type:"DockerSwarmNetwork",miteIndex:40026,miteString:"\n\n# Begin Swarmpit Network Section\n\n swarmpit:\n  driver: overlay\n\n# End Swarmpit Network Section\n\n"}],ports:[],subfolders:["couchbase-data","influx-data"]},qo=["syncthing"],Zo={type:"DockerSwarmService",miteIndex:30029,webInterfaceHostnames:qo,miteString:"\n\n# Begin Syncthing Service Section\n\n  syncthing:\n   image: syncthing/syncthing:latest\n   networks:\n    - traefik\n   environment:\n    - PUID=$HOSTUSERID\n    - PGID=$HOSTUSERGID\n   volumes:\n    - ${PWD}/syncthing/data:/var/syncthing\n   deploy:\n    restart_policy:\n     condition: any\n    labels:\n     - 'traefik.enable=true'\n     - 'traefik.http.routers.syncthing.entrypoints=plainhttp'\n     - 'traefik.http.services.syncthing.loadbalancer.server.port=8384'\n     - 'traefik.http.routers.syncthing.rule=Host(\"".concat(qo[0],".[[PRIMARYDOMAIN]]\")'\n     - 'traefik.http.middlewares.syncthing-force-secure.redirectscheme.scheme=https'\n     - 'traefik.http.routers.syncthing.middlewares=syncthing-force-secure'\n     - 'traefik.http.routers.syncthing.service=syncthing'\n     - 'traefik.http.routers.syncthing-https.entrypoints=encryptedhttp'\n     - 'traefik.http.routers.syncthing-https.rule=Host(\"").concat(qo[0],".[[PRIMARYDOMAIN]]\")'\n     - 'traefik.http.routers.syncthing-https.service=syncthing'\n     - 'traefik.http.routers.syncthing-https.tls=true'\n     - 'traefik.http.services.syncthing-https.loadbalancer.server.port=8384'\n     - 'com.MegaDocker.description=syncthing - syncthing filesharing for video files'\n \n# End Syncthing Service Section\n\n")},Xo={description:"Folder Synchronization",isCore:!1,isSelected:!1,folder:"syncthing",manikinGroups:["Development","Utility","Organization","Productivity"],manikinIcon:r.p+"static/media/syncthingIcon.9ac49006.png",manikinIndex:10027,memories:[],name:"Syncthing",mites:[Zo],ports:[],subfolders:["data"]},Qo=["tv"],Vo={type:"DockerSwarmService",miteIndex:30031,webInterfaceHostnames:Qo,miteString:"\n\n# Begin TV Service Section\n\n tv:\n  image: linuxserver/sonarr:latest\n  networks:\n   - traefik\n   - tv\n  volumes:\n   - ${PWD}/media/tv-config:/config\n   - ${PWD}/media/tv-data:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.tv.entrypoints=plainhttp'\n    - 'traefik.http.services.tv.loadbalancer.server.port=8989'\n    - 'traefik.http.routers.tv.rule=Host(\"".concat(Qo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.tv-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.tv.middlewares=tv-force-secure'\n    - 'traefik.http.routers.tv.service=tv'\n    - 'traefik.http.routers.tv-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.tv-https.rule=Host(\"").concat(Qo[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.tv-https.service=tv'\n    - 'traefik.http.routers.tv-https.tls=true'\n    - 'traefik.http.services.tv-https.loadbalancer.server.port=8989'\n    - 'com.MegaDocker.description=Sonarr - a tv episode search tool'\n\n# End TV Service Section\n\n")},Jo={description:"Automatic TV Downloader",folder:"media",isCore:!1,isSelected:!1,manikinGroups:["Content"],manikinIcon:r.p+"static/media/tvIcon.b83d9330.png",manikinIndex:10029,memories:[],mites:[Vo,hn,fn,xn,yn,vn,bn,An,gn],name:"TV",ports:[],subfolders:["content","newsgroups-config","newsgroup-indexer-config","plex-config","requests-config","torrent-config","torrent-indexer-config","tv-config"]},ei=["visualizer"],ti={type:"DockerSwarmService",miteIndex:30032,webInterfaceHostnames:ei,miteString:"\n\n# Begin Visualizer Service Section\n\n visualizer:\n  image: dockersamples/visualizer\n  networks:\n   - traefik\n  volumes:\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.visualizer.entrypoints=plainhttp'\n    - 'traefik.http.services.visualizer.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.visualizer.rule=Host(\"".concat(ei[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.visualizer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.visualizer.middlewares=visualizer-force-secure'\n    - 'traefik.http.routers.visualizer.service=visualizer'\n    - 'traefik.http.routers.visualizer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.visualizer-https.rule=Host(\"").concat(ei[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.visualizer-https.service=visualizer'\n    - 'traefik.http.routers.visualizer-https.tls=true'\n    - 'traefik.http.services.visualizer-https.loadbalancer.server.port=8080'\n    - 'com.MegaDocker.description=Visualizer - Container node placement web visualizer'\n   placement:\n    constraints:\n     - node.role == manager\n\n\n# End Visualizer Service Section\n\n")},ri={description:"Docker Swarm Container Placement Visualization",folder:"visualizer",isCore:!1,isSelected:!1,manikinGroups:["Monitoring","Utility"],manikinIcon:r.p+"static/media/visualizerIcon.89cf4619.png",manikinIndex:10030,memories:[],mites:[ti,{type:"DockerSwarmNetwork",miteIndex:40029,miteString:"\n\n# Begin Visualizer Network Section\n\n visualizer:\n  driver: overlay\n\n# End Visualizer Network Section\n\n"}],name:"Visualizer",ports:[],subfolders:[]},ni=["wordpress"],oi={type:"DockerSwarmService",miteIndex:30035,webInterfaceHostnames:ni,miteString:"\n\n# Begin WordPress Service Section\n\n wordpress:\n  image: wordpress\n  depends_on:\n   - mariadb\n  networks:\n   - wordpress\n   - traefik\n  environment:\n   - WORDPRESS_DB_HOST=[[MOBNAME]]_wordpress-mariadb\n   - WORDPRESS_DB_USER=[[WORDPRESSMARIADBUSER]]\n   - WORDPRESS_DB_PASSWORD=[[WORDPRESSMARIADBPASSWORD]]\n   - WORDPRESS_DB_NAME=wordpress\n  volumes:\n   - ${PWD}/wordpress/php:/var/www/html\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.wordpress.entrypoints=plainhttp'\n    - 'traefik.http.services.wordpress.loadbalancer.server.port=80'\n    - 'traefik.http.routers.wordpress.rule=Host(\"".concat(ni[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.wordpress-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.wordpress.middlewares=wordpress-force-secure'\n    - 'traefik.http.routers.wordpress.service=wordpress'\n    - 'traefik.http.routers.wordpress-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.wordpress-https.rule=Host(\"").concat(ni[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.wordpress-https.service=wordpress'\n    - 'traefik.http.routers.wordpress-https.tls=true'\n    - 'traefik.http.services.wordpress-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=WordPress - WordPress blogging platform'\n\n wordpress-mariadb:\n  image: mariadb\n  networks:\n   - wordpress\n  environment:\n   - MYSQL_DATABASE=wordpress\n   - MYSQL_ROOT_PASSWORD=[[WORDPRESSMARIADBROOTPASSWORD]]\n   - MYSQL_USER=[[WORDPRESSMARIADBUSER]]\n   - MYSQL_PASSWORD=[[WORDPRESSMARIADBPASSWORD]]\n  volumes:\n   - ${PWD}/wordpress/mariadb:/var/lib/mysql\n  deploy:\n   restart_policy:\n    condition: any\n\n# End WordPress Service Section\n\n")},ii={memoryIndex:20045,memoryMarker:"[[WORDPRESSMARIADBPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"WP MariaDB Password",tooltip:"The WordPress MariaDB user's password",value:"",valueType:"password",isReady:!1,validator:_n},ai={memoryIndex:20046,memoryMarker:"[[WORDPRESSMARIADBROOTPASSWORD]]",memoryType:"SecretMemory",shouldAutocomplete:!1,name:"WP MariaDB Root Password",tooltip:"The WordPress root user's password",value:"",valueType:"password",isReady:!1,validator:_n},si={memoryIndex:20047,memoryMarker:"[[WORDPRESSMARIADBUSER]]",memoryType:"NormalMemory",shouldAutocomplete:!1,name:"WP MariaDB User",tooltip:"The WordPress MariaDB user",value:"",valueType:"text",isReady:!1,validator:Bn},pi={description:"Wordpress Blog",folder:"wordpress",isCore:!1,isSelected:!1,manikinGroups:["Content","Development"],manikinIcon:r.p+"static/media/wordpressIcon.6ff201b7.png",manikinIndex:10033,memories:[ai,si,ii],mites:[oi,{type:"DockerSwarmNetwork",miteIndex:40032,miteString:"\n\n# Begin WordPress Network Section\n\n wordpress:\n  driver: overlay\n\n# End WordPress Network Section\n\n"}],name:"WordPress",ports:[],subfolders:["mariadb","php"]},ci=["movies"],li={type:"DockerSwarmService",miteIndex:30016,webInterfaceHostnames:ci,miteString:"\n\n# Begin Movie Service Section\n\n movies:\n  image: linuxserver/radarr:latest\n  networks:\n   - movies\n   - traefik\n  volumes:\n   - ${PWD}/media/movies-config:/config\n   - ${PWD}/media/content:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.movies.entrypoints=plainhttp'\n    - 'traefik.http.services.movies.loadbalancer.server.port=80'\n    - 'traefik.http.routers.movies.rule=Host(\"".concat(ci[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.movies-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.movies.middlewares=movies-force-secure'\n    - 'traefik.http.routers.movies.service=movies'\n    - 'traefik.http.routers.movies-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.movies-https.rule=Host(\"").concat(ci[0],".[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.movies-https.service=movies'\n    - 'traefik.http.routers.movies-https.tls=true'\n    - 'traefik.http.services.movies-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Radarr - a movies episode search tool'\n\n# End Movies Service Section\n\n")},di=[Dn,On,Tn,Un,Wn,Gn,qn,Qn,eo,no,ao,uo,fo,yo,{description:"Automatic Movies Downloader",folder:"media",isCore:!1,isSelected:!1,manikinGroups:["Content"],manikinIcon:r.p+"static/media/moviesIcon.0ee0f7c5.png",manikinIndex:10015,memories:[],mites:[hn,li,fn,xn,yn,vn,bn,An,gn],name:"Movies",ports:[],subfolders:["content","movies-config","newsgroups-config","newsgroup-indexer-config","plex-config","requests-config","torrent-config","torrent-indexer-config"]},{description:"Automatic Music Downloader",folder:"media",isCore:!1,isSelected:!1,manikinGroups:["Content"],manikinIcon:r.p+"static/media/musicIcon.b4344604.png",manikinIndex:10016,memories:[],mites:[hn,fn,xn,yn,vn,bn,An,gn],name:"Music",ports:[],subfolders:["content","music-config","newsgroups-config","newsgroup-indexer-config","plex-config","requests-config","torrent-config","torrent-indexer-config"]},Ao,Ro,Io,Eo,Co,Lo,Ho,Yo,Xo,Ko,sn,Jo,ri,pi],mi=di.filter((function(e){return!!e.isCore})),ui=di.filter((function(e){return!e.isCore})),hi=mi.flatMap((function(e){return e.mites.flatMap((function(e){return e}))})),xi={theme:$r,manikinTable:[].concat(Object(Yr.a)(mi),Object(Yr.a)(ui)),selectedManikins:mi,memories:mi.flatMap((function(e){return e.memories})),allMobMites:hi,mobDServiceMites:hi.filter((function(e){return"DockerSwarmService"===e.type})),mobDNetworkMites:hi.filter((function(e){return"DockerSwarmNetwork"===e.type})),mobCustomMites:[hi.filter((function(e){return"Custom"===e.type}))],ymlOutput:""},ki=function(e,t){var r=Object(x.a)({},e);switch(t.type){case"APPLICATION_START":return xi;case"TOGGLE_THEME":var n=function(e){switch(e){case it:return $r;case $r:return it;default:throw new Error("toggleTheme error: passed non-standard theme to theme switch")}}(r.theme);return r.theme=n,r;case"TOGGLE_MANIKIN":return r.manikinTable[t.payload].isSelected=!e.manikinTable[t.payload].isSelected,r.selectedManikins=r.manikinTable.filter((function(e){return!0===e.isSelected})),r.memories=k(r.selectedManikins),r.allMobMites=r.selectedManikins.flatMap((function(e){return e.mites.flatMap((function(e){return e}))})),r.mobDServiceMites=r.allMobMites.filter((function(e){return"DockerSwarmService"===e.type})),r.mobDNetworkMites=function(e){return e.filter((function(e){return"DockerSwarmNetwork"===e.type}))}(r.allMobMites),r.mobCustomMites=function(e){return[e.filter((function(e){return"Custom"===e.type}))]}(r.allMobMites),r;case"UPDATE_MEMORY_VALUE":var o=r.memories.indexOf(t.payload.memory);return r.memories[o].value=t.payload.value,r.memories[o].isReady=r.memories[o].validator(r.memories[o].value),r;case"DOCKER_SWARM_OUTPUT":return function(e){var t=zr()(),r=Object(Yr.a)(e.manikins),n=Object(Yr.a)(e.memories),o=r.indexOf(sn),i=r[o].memories.indexOf(an),a=r[o].memories.indexOf(tn),s=r[o].memories.indexOf(Jr),p=r[o].memories[s].value.toString().split(",").join('" "'),c=r.flatMap((function(e){return e.mites.map((function(e){return e}))})),l=Array.from(new Set(c)),d=l.filter((function(e){return"DockerSwarmService"===e.type})).sort((function(e,t){return e.miteIndex>t.miteIndex?1:e.miteIndex<t.miteIndex?-1:0})).map((function(e){return e.miteString})),m=l.filter((function(e){return"DockerSwarmService"===e.type})).map((function(e){return e.webInterfaceHostnames})).flat().join().split(",").join('" "'),u=l.filter((function(e){return"DockerSwarmNetwork"===e.type})).sort((function(e,t){return e.miteIndex>t.miteIndex?1:e.miteIndex<t.miteIndex?-1:0})).map((function(e){return e.miteString})),h=l.filter((function(e){return"Custom"===e.type})).map((function(e){return e})),x=h.indexOf(pn);h[x].miteFile.contents=function(){var t=e.manikins[o].memories[a].value,r=t.split(".")[1],n=t.split(".")[0];return pn.miteFile.contents.split("[[LDAPDOMAINASDCS]]").join("dc=".concat(n,",dc=").concat(r))}();var k=function(e,t){var r=e;return t.forEach((function(e){var t=r.split(e.memoryMarker).join(e.value);r=t})),r};h.map((function(e){return n.forEach((function(t){var r=e.miteFile.contents.split(t.memoryMarker).join(t.value);e.miteFile.contents=r}))}));var f=[Zr.miteString].concat(Object(Yr.a)(d),[Xr,Qr],Object(Yr.a)(u),[Vr,cn,ln]).join("");(function(){var e=Object(jr.a)(Wr.a.mark((function e(){var a;return Wr.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=function(){var e=Object(jr.a)(Wr.a.mark((function e(){var a;return Wr.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t.folder("".concat(r[o].memories[i].value)).file("".concat(r[o].memories[i].value,".yml"),"".concat(k(f,n))),h.forEach((function(e){t.file("".concat(r[o].memories[i].value,"/").concat(e.miteFile.path,"/").concat(e.miteFile.name,".").concat(e.miteFile.extension),"".concat(e.miteFile.contents),{unixPermissions:"".concat(e.miteFile.permissions)})})),e.next=5,t.generateAsync({type:"binarystring"});case 5:return a=e.sent,e.abrupt("return",a);case 9:return e.prev=9,e.t0=e.catch(0),e.abrupt("return","zip failed");case 12:case"end":return e.stop()}}),e,null,[[0,9]])})));return function(){return e.apply(this,arguments)}}(),e.abrupt("return",a());case 2:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}})()(),r.map((function(e){var n=e.subfolders;for(var s in t.folder("".concat(r[o].memories[i].value)).folder("logs").folder(e.folder),n)t.folder("".concat(r[o].memories[i].value)).folder(e.folder).folder(n[s]);t.folder("".concat(r[o].memories[i].value)).file("launchstack.sh",'#!/bin/sh\nexport HOSTUSERID=$(id -u)\nexport HOSTUSERGID=$(id -g)\nif [[ "$OSTYPE" == "linux-gnu"* ]]; then\n  export HOSTTIMEZONE=$(wget -q -O - https://ipapi.co/timezone)\nelif [[ "$OSTYPE" == "darwin"* ]]; then\n  export HOSTTIMEZONE=$(curl -s https://ipapi.co/timezone)\nelif [[ "$OSTYPE" == "win32" ]]; then\n  export HOSTTIMEZONE=$(curl https://ipapi.co/timezone)\nelse\n  echo "Setting default timezone as \'America/New_York\' because we couldn\'t determine OS type"\n  export HOSTTIMEZONE=America/New_York\nfi\n\necho\necho "We seem to be running on $OSTYPE"\necho "         with user id of $HOSTUSERID"\necho "    and user group id of $HOSTUSERGID"\necho "         in the timezone $HOSTTIMEZONE."\necho\ndocker stack deploy -c '.concat(r[o].memories[i].value,".yml ").concat(r[o].memories[i].value,"\n"),{unixPermissions:"755"}),t.folder("".concat(r[o].memories[i].value)).file("stopstack.sh","#!/bin/sh\ndocker stack rm ".concat(r[o].memories[i].value,"\n"),{unixPermissions:"755"}),t.folder("".concat(r[o].memories[i].value)).file("setupdns.sh",'#!/bin/sh\nISJQINSTALLED=$(which jq)\nif [ "${ISJQINSTALLED}" = \'jq not found\' ]; then\n  echo;\n  echo "Error: exiting with status 1 (Couldn\'t find jq binary).  You must install jq to use this script.";\n  echo "Try \'sudo apt install jq\' on Debian/Ubuntu/Mint.";\n  echo "Try \'sudo yum install jq\' on CentOS/Fedore/RedHat";\n  echo "Try \'sudo apk install jq\' on Alpine";\n  echo "Try \'brew install jq\' on macOS";\n  echo;\n    exit 1;\n  else\n  echo "Found jq binary at ${ISJQINSTALLED}"...;\nfi;\n  echo "Setting script variables...";\n  echo "Setting domain name...";\n  DOMAIN="'.concat(r[o].memories[a].value,'";\n  echo "Setting CNAME target...";\n  CNAMETARGET="megadockerswarm.').concat(r[o].memories[a].value,'";\n  echo "Setting hostnames...";\n  HOSTS=("').concat(m,'")\n  echo "Setting Cloudflare API Token...";\n  CLOUDFLAREAPITOKEN="').concat(p,'";\n  echo "Getting our external IP address...";\n  EXTERNALIPADDRESS=$(curl -s https://api.ipify.org);\n  echo "Setting Zone ID for domain ').concat(r[o].memories[a].value,'...";\n  ZONEIDRESULT=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones?name=').concat(r[o].memories[a].value,'" -H "Authorization: Bearer ${CLOUDFLAREAPITOKEN}" -H "Content-Type: application/json");\n  ZONEIDSUCCEEDED=$(echo "${ZONEIDRESULT}" | jq | grep "success");\n  if [ "${ZONEIDSUCCEEDED}" = \'  "success": true,\' ]; then\n    ZONEID=$(echo "${ZONEIDRESULT}" | jq -r | grep "id" | sed 1q | sed \'s/^.............//\' | sed \'s/..$//\');\n  else\n    echo;\n    echo "Error: exiting with status 2 (Couldn\'t determine Cloudflare Zone for ').concat(r[o].memories[a].value,")\";\n    echo \"Please confirm that this domain is managed by your Cloudflare account.\";\n    echo \"Please confirm that your Cloudflare API Token has 'Zone: Read' and 'DNS: Edit' privileges for ").concat(r[o].memories[a].value,'.";\n    echo;\n    echo "https://dash.cloudflare.com";\n    echo;\n    exit 2;\n  fi;\n  echo "Getting Host ID for ${CNAMETARGET} A record...";\n  DOMAINHOSTSRESULT=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${ZONEID}/dns_records?type=A&name=megadockerswarm.').concat(r[o].memories[a].value,'" -H "Authorization: Bearer ${CLOUDFLAREAPITOKEN}" -H "Content-Type: application/json");\n  DOMAINHOSTSUCCEEDED=$(echo "${DOMAINHOSTSRESULT}" | jq | grep success);\n  if [ "${DOMAINHOSTSUCCEEDED}" = \'  "success": true,\' ]; then\n    DOMAINHOSTID=$(echo "${DOMAINHOSTSRESULT}" | jq -r | grep id | sed 1q | sed \'s/^.............//\' | sed \'s/..$//\');\n    if [ "${DOMAINHOSTID}" != ""  ]; then\n      DOMAINHOSTIPADDRESS=$(echo "${DOMAINHOSTSRESULT}" | jq -r | grep content| sed \'s/^..................//\' | sed \'s/..$//\');\n      if [ "${DOMAINHOSTIPADDRESS}" == "${EXTERNALIPADDRESS}" ]; then\n        echo "The A record for ${CNAMETARGET} appears to be configured correctly.";\n      else\n        echo "Updating A record for ${CNAMETARGET} to point to ${EXTERNALIPADDRESS}...";\n      DATAFLAG="{\\"type\\":\\"A\\",\\"name\\":\\"megadockerswarm\\",\\"content\\":\\"${EXTERNALIPADDRESS}\\",\\"ttl\\":1,\\"priority\\":10,\\"proxied\\":false}";\n      UPDATEMEGADOCKERSWARMRECORDRESULT=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${ZONEID}/dns_records/${DOMAINHOSTID}" -H "Content-Type:application/json" -H "Authorization: Bearer ${CLOUDFLAREAPITOKEN}" --data ${DATAFLAG});\n      fi;\n    fi;\n    if [ "${DOMAINHOSTID}" == "" ]; then\n      echo "Creating an A record for megadockerswarm.').concat(r[o].memories[a].value,'";\n      CREATEMEGADOCKERSWARMRECORDRESULT=$(curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${ZONEID}/dns_records" -H "Content-Type:application/json" -H "Authorization: Bearer ${CLOUDFLAREAPITOKEN}" --data \'{"type":"A","name":"megadockerswarm","content":"\'"${EXTERNALIPADDRESS}"\'","ttl":1,"proxied":false}\');\n      MEGADOCKERSWARMHOSTID=$(echo "${CREATEMEGADOCKERSWARMRECORDRESULT}" | jq | grep id | sed 1q | sed \'s/^..//\' | sed \'s/..$//\');\n    fi;\n  fi;\n  for EACHHOST in ${HOSTS[@]}; do\n    DATAFLAG="{\\"type\\":\\"CNAME\\",\\"name\\":\\"${EACHHOST}\\",\\"content\\":\\"${CNAMETARGET}\\",\\"ttl\\":1,\\"priority\\":10,\\"proxied\\":false}"\n    HOSTCNAMEEXISTSRESULTS=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${ZONEID}/dns_records?type=CNAME&name=${EACHHOST}.').concat(r[o].memories[a].value,'&match=all" -H "Authorization: Bearer ${CLOUDFLAREAPITOKEN}" -H "Content-Type:application/json");\n    HOSTCNAMEID=$(echo ${HOSTCNAMEEXISTSRESULTS} | jq | grep id | sed 1q | sed \'s/^.............//\' | sed \'s/..$//\');\n    if [ "${HOSTCNAMEID}" != "" ]; then\n      HOSTCONTENTRESULTS=$(echo ${HOSTCNAMEEXISTSRESULTS} | jq | grep content | sed \'s/^..................//\' | sed \'s/..$//\');\n      if [ "${HOSTCONTENTRESULTS}" = "${CNAMETARGET}" ]; then\n        echo "${EACHHOST} appears to be configured already.";\n      elif [ "${HOSTCONTENTRESULTS}" != "${CNAMETARGET}" ]; then\n        echo "Updating ${EACHHOST}.').concat(r[o].memories[a].value,' to point to ${CNAMETARGET}..."\n        UPDATEHOSTRESULT=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/${ZONEID}/dns_records/${HOSTCNAMEID}" -H "Content-Type:application/json" -H "Authorization: Bearer ${CLOUDFLAREAPITOKEN}" --data ${DATAFLAG});\n      fi;\n    fi;\n    if [ "${HOSTCNAMEID}" == "" ]; then\n      echo "Creating ${EACHHOST} CNAME record..."\n      CREATEHOSTRESULT=$(curl -s -X POST "https://api.cloudflare.com/client/v4/zones/${ZONEID}/dns_records" -H "Content-Type:application/json" -H "Authorization: Bearer ${CLOUDFLAREAPITOKEN}" --data ${DATAFLAG});\n    fi;\n  done;      \n  echo "Your MEGADocker mob\'s DNS is probably configured correctly.";\n  echo "Run \'./launchstack.sh\' and then visit any of the following addresses:";\n  for EACHHOST in ${HOSTS[@]}; do\n    echo "https://$EACHHOST.').concat(r[o].memories[a].value,'";\n  done;\n'),{unixPermissions:"755"})})),t.folder("".concat(r[o].memories[i].value)).file("traefik/acme.json","",{unixPermissions:"600"}),t.generateAsync({compression:"DEFLATE",compressionOptions:{level:9},platform:"UNIX",type:"blob"}).then((function(e){qr.a.saveAs(e,"".concat(r[o].memories[i].value,".zip"))}))}({manikins:e.selectedManikins,memories:e.memories}),e;default:throw new Error("megaReducer Error: hit default case in action.type switch")}},fi=r(165),gi=r(2),Si=i.createContext({state:xi}),yi=function(e){var t=i.useReducer(ki,xi),r=Object(h.a)(t,2),n=r[0],o=r[1];return Object(gi.jsx)(Si.Provider,{value:{state:n,dispatch:o},children:Object(gi.jsx)(fi.a,{theme:n.theme,children:e.children})})},vi=function(){var e=i.useContext(Si),t=e.state,r=e.dispatch;return Object(gi.jsx)(d.a,{style:{width:"25%"},children:Object(gi.jsx)(u.a,{checked:t.theme===it,onClick:function(){r({type:"TOGGLE_THEME",payload:t.theme})}},"ThemeToggleSwitch")},"isSelected")},bi=r(161),Ai=function(e){return Object(gi.jsx)(d.a,{className:"ManikinIcon",children:Object(gi.jsx)("img",{src:e.manikinIcon,alt:"".concat(e.name," Icon"),height:"15",width:"15"})})},Di=function(e){var t=i.useContext(Si),r=t.state,n=t.dispatch;return Object(gi.jsx)("div",{className:"ManikinSwitch",children:Object(gi.jsx)(d.a,{children:Object(gi.jsx)(u.a,{checked:e.isSelected,disabled:!!e.isCore,onClick:function(){return n({type:"TOGGLE_MANIKIN",payload:r.manikinTable.indexOf(e)})}},"".concat(e.name,"Toggle"))},"".concat(e.name,"ToggleCell"))})},Mi=function(){var e=i.useContext(Si),t=e.state;e.dispatch;return Object(gi.jsxs)(p.a,{className:"ManikinTable",size:"small",stickyHeader:!0,children:[Object(gi.jsx)(c.a,{className:"ManikinTableHeader",children:Object(gi.jsxs)(l.a,{className:"ManikinHeaderRow",children:[Object(gi.jsx)(d.a,{style:{width:"50%"},children:"Services"},"name"),Object(gi.jsx)(d.a,{style:{width:"15%",height:"100%"}},"icon"),Object(gi.jsx)(vi,{})]})}),Object(gi.jsx)(m.a,{className:"ManikinTableBody",children:t.manikinTable.map((function(e){return t=e,Object(gi.jsx)(bi.a,{title:t.description,children:Object(gi.jsxs)(l.a,{className:t.isCore?"CoreManikinRow":"ManikinRow",hover:!t.isCore,children:[Object(gi.jsx)(d.a,{size:"small",children:t.name},"".concat(t.name,"NameCell")),Ai(t),Di(t)]})},"".concat(t.name,"Row"));var t}))})]})},Ri=function(){return Object(gi.jsx)("div",{className:"ManikinPane",children:Object(gi.jsx)(Mi,{})})},wi=r(171),Oi=function(){var e=i.useContext(Si),t=e.state,r=e.dispatch,n=t.memories.every((function(e){return e.isReady})),o=t.memories.indexOf(an),a=t.memories[o].value;return Object(gi.jsxs)(wi.a,{disabled:!n,variant:"contained",onClick:function(){r({type:"DOCKER_SWARM_OUTPUT"})},children:["download ",a,".zip"]})},Ii=function(){return Object(gi.jsx)("div",{className:"ButtonPane",children:Object(gi.jsx)(Oi,{})})},Pi=r(160),Ei=r.p+"static/media/checkmarkIndicator.50bda404.png",Ti=r.p+"static/media/circleIndicator.8919f8cb.png",Ni=function(e){return Object(gi.jsx)(d.a,{className:"MemoryReadyIcon",variant:"body",size:"small",children:Object(gi.jsx)("img",{alt:"ready indicator",height:"25vh",src:""===e.value?Ti:e.isReady?Ei:Ti})})},Fi=function(e){var t=i.useContext(Si),r=t.state,n=t.dispatch,o=r.memories.every((function(e){return e.isReady})),a=k(di).sort((function(e,t){return e.name.localeCompare(t.name)}));return Object(gi.jsx)("div",{style:{width:"100%"},children:Object(gi.jsxs)(p.a,{className:"MemoryTable",size:"small",stickyHeader:!0,children:[Object(gi.jsx)(c.a,{children:Object(gi.jsxs)(l.a,{className:"MemoryHeaderRow",children:[Object(gi.jsx)(d.a,{size:"small",variant:"head",style:{width:"20%"},children:"Settings"}),Object(gi.jsx)(d.a,{size:"small",variant:"head",style:{width:"75%"}}),Object(gi.jsx)(d.a,{size:"small",variant:"head",style:{width:"5%"},children:Object(gi.jsx)("img",{alt:"",src:o?Ei:Ti,height:"25vh"})})]})}),Object(gi.jsx)(m.a,{className:"MemoryTableBody",style:{width:"100%"},children:a.map((function(e){return t=e,r=function(t){return n((r=e,o=t.target.value,{type:"UPDATE_MEMORY_VALUE",payload:{memory:r,value:o}}));var r,o},Object(gi.jsx)(bi.a,{title:t.tooltip,children:Object(gi.jsxs)(l.a,{hover:!0,children:[Object(gi.jsx)(d.a,{padding:"checkbox",variant:"body",size:"small",children:t.name}),Object(gi.jsx)(d.a,{variant:"body",size:"small",children:Object(gi.jsx)(Pi.a,{fullWidth:!0,size:"small",required:!0,value:t.value,type:t.valueType,placeholder:"Please enter your ".concat(t.name," here"),autoComplete:t.shouldAutocomplete.toString(),onChange:r})}),Ni(t)]})},t.memoryIndex);var t,r}))})]})})},Ci=function(){return Object(gi.jsx)("div",{className:"MemoryPane",children:Object(gi.jsx)(Fi,{})})},Bi=function(){return Object(gi.jsxs)("div",{className:"MainArea",children:[Object(gi.jsx)(Ci,{}),Object(gi.jsx)(Ii,{})]})},_i=function(){return Object(gi.jsx)("div",{className:"App",children:Object(gi.jsx)(yi,{children:Object(gi.jsx)(a.a,{square:!0,children:Object(gi.jsxs)(s.a,{container:!0,children:[Object(gi.jsx)(s.a,{item:!0,xs:2,children:Object(gi.jsx)(Ri,{})}),Object(gi.jsx)(s.a,{item:!0,xs:10,children:Object(gi.jsx)(Bi,{})})]})})})})};o.a.render(Object(gi.jsx)(_i,{}),document.getElementById("root"))}},[[114,1,2]]]);
//# sourceMappingURL=main.3001aefd.chunk.js.map