{"version":3,"sources":["functions/reducers/getMemories.ts","fonts/Asap.ts","styles/dark/AccordionExpandedStyleDark.ts","styles/dark/AccordionRootStyleDark.ts","styles/dark/AlertRootStyleDark.ts","styles/dark/AppBarRootStyleDark.ts","styles/dark/AutocompleteOptionStyleDark.ts","styles/dark/AutocompletePaperStyleDark.ts","styles/dark/BottomNavigationActionRootStyleDark.ts","styles/dark/BottomNavigationRootStyleDark.ts","styles/dark/ButtonIconInheritStyleDark.ts","styles/dark/ButtonIconRootStyleDark.ts","styles/dark/ButtonPrimaryStyleDark.ts","styles/dark/ButtonRootStyleDark.ts","styles/dark/ButtonSecondaryStyleDark.ts","styles/dark/CardRootStyleDark.ts","styles/dark/CheckboxRootStyleDark.ts","styles/dark/CircularProgressPrimaryStyleDark.ts","styles/dark/CircularProgressRootStyleDark.ts","styles/dark/ContainerRootStyleDark.ts","styles/dark/DialogPaperStyleDark.ts","styles/dark/DialogRootStyleDark.ts","styles/dark/DrawerPaperStyleDark.ts","styles/dark/DrawerRootStyleDark.ts","styles/dark/FabRootStyleDark.ts","styles/dark/FormControlLabelRootStyleDark.ts","styles/dark/FormControlRootStyleDark.ts","styles/dark/FormHelperTextRootStyleDark.ts","styles/dark/IconRootStyleDark.ts","styles/dark/ImageListItemBarRootStyleDark.ts","styles/dark/ImageListRootStyleDark.ts","styles/dark/InputAdornmentRootStyleDark.ts","styles/dark/InputBaseRootStyleDark.ts","styles/dark/InputLabelRootStyleDark.ts","styles/dark/InputOutlinedRootStyleDark.ts","styles/dark/ListItemRootStyleDark.ts","styles/dark/ListRootStyleDark.ts","styles/dark/MenuRootStyleDark.ts","styles/dark/MobileStepperDotActiveStyleDark.ts","styles/dark/MobileStepperDotStyleDark.ts","styles/dark/MobileStepperProgressStyleDark.ts","styles/dark/NativeSelectRootStyleDark.ts","styles/dark/OutlinedInputMultilineStyleDark.ts","styles/dark/PaletteBackgroundStyleDark.ts","styles/dark/PalettePrimaryStyleDark.ts","styles/dark/PaletteSecondaryStyleDark.ts","styles/dark/PaperRootStyleDark.ts","styles/dark/RadioRootStyleDark.ts","styles/dark/SelectMenuRootStyleDark.ts","styles/dark/SelectRootStyleDark.ts","styles/dark/SliderMarkActiveStyleDark.ts","styles/dark/SliderMarkStyleDark.ts","styles/dark/SliderRailStyleDark.ts","styles/dark/SliderRootStyleDark.ts","styles/dark/SliderThumbStyleDark.ts","styles/dark/SliderTrackStyleDark.ts","styles/dark/SliderValueLabelStyleDark.ts","styles/dark/SpeedDialIconRootStyleDark.ts","styles/dark/StepIconActiveStyleDark.ts","styles/dark/StepIconCompletedStyleDark.ts","styles/dark/StepIconRootStyleDark.ts","styles/dark/SwitchRootStyleDark.ts","styles/dark/TabLabelIconStyleDark.ts","styles/dark/TablePaginationItemRootStyleDark.ts","styles/dark/TablePaginationSelectRootStyleDark.ts","styles/dark/TabRootStyleDark.ts","styles/dark/TabSelectedStyleDark.ts","styles/dark/TabsRootStyleDark.ts","styles/dark/TextAreaRootStyleDark.ts","styles/dark/ToggleButtonGroupRootStyleDark.ts","styles/dark/ToggleButtonRootStyleDark.ts","styles/dark/TouchRippleRootStyleDark.ts","components/OrbThemeDark.tsx","styles/light/AccordionExpandedStyle.ts","styles/light/AccordionRootStyle.ts","styles/light/AlertRootStyle.ts","styles/light/AppBarRootStyle.ts","styles/light/AutocompleteOptionStyle.ts","styles/light/AutocompleteRootStyle.ts","styles/light/BottomNavigationActionRootStyle.ts","styles/light/BottomNavigationRootStyle.ts","styles/light/ButtonIconInheritStyle.ts","styles/light/ButtonIconRootStyle.ts","styles/light/ButtonPrimaryStyle.ts","styles/light/ButtonRootStyle.ts","styles/light/ButtonSecondaryStyle.ts","styles/light/CardRootStyle.ts","styles/light/CheckboxRootStyle.ts","styles/light/CircularProgressPrimaryStyle.ts","styles/light/CircularProgressRootStyle.ts","styles/light/ContainerRootStyle.ts","styles/light/DialogPaperStyle.ts","styles/light/DialogRootStyle.ts","styles/light/DrawerPaperStyle.ts","styles/light/DrawerRootStyle.ts","styles/light/FabRootStyle.ts","styles/light/FormControlLabelRootStyle.ts","styles/light/FormControlRootStyle.ts","styles/light/FormHelperTextRootStyle.ts","styles/light/IconRootStyle.ts","styles/light/ImageListItemBarRootStyle.ts","styles/light/ImageListRootStyle.ts","styles/light/InputAdornmentRootStyle.ts","styles/light/InputBaseRootStyle.ts","styles/light/InputLabelRootStyle.ts","styles/light/InputOutlinedRootStyle.ts","styles/light/ListItemRootStyle.ts","styles/light/ListRootStyle.ts","styles/light/MenuRootStyle.ts","styles/light/MobileStepperDotActiveStyle.ts","styles/light/MobileStepperDotStyle.ts","styles/light/MobileStepperProgressStyle.ts","styles/light/NativeSelectRootStyle.ts","styles/light/OutlinedInputMultilineStyle.ts","styles/light/PaletteBackgroundStyle.ts","styles/light/PalettePrimaryStyle.ts","styles/light/PaletteSecondaryStyle.ts","styles/light/PaperRootStyle.ts","styles/light/RadioRootStyle.ts","styles/light/SelectMenuRootStyle.ts","styles/light/SelectRootStyle.ts","styles/light/SliderMarkActiveStyle.ts","styles/light/SliderMarkStyle.ts","styles/light/SliderRailStyle.ts","styles/light/SliderRootStyle.ts","styles/light/SliderThumbStyle.ts","styles/light/SliderTrackStyle.ts","styles/light/SliderValueLabelStyle.ts","styles/light/SpeedDialIconRootStyle.ts","styles/light/StepIconActiveStyle.ts","styles/light/StepIconCompletedStyle.ts","styles/light/StepIconRootStyle.ts","styles/light/SwitchRootStyle.ts","styles/light/TabLabelIconStyle.ts","styles/light/TablePaginationItemRootStyle.ts","styles/light/TablePaginationSelectRootStyle.ts","styles/light/TableRowRootStyle.ts","styles/light/TableRowSelectedStyle.ts","styles/light/TabRootStyle.ts","styles/light/TabSelectedStyle.ts","styles/light/TabsRootStyle.ts","styles/light/TextFieldRootStyle.ts","styles/light/ToggleButtonGroupRootStyle.ts","styles/light/ToggleButtonRootStyle.ts","components/OrbThemeLight.tsx","mobparts/mites/headers/mobFileHeaderSectionString.ts","mobparts/mites/headers/mobServicesFooterSectionString.ts","mobparts/mites/headers/mobNetworkHeaderSectionString.ts","mobparts/mites/headers/mobNetworkFooterSectionString.ts","mobparts/memories/cloudflareAPIToken.ts","functions/validators/cloudflareApiTokenValidator.ts","mobparts/memories/letsEncryptEmail.ts","functions/validators/emailValidator.ts","mobparts/memories/primaryDomain.ts","functions/validators/domainValidator.ts","mobparts/mites/service/traefikServiceMite.ts","images/manikin-icons/traefikIcon.png","mobparts/memories/mobName.ts","functions/validators/mobnameValidator.ts","mobparts/manikins/traefik.ts","mobparts/mites/ldif/traefikLdifMite.ts","mobparts/mites/network/traefikNetworkMite.ts","mobparts/mites/custom/ldapBootstrapMegaDockerDotLdifMite.ts","mobparts/mites/headers/mobSecretsHeaderSectionString.ts","mobparts/mites/headers/mobSecretsFooterSectionString.ts","mobparts/mites/service/booksServiceMite.ts","mobparts/mites/service/mediaRequestsServiceMite.ts","mobparts/mites/network/booksNetworkMite.ts","mobparts/mites/service/plexServiceMite.ts","mobparts/mites/network/plexNetworkMite.ts","images/manikin-icons/booksIcon.png","mobparts/mites/network/comicsNetworkMite.ts","mobparts/mites/network/moviesNetworkMite.ts","mobparts/mites/network/musicNetworkMite.ts","mobparts/mites/network/tvNetworkMite.ts","mobparts/mites/ldif/plexLdifMite.ts","mobparts/mites/ldif/mediarequestsLdifMite.ts","mobparts/manikins/books.ts","mobparts/mites/ldif/booksLdifMite.ts","mobparts/mites/service/comicsServiceMite.ts","images/manikin-icons/comicsIcon.png","mobparts/manikins/comics.ts","mobparts/mites/ldif/comicsLdifMite.ts","mobparts/mites/service/duplicatiServiceMite.ts","images/manikin-icons/duplicatiIcon.png","mobparts/manikins/duplicati.ts","mobparts/mites/ldif/duplicatiLdifMite.ts","mobparts/mites/service/drupalServiceMite.ts","images/manikin-icons/drupalIcon.png","functions/validators/noWhitespaceOrSymbolsValidator.ts","functions/validators/noWhitespaceValidator.ts","mobparts/memories/drupalPostgresUser.ts","functions/validators/passwordValidator.ts","mobparts/memories/drupalPostgresPassword.ts","mobparts/mites/network/ldapNetworkMite.ts","mobparts/manikins/drupal.ts","mobparts/mites/ldif/drupalLdifMite.ts","mobparts/mites/network/drupalNetworkMite.ts","mobparts/mites/service/elkServiceMite.ts","images/manikin-icons/elkIcon.png","mobparts/memories/kibanaUser.ts","mobparts/memories/kibanaPassword.ts","mobparts/manikins/elk.ts","mobparts/mites/ldif/elasticsearchLdifMite.ts","mobparts/mites/ldif/logstashLdifMite.ts","mobparts/mites/ldif/kibanaLdifMite.ts","mobparts/mites/network/elkNetworkMite.ts","mobparts/mites/custom/kibanaDotYmlMite.ts","mobparts/mites/custom/elasticsearchDotYmlMite.ts","mobparts/mites/custom/elasticsearchJvmDotOptionsMite.ts","mobparts/mites/custom/elasticsearchLog4j2DotPropertiesMite.ts","mobparts/mites/custom/filebeatDotYmlMite.ts","mobparts/mites/service/emailServiceMite.ts","mobparts/manikins/email.ts","images/manikin-icons/emailIcon.png","mobparts/mites/ldif/emailLdifMite.ts","mobparts/mites/network/emailNetworkMite.ts","mobparts/mites/service/filebrowserServiceMite.ts","mobparts/manikins/filebrowser.ts","images/manikin-icons/filebrowserIcon.png","mobparts/mites/ldif/filebrowserLdifMite.ts","mobparts/mites/custom/filebrowserDatabaseDotDbMite.ts","mobparts/mites/service/ghostServiceMite.ts","mobparts/manikins/ghost.ts","images/manikin-icons/ghostIcon.png","mobparts/memories/ghostRootMariaDBPassword.ts","mobparts/mites/ldif/ghostLdifMite.ts","mobparts/mites/network/ghostNetworkMIte.ts","mobparts/mites/service/grocyServiceMite.ts","mobparts/manikins/grocy.ts","images/manikin-icons/grocyIcon.png","mobparts/mites/ldif/grocyLdifMite.ts","mobparts/mites/network/grocyNetworkMite.ts","mobparts/mites/service/heimdallServiceMite.ts","mobparts/manikins/heimdall.ts","images/manikin-icons/heimdallIcon.png","mobparts/mites/ldif/heimdallLdifMite.ts","mobparts/mites/network/heimdallNetworkMite.ts","mobparts/mites/service/kanboardServiceMite.ts","mobparts/manikins/kanboard.ts","images/manikin-icons/kanboardIcon.png","mobparts/memories/kanboardMariaDBPassword.ts","mobparts/memories/kanboardMariaDBRootPassword.ts","mobparts/memories/kanboardMariaDBUser.ts","mobparts/mites/ldif/kanboardLdifMite.ts","mobparts/mites/network/kanboardNetworkMite.ts","mobparts/memories/ldapAdminPassword.ts","mobparts/memories/ldapAdminUsername.ts","mobparts/memories/ldapConfigurationPassword.ts","mobparts/mites/service/ldapServiceMite.ts","mobparts/manikins/ldap.ts","images/manikin-icons/ldapIcon.png","mobparts/memories/autheliaMariaDBPassword.ts","mobparts/memories/autheliaMariaDBRootPassword.ts","mobparts/memories/autheliaMariaDBUser.ts","mobparts/memories/ldapOrganisation.ts","functions/validators/noValidator.ts","mobparts/mites/ldif/ldapLdifMite.ts","mobparts/mites/custom/autheliaDotConfMite.ts","mobparts/mites/service/ledgerServiceMite.ts","mobparts/memories/ledgerPostgresPassword.ts","mobparts/manikins/ledger.ts","images/manikin-icons/ledgerIcon.png","mobparts/memories/ledgerPostgresUser.ts","mobparts/mites/ldif/ledgerLdifMite.ts","mobparts/mites/network/ledgerNetworkMite.ts","mobparts/mites/service/mealieServiceMite.ts","mobparts/manikins/mealie.ts","images/manikin-icons/mealieIcon.png","mobparts/mites/ldif/mealieLdifMite.ts","mobparts/mites/service/n8nServiceMite.ts","mobparts/manikins/n8n.ts","images/manikin-icons/n8nIcon.png","mobparts/memories/n8nUser.ts","mobparts/memories/n8nPassword.ts","mobparts/mites/ldif/n8nLdifMite.ts","mobparts/mites/network/n8nNetworkMite.ts","mobparts/mites/service/nextcloudServiceMite.ts","mobparts/manikins/nextcloud.ts","images/manikin-icons/nextcloudIcon.png","mobparts/memories/nextcloudMariaDBPassword.ts","mobparts/memories/nextcloudMariaDBRootPassword.ts","mobparts/memories/nextcloudMariaDBUser.ts","mobparts/mites/ldif/nextcloudLdifMite.ts","mobparts/mites/network/nextcloudNetworkMite.ts","mobparts/mites/service/nginxServiceMite.ts","mobparts/manikins/nginx.ts","images/manikin-icons/nginxIcon.png","mobparts/mites/ldif/nginxLdifMite.ts","mobparts/mites/network/nginxNetworkMite.ts","mobparts/mites/custom/nginxDefaultIndexHtmlMite.ts","mobparts/mites/service/opensourcePOSServiceMite.ts","mobparts/manikins/opensourcepos.ts","images/manikin-icons/opensourceposIcon.png","mobparts/memories/opensourcePOSMariaDBPassword.ts","mobparts/memories/opensourcePOSMariaDBUser.ts","mobparts/memories/opensourcePOSMariaDBRootPassword.ts","mobparts/mites/ldif/opensourceposLdifMite.ts","mobparts/mites/network/opensourcePOSNetworkMite.ts","mobparts/mites/service/piholeServiceMite.ts","mobparts/memories/piholePassword.ts","mobparts/manikins/pihole.ts","images/manikin-icons/piholeIcon.png","mobparts/mites/ldif/piholeLdifMite.ts","mobparts/mites/network/piholeNetworkMite.ts","mobparts/mites/service/portainerServiceMite.ts","mobparts/manikins/portainer.ts","images/manikin-icons/portainerIcon.png","mobparts/mites/ldif/portainerLdifMite.ts","mobparts/mites/network/portainerNetworkMite.ts","mobparts/mites/service/rocketchatServiceMite.ts","mobparts/manikins/rocketchat.ts","images/manikin-icons/rocketchatIcon.png","mobparts/memories/rocketchatBotPassword.ts","mobparts/memories/rocketchatBotUsername.ts","mobparts/mites/ldif/rocketchatLdifMite.ts","mobparts/mites/network/rocketchatNetworkMite.ts","mobparts/mites/service/styleguidistServiceMite.ts","mobparts/manikins/styleguidist.ts","images/manikin-icons/styleguidistIcon.png","mobparts/mites/ldif/styleguidistLdifMite.ts","mobparts/mites/network/styleguidistNetworkMite.ts","mobparts/mites/custom/styleguidistPackageDotJsonMite.ts","mobparts/mites/custom/styleguidistStyleguideDotConfigDotJsMite.ts","mobparts/mites/custom/styleguidistTsconfigDotJsonMite.ts","mobparts/mites/custom/styleguidistWebpackDotConfigDotJsMite.ts","mobparts/mites/service/swarmpitServiceMite.ts","mobparts/manikins/swarmpit.ts","images/manikin-icons/swarmpitIcon.png","mobparts/mites/ldif/swarmpitLdifMite.ts","mobparts/mites/network/swarmpitNetworkMite.ts","mobparts/mites/service/syncthingServiceMite.ts","mobparts/manikins/syncthing.ts","images/manikin-icons/syncthingIcon.png","mobparts/mites/ldif/syncthingLdifMite.ts","mobparts/mites/service/tvServiceMite.ts","mobparts/manikins/tv.ts","images/manikin-icons/tvIcon.png","mobparts/mites/ldif/tvLdifMite.ts","mobparts/mites/service/visualizerServiceMite.ts","mobparts/manikins/visualizer.ts","images/manikin-icons/visualizerIcon.png","mobparts/mites/ldif/visualizerLdifMite.ts","mobparts/mites/network/visualizerNetworkMite.ts","mobparts/mites/service/wordpressServiceMite.ts","mobparts/memories/wordpressMariaDBPassword.ts","mobparts/memories/wordpressMariaDBRootPassword.ts","mobparts/memories/wordpressMariaDBUser.ts","mobparts/manikins/wordpress.ts","images/manikin-icons/wordpressIcon.png","mobparts/mites/ldif/wordpressLdifMite.ts","mobparts/mites/network/wordpressNetworkMite.ts","mobparts/mites/service/moviesServiceMite.ts","mobparts/mites/service/musicServiceMite.ts","globals/workingManikins.ts","mobparts/manikins/movies.ts","images/manikin-icons/moviesIcon.png","mobparts/mites/ldif/moviesLdifMite.ts","mobparts/manikins/music.ts","images/manikin-icons/musicIcon.png","mobparts/mites/ldif/musicLdifMite.ts","globals/initialMegaDockerState.ts","functions/reducers/megaReducer.ts","functions/reducers/toggleTheme.ts","functions/reducers/getManikins.ts","functions/reducers/getMites.ts","functions/reducers/getDServiceMites.ts","functions/reducers/getDNetworkMites.ts","functions/reducers/getCustomMites.ts","functions/reducers/zipDockerSwarm.ts","components/MegaContext.tsx","components/DarkModeSwitch.tsx","components/ManikinIcon.tsx","components/ManikinSwitch.tsx","components/ManikinTable.tsx","components/ManikinRow.tsx","components/ContainerManikinPane.tsx","components/ButtonExportDockerSwarm.tsx","components/ContainerButtonPane.tsx","images/indicators/checkmarkIndicator.png","images/indicators/circleIndicator.png","components/MemoryValidationIcon.tsx","components/MemoryTable.tsx","components/MemoryRow.tsx","components/ContainerMemoryPane.tsx","components/ContainerMainArea.tsx","components/App.tsx","index.tsx"],"names":["getMemories","manikinsToGetMemoriesFrom","filter","eachManikin","isSelected","flatMap","memories","AsapFont","fontFamily","fontWeight","AccordionExpandedStyleDark","AccordionRootStyleDark","boxShadow","AlertRootStyleDark","backgroundColor","borderRadius","borderColor","AppBarRootStyleDark","display","verticalAlign","AutocompleteOptionStyleDark","color","marginTop","marginBottom","AutocompletePaperStyleDark","BottomNavigationActionRootStyleDark","grey","margin","BottomNavigationRootStyleDark","borderTopLeftRadius","borderTopRightRadius","ButtonIconInheritStyleDark","ButtonIconRootStyleDark","textTransform","ButtonPrimaryStyleDark","ButtonRootStyleDark","ButtonSecondaryStyleDark","CardRootStyleDark","paddingTop","CheckboxRootStyleDark","marginLeft","marginRight","CircularProgressPrimaryStyleDark","CircularProgressRootStyleDark","ContainerRootStyleDark","alignContent","padding","DialogPaperStyleDark","DialogRootStyleDark","DrawerPaperStyleDark","width","height","DrawerRootStyleDark","flexShrink","FabRootStyleDark","FormControlLabelRootStyleDark","FormControlRootStyleDark","FormHelperTextRootStyleDark","IconRootStyleDark","ImageListItemBarRootStyleDark","borderBottomLeftRadius","borderBottomRightRadius","ImageListRootStyleDark","InputAdornmentRootStyleDark","InputBaseRootStyleDark","InputLabelRootStyleDark","textShadow","InputOutlinedRootStyleDark","ListItemRootStyleDark","ListRootStyleDark","MenuRootStyleDark","MobileStepperDotActiveStyleDark","MobileStepperDotStyleDark","MobileStepperProgressStyleDark","border","NativeSelectRootStyleDark","OutlinedInputMultilineStyleDark","PaletteBackgroundStyleDark","default","paper","PalettePrimaryStyleDark","main","light","dark","contrastText","PaletteSecondaryStyleDark","blue","PaperRootStyleDark","paddingLeft","paddingRight","RadioRootStyleDark","SelectMenuRootStyleDark","SelectRootStyleDark","SliderMarkActiveStyleDark","opacity","SliderMarkStyleDark","SliderRailStyleDark","SliderRootStyleDark","lightBlue","SliderThumbStyleDark","SliderTrackStyleDark","SliderValueLabelStyleDark","left","top","background","SpeedDialIconRootStyleDark","StepIconActiveStyleDark","StepIconCompletedStyleDark","StepIconRootStyleDark","SwitchRootStyleDark","root","switchBase","transform","thumb","track","TabLabelIconStyleDark","TablePaginationRootStyleDark","TablePaginationSelectRootStyleDark","TabRootStyleDark","TabSelectedStyleDark","TabsRootStyleDark","TextAreaRootStyleDark","ToggleButtonGroupRootStyleDark","ToggleButtonRootStyleDark","TouchRippleRootStyleDark","OrbThemeDark","createMuiTheme","components","MuiAccordion","styleOverrides","expanded","MuiAlert","MuiAppBar","MuiAutocomplete","option","MuiBottomNavigation","MuiBottomNavigationAction","MuiButton","containedPrimary","containedSecondary","MuiCard","MuiCheckbox","MuiChip","MuiCircularProgress","colorPrimary","MuiContainer","MuiCssBaseline","MuiDialog","MuiDrawer","MuiFab","MuiFormControl","MuiFormControlLabel","MuiFormHelperText","MuiIconButton","colorInherit","colorSecondary","MuiIcon","MuiImageList","MuiImageListItemBar","MuiInputAdornment","MuiInputBase","MuiInputLabel","MuiList","MuiListItem","MuiMenu","MuiMobileStepper","dot","dotActive","progress","MuiNativeSelect","filled","select","outlined","MuiOutlinedInput","multiline","MuiPaginationItem","TablePaginationItemRootStyleDark","MuiPaper","MuiPopover","MuiRadio","MuiSelect","selectMenu","MuiSlider","valueLabel","rail","mark","markActive","MuiSpeedDial","fab","MuiStepIcon","active","completed","MuiSwitch","MuiTab","selected","labelIcon","MuiTabs","indicator","MuiTablePagination","selectRoot","MuiTextField","MuiToggleButton","MuiToggleButtonGroup","MuiTouchRipple","palette","mode","primary","secondary","text","disabled","typography","AccordionExpandedStyle","AccordionRootStyle","AlertRootStyle","AppBarRootStyle","AutocompleteOptionStyle","AutocompletePaperStyle","BottomNavigationActionRootStyle","BottomNavigationRootStyle","ButtonIconInheritStyle","ButtonIconRootStyle","ButtonPrimaryStyle","ButtonRootStyle","ButtonSecondaryStyle","CardRootStyle","CheckboxRootStyle","CircularProgressPrimaryStyle","CircularProgressRootStyle","ContainerRootStyle","DialogPaperStyle","DialogRootStyle","DrawerPaperStyle","DrawerRootStyle","FabRootStyle","FormControlLabelRootStyle","FormControlRootStyle","FormHelperTextRootStyle","IconRootStyle","ImageListItemBarRootStyle","ImageListRootStyle","InputAdornmentRootStyle","InputBaseRootStyle","InputLabelRootStyle","InputOutlinedRootStyle","ListItemRootStyle","ListRootStyle","MenuRootStyle","MobileStepperDotActiveStyle","MobileStepperDotStyle","MobileStepperProgressStyle","NativeSelectRootStyle","OutlinedInputMultilineStyle","PaletteBackgroundStyle","PalettePrimaryStyle","PaletteSecondaryStyle","PaperRootStyle","RadioRootStyle","SelectMenuRootStyle","SelectRootStyle","SliderMarkActiveStyle","SliderMarkStyle","SliderRailStyle","SliderRootStyle","SliderThumbStyle","SliderTrackStyle","SliderValueLabelStyle","SpeedDialIconRootStyle","StepIconActiveStyle","StepIconCompletedStyle","StepIconRootStyle","SwitchRootStyle","TabLabelIconStyle","TablePaginationItemRootStyle","TablePaginationSelectRootStyle","TableRowRootStyle","TableRowSelectedStyle","TabRootStyle","TabSelectedStyle","TabsRootStyle","TextAreaRootStyle","ToggleButtonGroupRootStyle","ToggleButtonRootStyle","OrbThemeLight","MuiTableRow","TextFieldRootStyle","action","mobFileHeaderSectionString","type","miteIndex","miteString","mobServicesFooterSectionString","mobNetworkHeaderSectionString","mobNetworkFooterSectionString","cloudflareAPIToken","memoryIndex","memoryMarker","memoryType","shouldAutocomplete","name","tooltip","value","valueType","isReady","validator","stringToValidate","length","isExactlyFortyCharacters","RegExp","test","letsEncryptEmail","primaryDomain","hostnames","traefikServiceMite","webInterfaceHostnames","mobName","hasNoWhiteSpaceOrSymbols","nameLengthRequirements","traefikManikin","description","folder","isCore","manikinGroups","manikinIcon","traefikIcon","manikinIndex","mites","ports","subfolders","ldapBootstrapMegaDockerDotLdifMite","miteFile","path","extension","permissions","contents","mobSecretsHeaderSectionString","mobSecretsFooterSectionString","booksServiceMite","mediaRequestsServiceMite","booksNetworkMite","plexServiceMite","plexNetworkMite","comicsNetworkMite","moviesNetworkMite","musicNetworkMite","tvNetworkMite","plexLdifMite","mediarequestsLdifMite","booksManikin","booksIcon","comicsServiceMite","comicsManikin","comicsIcon","duplicatiServiceMite","duplicatiManikin","duplicatiIcon","drupalServiceMite","noWhitespaceOrSymbolsValidator","hasNoWhitespace","spacesDetected","includes","tabsDetected","lineFeedsDetected","formFeedsDetected","noWhitespaceValidator","drupalPostgresUser","passwordValidator","passesRegex","isAtLeast8Characters","drupalPostgresPassword","ldapNetworkMite","drupalManikin","drupalIcon","elkServiceMite","kibanaUser","kibanaPassword","elkManikin","elkIcon","emailServiceMite","emailManikin","filebrowserServiceMite","filebrowserManikin","ghostServiceMite","ghostManikin","grocyServiceMite","grocyManikin","heimdallServiceMite","heimdallManikin","kanboardServiceMite","kanboardManikin","ldapAdminPassword","ldapAdminUsername","ldapConfigurationPassword","ldapServiceMite","ldapManikin","ledgerServiceMite","ledgerPostgresPassword","ledgerManikin","mealieServiceMite","mealieManikin","n8nServiceMite","n8nManikin","nextcloudServiceMite","nextcloudManikin","nginxServiceMite","nginxManikin","opensourceposManikin","piholeServiceMite","piholePassword","piholeManikin","portainerServiceMite","portainerManikin","rocketchatServiceMite","rocketchatManikin","styleguidistServiceMite","styleguidistManikin","swarmpitServiceMite","swarmpitManikin","syncthingServiceMite","syncthingManikin","tvServiceMite","tvManikin","visualizerServiceMite","visualizerManikin","wordpressServiceMite","wordpressMariaDBPassword","wordpressMariaDBRootPassword","wordpressMariaDBUser","wordpressManikin","moviesServiceMite","workingManikins","coreManikins","otherManikins","initialMobMites","eachMite","initialMegaDockerState","theme","manikinTable","selectedManikins","allMobMites","mobDServiceMites","mobDNetworkMites","mobCustomMites","ymlOutput","megaReducer","state","newState","newTheme","Error","toggleTheme","payload","miteArray","getDNetworkMites","getCustomMites","indexOf","memory","zipCompose","zip","JSZip","zipManikins","manikins","zipMemories","traefikIndex","mobNameIndex","domainIndex","cloudflareAPITokenIndex","cloudflareAPITokenValue","toString","split","join","Array","from","Set","map","serviceMites","sort","mite1","mite2","cloudflareHosts","eachTraefikedMite","flat","networkMites","customMites","mite","ldifAdditions","ldifIndex","fullDomain","tld","domain","populateLdifDCs","insertMemoryValues","ymlInput","workingYml","forEach","eachMemory","tempYml","eachCustomMite","workingFileContents","ymlString","a","makeZip","file","unixPermissions","generateAsync","output","createZipContents","subs","eachSubfolder","compression","compressionOptions","level","platform","then","content","fileSaver","saveAs","zipDockerSwarm","MegaContext","React","MegaProvider","props","dispatch","Provider","ThemeProvider","children","DarkModeSwitch","TableCell","style","Switch","checked","onClick","ManikinIcon","manikin","className","src","alt","ManikinSwitch","ManikinTable","Table","size","stickyHeader","TableHead","TableRow","TableBody","Tooltip","title","hover","ContainerManikinPane","ButtonExportDockerSwarm","fullyValidated","every","mobnameIndex","mobname","Button","variant","ContainerButtonPane","MemoryValidationIcon","circleIndicator","checkmarkIndicator","MemoryTable","sortedMemories","b","localeCompare","thisMemory","handleChangeFunction","changeEvent","memoryToUpdate","newValue","target","TextField","fullWidth","required","placeholder","autoComplete","onChange","ContainerMemoryPane","ContainerMainArea","App","Paper","square","Grid","container","item","xs","ReactDOM","render","document","getElementById"],"mappings":"qOAcaA,EAAc,SAACC,GAAD,OACzBA,EAA0BC,QAAO,SAACC,GAAD,OAA2BA,EAAYC,cAAYC,SAAQ,SAACF,GAAD,OAAiBA,EAAYG,a,gBCL5GC,G,MALqB,CAClCC,WAAY,OACZC,WAAY,MCHCC,EAFmC,GCInCC,EAJ+B,CAC5CC,UAAU,QCSGC,EAV2B,CACxCC,gBAAgB,UAChBC,aAAa,OACbH,UAAU,8CACV,UAAW,CACTI,YAAY,UACZJ,UAAU,gDCACK,EAN4B,CACzCC,QAAQ,OACRC,cAAc,SACdP,UAAU,2BCaGQ,EAhBoC,CACjDN,gBAAgB,UAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTT,gBAAgB,UAChBO,MAAM,UACNT,UAAU,uICACY,EATmC,CAChDD,aAAa,OACbR,aAAa,OACbH,UAAU,qFAGVS,MAAM,WCLFI,EAAqD,CACzDJ,MAAOK,IAAK,KACZZ,gBAAgB,UAChBC,aAAa,OACbY,OAAO,MACP,UAAW,CACTb,gBAAgB,UAChBF,UAAU,kIAKZ,aAAc,CACZE,gBAAgB,UAChBO,MAAM,UACN,UAAW,CACTP,gBAAgB,UAChBF,UAAU,UAKDa,IChBAG,EAPsC,CACnDC,oBAAoB,OACpBC,qBAAqB,OACrBlB,UAAU,oDCYGmB,EAfmC,CAChDV,MAAM,UACNT,UAAU,uIAIV,UAAW,CACTE,gBAAgB,UAChBF,UAAU,+ICCCoB,EATgC,CAC7CX,MAAM,UACNN,aAAa,OACbkB,cAAc,YACd,UAAW,CACTA,cAAc,cCYHC,EAjB+B,CAC5CpB,gBAAgB,UAChBF,UAAU,uIAIVS,MAAM,UACN,UAAW,CACTP,gBAAgB,UAChBO,MAAM,UACNT,UAAU,+ICACuB,EAV4B,CACzCd,MAAM,UACNN,aAAa,OACbY,OAAO,MACPM,cAAc,YACd,UAAW,CACTA,cAAc,cCUHG,EAhBiC,CAC9Cf,MAAM,UACNT,UAAU,uIAIV,UAAW,CACTS,MAAM,UACNP,gBAAgB,UAChBF,UAAU,+ICCCyB,EAV0B,CACvCC,WAAY,OACZvB,aAAc,OACdH,UAAU,qHAIVS,MAAM,WCDOkB,EAN8B,CAC3C3B,UAAU,OACV4B,WAAW,MACXC,YAAY,OCFRC,EAAkD,CACtDrB,MAAOK,IAAK,MAGCgB,ICHAC,EAFsC,GCWtCC,EAX+B,CAC5CC,aAAc,SACd9B,aAAc,OACd+B,QAAS,OACTlC,UAAU,oHAIVS,MAAM,WCJO0B,EAJ6B,CAC1ChC,aAAc,QCCDiC,EAF4B,GCGrCC,EAAsC,CAC1CC,MAJkB,IAKlBC,OAAO,aAAD,OAJa,GAIb,OACN7B,UAAW,EACXP,aAAc,OACdD,gBAAgB,UAChBF,UAAU,+BAGGqC,ICTTG,EAAqC,CACzCF,MAJkB,IAKlBC,OAAO,aAAD,OAJa,GAIb,OACN7B,UAAW,EACX+B,WAAY,GAGCD,ICRAE,EAFyB,GCEzBC,EAFsC,GCEtCC,EAFiC,GCC1CC,EAA6C,CACjDpC,MAAOK,IAAK,MAGC+B,ICHAC,EAF0B,GCK1BC,EALsC,CACnDC,uBAAuB,OACvBC,wBAAwB,QCGXC,EAL+B,CAC5C/C,aAAa,OACbH,UAAU,gDCKGmD,GAPoC,CACjD,UAAW,GACX,YAAa,CACX,UAAW,KCFTC,GAAwC,CAC5C3C,MAAOK,IAAK,KACZH,aAAa,MACbX,UAAU,yDACV,UAAW,CACTS,MAAOK,IAAK,KACZd,UAAU,+CAEZ,YAAa,CACXS,MAAOK,IAAK,KACZd,UAAU,8CACV,UAAW,CACTS,MAAOK,IAAK,KACZd,UAAU,iDAKDoD,MClBTC,GAAyC,CAC7C5C,MAAOK,IAAK,KACZwC,WACE,yFACF,YAAa,CACX7C,MAAM,YAIK4C,MCUAE,GApBmC,CAChDpD,aAAc,OACdH,UAAU,yIAIV,UAAW,CACTS,MAAM,UACNT,UAAU,+CAEZ,YAAa,CACXS,MAAM,UACNT,UAAU,8CACV,UAAW,CACTS,MAAM,UACNT,UAAU,iDCODwD,GAtB8B,CAC3CtD,gBAAgB,cAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTF,MAAM,UACNT,UAAU,sIAKZ,aAAc,CACZS,MAAM,UACNT,UAAU,yICVCyD,GAL0B,CACvC/C,UAAW,MACXC,aAAc,OCOD+C,GAT0B,CACvCvD,aAAc,OACdH,UAAU,oHAIVS,MAAM,WCLFkD,GAAiD,CACrDzD,gBAAiBY,IAAK,KAGT6C,MCJTC,GAA2C,CAC/C1D,gBAAiBY,IAAK,MAGT8C,MCJTC,GAAgD,CACpDC,OAAO,MACP5D,gBAAiBY,IAAK,KACtBV,YAAaU,IAAK,IAClBG,oBAAoB,MACpBC,qBAAqB,MACrB8B,uBAAuB,MACvBC,wBAAwB,OAGXY,MCJAE,GAPkC,CAC/CnC,WAAW,OACX,aAAc,CACZ,WAAc,SCIHoC,GAPwC,CACrD/C,oBAAqB,OACrBC,qBAAsB,OACtB8B,uBAAwB,OACxBC,wBAAyB,QCCZgB,GAL6C,CAC1DC,QAAQ,UACRC,MAAM,WCDFC,GAAqD,CACzDC,KAAK,UACLC,MAAOxD,IAAK,IACZyD,KAAK,UACLC,aAAc1D,IAAK,MAGNsD,M,SCPTK,GAAuD,CAC3DJ,KAAMK,KAAK,KACXJ,MAAOI,KAAK,KACZH,KAAMG,KAAK,KACXF,aAAa,WAGAC,MCDAE,GAP2B,CACxCC,YAAY,OACZC,aAAa,OACbjD,WAAW,OACXC,YAAY,QCECiD,GAN2B,CACxC9E,UAAU,OACV4B,WAAW,MACXC,YAAY,OCFRkD,GAAyC,CAC7C5E,aAAc,OACdM,MAAOK,IAAK,MAECiE,MCFAC,GAH4B,GCK5BC,GALkC,CAC/CC,QAAS,EACThF,gBAAiB,gBCDbiF,GAAqC,CACzCjF,gBAAiBY,IAAK,KACtByB,OAAQ,EACRD,MAAO,EACP5B,WAAY,GAGCyE,MCPTC,GAAqC,CACzC7C,OAAQ,EACRrC,gBAAiBY,IAAK,MAGTsE,M,UCLTC,GAAqC,CACzC5E,MAAO6E,KAAU,KACjB/C,OAAQ,EACRL,QAAS,UAGImD,MCWAE,GAlB6B,CAC1ChD,OAAQ,GACRD,MAAO,GACPpC,gBAAgB,UAChBF,UAAU,yNAEVU,WAAY,GACZkB,YAAa,GACb,iCAAkC,CAChC5B,UAAU,uGAEV,uBAAwB,CACtBA,UAAU,kOCRDwF,GAJ6B,CAC1CjD,OAAQ,GCAJkD,GAA2C,CAC/CC,KAAM,oBACNC,KAAM,GACN,MAAO,CACLC,WAAY,cACZnF,MAAOK,IAAK,OAID2E,MCRAI,GAFmC,GCEnCC,GAFgC,GCCzCC,GAA4C,CAChD7F,gBAAiBY,IAAK,KACtBX,aAAa,OAGA4F,MCLTC,GAAuC,CAC3CvF,MAAOK,IAAK,KACZ,UAAW,CACT,YAAeA,IAAK,KACpB,MAAS,QAIEkF,MCRTC,GAAqC,CACzCC,KAAM,CACJ5D,MAAO,GACPC,OAAQ,GACRL,QAAS,GAEXiE,WAAY,CACVjE,QAAS,EACT,YAAa,CACXkE,UAAW,mBACX3F,MAAO,UACP,aAAc,CACZP,gBAAiB,UACjBgF,QAAS,EACTpB,OAAQ,UAIduC,MAAO,CACL/D,MAAO,GACPC,OAAQ,IAEV+D,MAAO,CACLnG,aAAc,GACdD,gBAAiBY,IAAK,KACtBoE,QAAS,IAIEe,MC5BAM,GAF8B,GCE9BC,GAFqC,GCgBrCC,GAhB2C,CACxDvG,gBAAgB,UAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTT,gBAAgB,UAChBO,MAAM,UACNT,UAAU,uICPC0G,GAFyB,GCEzBC,GAF6B,GCE7BC,GAF0B,GCE1BC,GAF8B,GCE9BC,GAFuC,GCoBvCC,GApBkC,CAC/C5G,aAAc,OACd2D,OAAQ,OACR,UAAW,CACT5D,gBAAgB,UAChBF,UAAU,wIAKZ,aAAc,CACZE,gBAAgB,UAChBO,MAAM,UACNT,UAAU,yICZRgH,GAA0C,CAC9CvG,MAAOK,IAAK,MAGCkG,MC4EFC,GAAsBC,YAAe,CAChDC,WAAY,CACVC,aAAc,CACZC,eAAgB,CACdnB,KAAMnG,EACNuH,SAAUxH,IAGdyH,SAAU,CACRF,eAAgB,CACdnB,KAAMjG,IAGVuH,UAAW,CACTH,eAAgB,CACdnB,KAAM7F,IAGVoH,gBAAiB,CACfJ,eAAgB,CACdlD,MAAOvD,EACP8G,OAAQlH,IAGZmH,oBAAqB,CACnBN,eAAgB,CACdnB,KAAMlF,IAGV4G,0BAA2B,CACzBP,eAAgB,CACdnB,KAAMrF,IAGVgH,UAAW,CACTR,eAAgB,CACdnB,KAAM3E,EACNuG,iBAAkBxG,EAClByG,mBAAoBvG,IAGxBwG,QAAS,CACPX,eAAgB,CACdnB,KAAMzE,IAGVwG,YAAa,CACXZ,eAAgB,CACdnB,KAAMvE,IAGVuG,QAAS,CACPb,eAAgB,CACdnB,KAAM5E,IAGV6G,oBAAqB,CACnBd,eAAgB,CACdnB,KAAMnE,EACNqG,aAActG,IAGlBuG,aAAc,CACZhB,eAAgB,CACdnB,KAAMlE,IAGVsG,eAAgB,CACdjB,eAAgB,CACd,UAAW,CACT,aAAc1H,KAIpB4I,UAAW,CACTlB,eAAgB,CACdlD,MAAOhC,EACP+D,KAAM9D,IAGVoG,UAAW,CACTnB,eAAgB,CACdlD,MAAO9B,EACP6D,KAAM1D,IAGViG,OAAQ,CACNpB,eAAgB,CACdnB,KAAMxD,IAGVgG,eAAgB,CACdrB,eAAgB,CACdnB,KAAMtD,IAGV+F,oBAAqB,CACnBtB,eAAgB,CACdnB,KAAMvD,IAGViG,kBAAmB,CACjBvB,eAAgB,CACdnB,KAAMrD,IAGVgG,cAAe,CACbxB,eAAgB,CACdnB,KAAM9E,EACN0H,aAAc3H,EACdiH,aAAc9G,EACdyH,eAAgBvH,IAGpBwH,QAAS,CACP3B,eAAgB,CACdnB,KAAMpD,IAGVmG,aAAc,CACZ5B,eAAgB,CACdnB,KAAMhD,IAGVgG,oBAAqB,CACnB7B,eAAgB,CACdnB,KAAMnD,IAGVoG,kBAAmB,CACjB9B,eAAgB,CACdnB,KAAM/C,KAGViG,aAAc,CACZ/B,eAAgB,CACdnB,KAAM9C,KAGViG,cAAe,CACbhC,eAAgB,CACdnB,KAAM7C,KAGViG,QAAS,CACPjC,eAAgB,CACdnB,KAAMzC,KAGV8F,YAAa,CACXlC,eAAgB,CACdnB,KAAM1C,KAGVgG,QAAS,CACPnC,eAAgB,CACdlD,MAAOT,KAGX+F,iBAAkB,CAChBpC,eAAgB,CACdqC,IAAK9F,GACL+F,UAAWhG,GACXiG,SAAU/F,KAGdgG,gBAAiB,CACfxC,eAAgB,CACdnB,KAAMnC,GACN+F,OAAQ/F,GACRgG,OAAQhG,GACRiG,SAAUjG,KAGdkG,iBAAkB,CAChB5C,eAAgB,CACdnB,KAAM3C,GACN2G,UAAWlG,KAGfmG,kBAAmB,CACjB9C,eAAgB,CACdnB,KAAMkE,KAGVC,SAAU,CACRhD,eAAgB,CACdnB,KAAMvB,KAGV2F,WAAY,CACVjD,eAAgB,CACdlD,MAAOT,KAGX6G,SAAU,CACRlD,eAAgB,CACdnB,KAAMpB,KAGV0F,UAAW,CACTnD,eAAgB,CACdnB,KAAMlB,GACNyF,WAAY1F,KAGhB2F,UAAW,CACTrD,eAAgB,CACdnB,KAAMb,GACNgB,MAAOd,GACPoF,WAAYlF,GACZa,MAAOd,GACPoF,KAAMxF,GACNyF,KAAM1F,GACN2F,WAAY7F,KAGhB8F,aAAc,CACZ1D,eAAgB,CACdnB,KAAML,GACNmF,IAAK1J,IAGT2J,YAAa,CACX5D,eAAgB,CACdnB,KAAMF,GACNkF,OAAQpF,GACRqF,UAAWpF,KAGfqF,UAAW,CACT/D,eAAgB,CACdnB,KAAMD,KAGVoF,OAAQ,CACNhE,eAAgB,CACdnB,KAAMQ,GACN4E,SAAU3E,GACV4E,UAAWhF,KAGfiF,QAAS,CACPnE,eAAgB,CACdnB,KAAMU,GACN6E,UAAW9E,KAGf+E,mBAAoB,CAClBrE,eAAgB,CACdnB,KAAMM,GACNmF,WAAYlF,KAGhBmF,aAAc,CACZvE,eAAgB,CACdnB,KAAMW,KAGVgF,gBAAiB,CACfxE,eAAgB,CACdnB,KAAMa,KAGV+E,qBAAsB,CACpBzE,eAAgB,CACdnB,KAAMY,KAGViF,eAAgB,CACd1E,eAAgB,CACdnB,KAAMc,MAIZgF,QAAS,CACPC,KAAM,OACNrG,WAAY3B,GACZiI,QAAS9H,GACT+H,UAAW1H,GACX2H,KAAM,CACJF,QAASpL,IAAK,KACdqL,UAAWrL,IAAK,KAChBuL,SAAUvL,IAAK,OAGnBwL,WAAY,CACV1M,WAAY,UC9WD2M,GAF+B,GCI/BC,GAJ2B,CACxCxM,UAAU,QCUGyM,GAXuB,CACpCvM,gBAAgB,UAChBC,aAAa,OACbH,UAAU,4CACVS,MAAM,UACN,UAAW,CACTL,YAAY,UACZJ,UAAU,8CCDC0M,GANwB,CACrCpM,QAAQ,OACRC,cAAc,SACdP,UAAU,2BCaG2M,GAhBgC,CAC7CzM,gBAAgB,UAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTT,gBAAgB,UAChBO,MAAM,UACNT,UAAU,mICAC4M,GAT+B,CAC5CjM,aAAa,OACbR,aAAa,OACbH,UAAU,mFAGVS,MAAM,WCLFoM,GAAiD,CACrDpM,MAAOK,IAAK,KACZZ,gBAAgB,UAChBC,aAAa,OACbY,OAAO,MACP,UAAW,CACTb,gBAAgB,UAChBF,UAAU,kIAKZ,aAAc,CACZE,gBAAgB,UAChBO,MAAM,UACN,UAAW,CACTP,gBAAgB,UAChBF,UAAU,UAKD6M,MChBAC,GAPkC,CAC/C7L,oBAAoB,OACpBC,qBAAqB,OACrBlB,UAAU,oDCYG+M,GAf+B,CAC5C/M,UAAU,mIAIV,UAAW,CACTE,gBAAgB,UAChBO,MAAM,UACNT,UAAU,2ICACgN,GAR4B,CACzC7M,aAAa,OACbkB,cAAc,YACd,UAAW,CACTA,cAAc,cCYH4L,GAhB2B,CACxCjN,UAAU,mIAIVS,MAAM,UACN,UAAW,CACTP,gBAAgB,UAChBO,MAAM,UACNT,UAAU,2ICACkN,GATwB,CACrC/M,aAAa,OACbY,OAAO,MACPM,cAAc,YACd,UAAW,CACTA,cAAc,cCWH8L,GAhB6B,CAC1C1M,MAAM,UACNT,UAAU,mIAIV,UAAW,CACTS,MAAM,UACNP,gBAAgB,UAChBF,UAAU,2ICCCoN,GAVsB,CACnC1L,WAAY,OACZvB,aAAc,OACdH,UAAU,iHAIVS,MAAM,WCDO4M,GAN0B,CACvCrN,UAAU,OACV4B,WAAW,MACXC,YAAY,OCFRyL,GAA8C,CAClD7M,MAAOK,IAAK,MAGCwM,MCHAC,GAFkC,GCWlCC,GAX2B,CACxCvL,aAAc,SACd9B,aAAc,OACd+B,QAAS,OACTlC,UAAU,iHAIVS,MAAM,WCJOgN,GAJyB,CACtCtN,aAAc,QCCDuN,GAFwB,GCGjCC,GAAkC,CACtCrL,MAJkB,IAKlBC,OAAO,aAAD,OAJa,GAIb,OACN7B,UAAW,EACXP,aAAc,OACdD,gBAAgB,UAChBF,UAAU,+BAGG2N,MCTTC,GAAiC,CACrCtL,MAJkB,IAKlBC,OAAO,aAAD,OAJa,GAIb,OACN7B,UAAW,EACX+B,WAAY,GAGCmL,MCRAC,GAFqB,GCErBC,GAFkC,GCElCC,GAF6B,GCCtCC,GAAyC,CAC7CvN,MAAOK,IAAK,MAGCkN,MCHAC,GAFsB,GCKtBC,GALkC,CAC/ClL,uBAAuB,OACvBC,wBAAwB,QCGXkL,GAL2B,CACxChO,aAAa,OACbH,UAAU,8CCKGoO,GAPgC,CAC7C,UAAW,GACX,YAAa,CACX,UAAW,KCeAC,GAlB2B,CACxC5N,MAAM,QACNE,aAAa,MACbX,UAAU,yDACV,UAAW,CACTS,MAAM,QACNT,UAAU,6CAEZ,YAAa,CACXS,MAAM,QACNT,UAAU,4CACV,UAAW,CACTS,MAAM,QACNT,UAAU,+CCZVsO,GAAqC,CACzC7N,MAAOK,IAAK,KACZwC,WACE,yFACF,YAAa,CACX7C,MAAM,UAIK6N,MCUAC,GApB+B,CAC5CpO,aAAc,OACdH,UAAU,qIAIV,UAAW,CACTS,MAAM,QACNT,UAAU,6CAEZ,YAAa,CACXS,MAAM,QACNT,UAAU,4CACV,UAAW,CACTS,MAAM,QACNT,UAAU,+CCODwO,GAtB0B,CACvCtO,gBAAgB,cAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTF,MAAM,UACNT,UAAU,kIAKZ,aAAc,CACZS,MAAM,UACNT,UAAU,qICVCyO,GALsB,CACnC/N,UAAW,MACXC,aAAc,OCOD+N,GATsB,CACnCvO,aAAc,OACdH,UAAU,iHAIVS,MAAM,WCLFkO,GAA6C,CACjDzO,gBAAiBY,IAAK,MAGT6N,MCJTC,GAAuC,CAC3C1O,gBAAiBY,IAAK,MAGT8N,MCJTC,GAA4C,CAChD3O,gBAAiBY,IAAK,KACtBL,MAAO,WAGMoO,MCCAC,GAP8B,CAC3ClN,WAAW,OACX,aAAc,CACZ,WAAc,SCIHmN,GAPoC,CACjD9N,oBAAqB,OACrBC,qBAAsB,OACtB8B,uBAAwB,OACxBC,wBAAyB,QCCZ+L,GALyC,CACtD9K,QAAQ,UACRC,MAAM,WCDF8K,GAAiD,CACrD5K,KAAK,UACLC,MAAOxD,IAAK,KACZyD,KAAK,UACLC,aAAc1D,IAAK,MAGNmO,MCPTC,GAAmD,CACvD7K,KAAMiB,KAAU,KAChBhB,MAAOgB,KAAU,KACjBf,KAAMe,KAAU,KAChBd,aAAc1D,IAAK,MAGNoO,MCDAC,GAPuB,CACpCvK,YAAY,OACZC,aAAa,OACbjD,WAAW,OACXC,YAAY,QCECuN,GANuB,CACpCpP,UAAU,OACV4B,WAAW,MACXC,YAAY,OCCCwN,GAJ4B,CACzClP,aAAc,OACdM,MAAM,WCCO6O,GAHwB,GCCjCC,GAAuC,CAC3CrP,gBAAiBY,IAAK,MAGTyO,MCJTC,GAAiC,CACrCtP,gBAAiBY,IAAK,KACtByB,OAAQ,EACRD,MAAO,EACP5B,WAAY,GAGC8O,MCPTC,GAAiC,CACrClN,OAAQ,EACRrC,gBAAiBY,IAAK,MAGT2O,MCLTC,GAAiC,CACrCjP,MAAO6E,KAAU,KACjB/C,OAAQ,EACRL,QAAS,UAGIwN,MCWAC,GAlByB,CACtCpN,OAAQ,GACRD,MAAO,GACPpC,gBAAgB,UAChBF,UAAU,yNAEVU,WAAY,GACZkB,YAAa,GACb,iCAAkC,CAChC5B,UAAU,uGAEV,uBAAwB,CACtBA,UAAU,kOCRD4P,GAJyB,CACtCrN,OAAQ,GCQKsN,GAT8B,CAC3CnK,KAAM,oBACNC,KAAM,GACN,MAAO,CACLC,WAAY,cACZnF,MAAO,YCHIqP,GAF+B,GCE/BC,GAF4B,GCK5BC,GAL+B,CAC5C9P,gBAAgB,UAChBC,aAAa,OCDT8P,GAAmC,CACvCxP,MAAOK,IAAK,KACZ,UAAW,CACT,YAAeA,IAAK,KACpB,MAAS,QAIEmP,MCRTC,GAAiC,CACrChK,KAAM,CACJ5D,MAAO,GACPC,OAAQ,GACRL,QAAS,GAEXiE,WAAY,CACVjE,QAAS,EACT,YAAa,CACXkE,UAAW,mBACX3F,MAAO,UACP,aAAc,CACZP,gBAAiB,UACjBgF,QAAS,EACTpB,OAAQ,UAIduC,MAAO,CACL/D,MAAO,GACPC,OAAQ,IAEV+D,MAAO,CACLnG,aAAc,GACdD,gBAAiBY,IAAK,KACtBoE,QAAS,IAIEgL,MC5BAC,GAF0B,GCE1BC,GAFqC,GCgBrCC,GAhBuC,CACpDnQ,gBAAgB,UAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTT,gBAAgB,UAChBO,MAAM,UACNT,UAAU,mICICsQ,GAb0B,CACvCpQ,gBAAgB,UAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTT,gBAAgB,UAChBO,MAAM,UACNT,UAAU,uHCICuQ,GAb8B,CAC3CrQ,gBAAgB,UAChBO,MAAM,UACNN,aAAa,OACbO,UAAU,MACVC,aAAa,MACb,UAAW,CACTT,gBAAgB,UAChBO,MAAM,UACNT,UAAU,uHCPCwQ,GAFqB,GCErBC,GAFyB,GCEzBC,GAFsB,GCEtBC,GAF0B,GCE1BC,GAFmC,GCoBnCC,GApB8B,CAC3C1Q,aAAc,OACd2D,OAAQ,OACR,UAAW,CACT5D,gBAAgB,UAChBF,UAAU,oIAKZ,aAAc,CACZE,gBAAgB,UAChBO,MAAM,UACNT,UAAU,qICmED8Q,GAAuB5J,YAAe,CACjDC,WAAY,CACVC,aAAc,CACZC,eAAgB,CACdnB,KAAMsG,GACNlF,SAAUiF,KAGdhF,SAAU,CACRF,eAAgB,CACdnB,KAAMuG,KAGVjF,UAAW,CACTH,eAAgB,CACdnB,KAAMwG,KAGVjF,gBAAiB,CACfJ,eAAgB,CACdlD,MAAOyI,GACPlF,OAAQiF,KAGZhF,oBAAqB,CACnBN,eAAgB,CACdnB,KAAM4G,KAGVlF,0BAA2B,CACzBP,eAAgB,CACdnB,KAAM2G,KAGVhF,UAAW,CACTR,eAAgB,CACdnB,KAAMgH,GACNpF,iBAAkBmF,GAClBlF,mBAAoBoF,KAGxBnF,QAAS,CACPX,eAAgB,CACdnB,KAAMkH,KAGVnF,YAAa,CACXZ,eAAgB,CACdnB,KAAMmH,KAGVnF,QAAS,CACPb,eAAgB,CACdnB,KAAM+G,KAGV9E,oBAAqB,CACnBd,eAAgB,CACdnB,KAAMqH,GACNnF,aAAckF,KAGlBjF,aAAc,CACZhB,eAAgB,CACdnB,KAAMsH,KAGVlF,eAAgB,CACdjB,eAAgB,CACd,UAAW,CACT,aAAc1H,KAIpB4I,UAAW,CACTlB,eAAgB,CACdnB,KAAMwH,GACNvJ,MAAOsJ,KAGXjF,UAAW,CACTnB,eAAgB,CACdnB,KAAM0H,GACNzJ,MAAOwJ,KAGXlF,OAAQ,CACNpB,eAAgB,CACdnB,KAAM2H,KAGVnF,eAAgB,CACdrB,eAAgB,CACdnB,KAAM6H,KAGVpF,oBAAqB,CACnBtB,eAAgB,CACdnB,KAAM4H,KAGVlF,kBAAmB,CACjBvB,eAAgB,CACdnB,KAAM8H,KAGVnF,cAAe,CACbxB,eAAgB,CACdnB,KAAM8G,GACNlE,aAAciE,GACd3E,aAAc6E,GACdlE,eAAgBoE,KAGpBnE,QAAS,CACP3B,eAAgB,CACdnB,KAAM+H,KAGVhF,aAAc,CACZ5B,eAAgB,CACdnB,KAAMiI,KAGVjF,oBAAqB,CACnB7B,eAAgB,CACdnB,KAAMgI,KAGV/E,kBAAmB,CACjB9B,eAAgB,CACdnB,KAAMkI,KAGVhF,aAAc,CACZ/B,eAAgB,CACdnB,KAAMmI,KAGVhF,cAAe,CACbhC,eAAgB,CACdnB,KAAMoI,KAGVhF,QAAS,CACPjC,eAAgB,CACdnB,KAAMuI,KAGVlF,YAAa,CACXlC,eAAgB,CACdnB,KAAMsI,KAGVhF,QAAS,CACPnC,eAAgB,CACdlD,MAAOuK,KAGXjF,iBAAkB,CAChBpC,eAAgB,CACdqC,IAAKkF,GACLjF,UAAWgF,GACX/E,SAAUiF,KAGdhF,gBAAiB,CACfxC,eAAgB,CACdnB,KAAM4I,GACNhF,OAAQgF,GACR/E,OAAQ+E,GACR9E,SAAU8E,KAGd7E,iBAAkB,CAChB5C,eAAgB,CACdnB,KAAMqI,GACNrE,UAAW6E,KAGf5E,kBAAmB,CACjB9C,eAAgB,CACdnB,KAAMkK,KAGV/F,SAAU,CACRhD,eAAgB,CACdnB,KAAMiJ,KAGV7E,WAAY,CACVjD,eAAgB,CACdlD,MAAOuK,KAGXnE,SAAU,CACRlD,eAAgB,CACdnB,KAAMkJ,KAGV5E,UAAW,CACTnD,eAAgB,CACdnB,KAAMoJ,GACN7E,WAAY4E,KAGhB3E,UAAW,CACTrD,eAAgB,CACdnB,KAAMwJ,GACNrJ,MAAOsJ,GACPhF,WAAYkF,GACZvJ,MAAOsJ,GACPhF,KAAM6E,GACN5E,KAAM2E,GACN1E,WAAYyE,KAGhBxE,aAAc,CACZ1D,eAAgB,CACdnB,KAAM4J,GACN9E,IAAKiC,KAGThC,YAAa,CACX5D,eAAgB,CACdnB,KAAM+J,GACN/E,OAAQ6E,GACR5E,UAAW6E,KAGf5E,UAAW,CACT/D,eAAgB,CACdnB,KAAMgK,KAGV7E,OAAQ,CACNhE,eAAgB,CACdnB,KAAMsK,GACNlF,SAAUmF,GACVlF,UAAW4E,KAGf3E,QAAS,CACPnE,eAAgB,CACdnB,KAAMwK,GACNjF,UAAWgF,KAGf/E,mBAAoB,CAClBrE,eAAgB,CACdnB,KAAMkK,GACNzE,WAAY0E,KAGhBU,YAAa,CACX1J,eAAgB,CACdnB,KAAMoK,GACNhF,SAAUiF,KAGd3E,aAAc,CACZvE,eAAgB,CACdnB,KAAM8K,KAGVnF,gBAAiB,CACfxE,eAAgB,CACdnB,KAAM2K,KAGV/E,qBAAsB,CACpBzE,eAAgB,CACdnB,KAAM0K,MAIZ5E,QAAS,CACPC,KAAM,QACNrG,WAAYoJ,GACZ9C,QAAS+C,GACT9C,UAAW+C,GACX+B,OAAQ,CACN3F,SAAS,WAEXc,KAAM,CACJF,QAAQ,UACRC,UAAU,UACVE,SAAS,YAGbC,WAAY,CACV1M,WAAY,U,8ECjXHsR,GAA0C,CACrDC,KAAK,oBACLC,UAAW,MACXC,WAAW,8ICHAC,GAGA,iCCHAC,GAGA,gDCHAC,GAGA,iCCIAC,GAA8B,CACzCC,YAAa,MACbC,aAAa,yBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,uBACLC,QAAQ,uFACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UCbmD,SAACC,GACpD,IAAKA,GAAgD,IAA5BA,EAAiBC,OACxC,OAAO,EAET,IAAMC,EAAgE,KAA5BF,EAAiBC,OAI3D,OAHoC,IAAIE,OAAJ,mBAC2BC,KAAKJ,IACVE,ICJ/CG,GAA4B,CACvCf,YAAa,MACbC,aAAa,uBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,8BACLC,QAAQ,iDACRC,MAAM,GACNC,UAAU,QACVC,SAAS,EACTC,UCZsC,SAACC,GACvC,SAAKA,GAAgD,IAA5BA,EAAiBC,WAGf,IAAIE,OAAO,2CACEC,KAAKJ,KCHlCM,GAAyB,CACpChB,YAAa,MACbC,aAAa,oBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,aACLC,QAAQ,wFACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UCbuC,SAACC,GACxC,IAAKA,GAAgD,IAA5BA,EAAiBC,OACxC,OAAO,EAIT,QAF4B,uZACaG,KAAKJ,KCD1CO,GAAsB,CAAC,WAEhBC,GAA4C,CACvDzB,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,ilDAAD,OA4CqCsB,GAAU,GA5C/C,2sBAoD2CA,GAAU,GApDrD,uhCClBG,OAA0B,wCCW5BG,GAAmB,CAC9BpB,YAAa,MACbC,aAAa,cACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,WACLC,QAAQ,4EACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UCbwC,SAACC,GACzC,IAAKA,GAAgD,IAA5BA,EAAiBC,OACxC,OAAO,EAET,IACMU,IAD4B,IAAIR,OAAJ,gBAC0BC,KAAKJ,GAC3DY,EAAkCZ,EAAiBC,OAAS,IAAMD,EAAiBC,OAAS,EAElG,OAD6BU,GAA4BC,ICO9CC,GAA2B,CACtCC,YAAY,gBACZC,OAAO,UACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,OAAD,WACfC,YAAaC,GACbC,aAAc,MACd9T,SAAU,CAACoT,GAASL,GAAkBhB,GAAoBiB,IAC1DZ,KAAK,UACL2B,MAAO,CCtBiC,CACxCtC,KAAK,OACLC,UAAW,MACXC,WAAW,ssBDmBcuB,GEtBc,CACvCzB,KAAK,qBACLC,UAAW,MACXC,WAAW,6GFoBXqC,MAAO,GACPC,WAAY,CAAC,QG9BFC,GAAkD,CAC7DzC,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,kBACLhC,KAAK,0BACLiC,UAAU,OACVC,YAAY,MACZC,SAAS,0sSCTAC,GAGA,8CCHAC,GAGA,gCCGPxB,GAAsB,CAAC,SAEhByB,GAA0C,CACrDjD,KAAK,qBACLC,UAAW,IACXyB,sBAAuBF,GACvBtB,WAAW,kiBAAD,OAsBmCsB,GAAU,GAtB7C,iWA2ByCA,GAAU,GA3BnD,2TCNNA,GAAsB,CAAC,WAAD,8DAEf0B,GAAkD,CAC7DlD,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,ofAAD,OAsBsCsB,GAAU,GAtBhD,sXA2B4CA,GAAU,GA3BtD,oxBAmD6CA,GAAU,GAnDvD,uaAwDmDA,GAAU,GAxD7D,kuCAgGqCA,GAAU,GAhG/C,+WAqG2CA,GAAU,GArGrD,iyBA8HwCA,GAAU,GA9HlD,oYAmI8CA,GAAU,GAnIxD,iyBA2J+CA,GAAU,GA3JzD,qbAgKqDA,GAAU,GAhK/D,yWCNC2B,GAA0B,CACrCnD,KAAK,qBACLC,UAAW,MACXC,WAAW,sGCHPsB,GAAsB,CAAC,QAEhB4B,GAAyC,CACpDpD,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,soBAAD,OA6BkCsB,GAAU,GA7B5C,0VAkCwCA,GAAU,GAlClD,8WCZC6B,GAAyB,CACpCrD,KAAK,qBACLC,UAAW,MACXC,WAAW,mGCPE,OAA0B,sCCU5BoD,GAA2B,CACtCtD,KAAK,qBACLC,UAAW,MACXC,WAAW,yGCHAqD,GAA2B,CACtCvD,KAAK,qBACLC,UAAW,MACXC,WAAW,yGCHAsD,GAA0B,CACrCxD,KAAK,qBACLC,UAAW,MACXC,WAAW,sGCHAuD,GAAuB,CAClCzD,KAAK,qBACLC,UAAW,MACXC,WAAW,6FCHAwD,GAA0B,CACrC1D,KAAK,OACLC,UAAW,MACXC,WAAW,kmCCHAyD,GAAmC,CAC9C3D,KAAK,OACLC,UAAW,MACXC,WAAW,u6BCcA0D,GAAyB,CACpC7B,YAAY,6BACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YAAa0B,GACbxB,aAAc,IACd9T,SAAU,GACV+T,MAAO,CC1B+B,CACtCtC,KAAK,OACLC,UAAW,IACXC,WAAW,ocDyBTyD,GACAD,GACAT,GACAC,GACAE,GACAD,GACAG,GACAC,GACAC,GACAC,GACAJ,IAEF1C,KAAK,QACL4B,MAAO,GACPC,WAAY,CAAC,eAAD,qIE1CRhB,GAAsB,CAAC,UAEhBsC,GAA2C,CACtD9D,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,kiBAAD,OAsBoCsB,GAAU,GAtB9C,wWA2B0CA,GAAU,GA3BpD,wTChBG,OAA0B,uCC2B5BuC,GAA0B,CACrChC,YAAY,8BACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YAAa6B,GACb3B,aAAc,MACd9T,SAAU,GACV+T,MAAO,CC1BgC,CACvCtC,KAAK,OACLC,UAAW,MACXC,WAAW,qiBDyBTwD,GACAC,GACAG,GACAZ,GACAE,GACAD,GACAG,GACAC,GACAC,GACAC,GACAJ,IAEF1C,KAAK,SACL4B,MAAO,GACPC,WAAY,CAAC,gBAAD,qIE1CRhB,GAAsB,CAAC,UAEhByC,GAA8C,CACzDjE,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,0kBAAD,OAuBoCsB,GAAU,GAvB9C,wWA4B0CA,GAAU,GA5BpD,6WChBG,OAA0B,0CCiB5B0C,GAA6B,CACxCnC,YAAY,qBACZC,OAAO,YACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,OAAD,WACfC,YAAagC,GACb9B,aAAc,MACd9T,SAAU,GACV+T,MAAO,CChBmC,CAC1CtC,KAAK,OACLC,UAAW,MACXC,WAAW,4/BDagB+D,IAC3BtD,KAAK,YACL4B,MAAO,GACPC,WAAY,CAAC,OAAD,cEnBRhB,GAAsB,CAAC,UAEhB4C,GAA2C,CACtDpE,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,q7BAAD,OA8BoCsB,GAAU,GA9B9C,wWAmC0CA,GAAU,GAnCpD,+uBChBG,OAA0B,uCCU5B6C,GAA2C,SAACpD,GACvD,IAAKA,EACH,OAAO,EAET,IAAMqD,ECNuC,SAACrD,GAC9C,IAAKA,EACH,OAAO,EAET,IAAMsD,EAA0BtD,EAAiBuD,SAAjB,KAC1BC,EAAwBxD,EAAiBuD,SAAjB,MACxBE,EAA6BzD,EAAiBuD,SAAjB,MAC7BG,EAA6B1D,EAAiBuD,SAAjB,MACnC,OAAID,IAGAE,IAGAC,IAGAC,KAGgCJ,GAAkBE,GAAgBC,GAAqBC,GDd1DC,CAAsB3D,GAEjDW,IADqC,IAAIR,OAAJ,mBAC0BC,KAAKJ,GACpEY,EAAkCZ,EAAiBC,OAAS,IAAMD,EAAiBC,OAAS,EAElG,OAD6BU,GAA4BC,GAA0ByC,GEPxEO,GAA8B,CACzCtE,YAAa,MACbC,aAAa,yBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,uBACLC,QAAQ,2BACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,ICbAS,GAA8B,SAAC7D,GAC1C,IAAKA,GAAgD,IAA5BA,EAAiBC,OACxC,OAAO,EAET,IACM6D,IADwB,IAAI3D,OAAO,+DACEC,KAAKJ,GAC1C+D,EAAgC/D,EAAiBC,OAAS,EAEhE,OAD6B6D,GAAeC,GCJjCC,GAAkC,CAC7C1E,YAAa,MACbC,aAAa,6BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,2BACLC,QAAQ,kEACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICXAI,GAAyB,CACpClF,KAAK,qBACLC,UAAW,MACXC,WAAW,mGCQAiF,GAA0B,CACrCpD,YAAY,cACZC,OAAO,SACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,eACfC,YAAaiD,GACb/C,aAAc,MACd9T,SAAU,CAACsW,GAAoBI,IAC/B3C,MAAO,CCpBgC,CACvCtC,KAAK,OACLC,UAAW,MACXC,WAAW,yuCDiBakE,GEpBc,CACtCpE,KAAK,qBACLC,UAAW,MACXC,WAAW,2GFiBmDgF,IAC9DvE,KAAK,SACL4B,MAAO,GACPC,WAAY,CAAC,UAAD,yCGvBRhB,GAAsB,CAAC,UAEhB6D,GAAwC,CACnDrF,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,iuDAAD,OAwDoCsB,GAAU,GAxD9C,wWA6D0CA,GAAU,GA7DpD,0XChBG,OAA0B,oCCW5B8D,GAAsB,CACjC/E,YAAa,MACbC,aAAa,iBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,cACLC,QAAQ,kBACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,ICVAkB,GAA0B,CACrChF,YAAa,MACbC,aAAa,qBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,kBACLC,QAAQ,6BACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICMAU,GAAuB,CAClCzD,YAAY,iBACZC,OAAO,MACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,cAChBC,YAAasD,GACbpD,aAAc,MACd9T,SAAU,CAAC+W,GAAYC,IACvBjD,MAAO,CC1BuC,CAC9CtC,KAAK,OACLC,UAAW,MACXC,WAAW,gkCCH8B,CACzCF,KAAK,OACLC,UAAW,MACXC,WAAW,2+BCH4B,CACvCF,KAAK,OACLC,UAAW,MACXC,WAAW,wrBH2BTmF,GI9BiC,CACnCrF,KAAK,qBACLC,UAAW,MACXC,WAAW,gGCTgC,CAC3CF,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,oBACLhC,KAAK,SACLiC,UAAU,MACVC,YAAY,MACZC,SAAS,qmBCTuC,CAClD9C,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,2BACLhC,KAAK,gBACLiC,UAAU,MACVC,YAAY,MACZC,SAAS,qNCT8C,CACzD9C,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,2BACLhC,KAAK,MACLiC,UAAU,UACVC,YAAY,MACZC,SAAS,iCCToD,CAC/D9C,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,2BACLhC,KAAK,SACLiC,UAAU,aACVC,YAAY,MACZC,SAAS,2BCTkC,CAC7C9C,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,sBACLhC,KAAK,WACLiC,UAAU,MACVC,YAAY,MACZC,SAAS,+tBTmCXnC,KAAK,MACL4B,MAAO,GACPC,WAAY,CAAC,uBAAD,uFUxCRhB,GAAsB,CAAC,UAAD,QAEfkE,GAA0C,CACrD1F,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,8jCAAD,OA6BasB,GAAU,GA7BvB,wDA8BeA,GAAU,GA9BzB,iyBA0DsCA,GAAU,GA1DhD,sXA+D4CA,GAAU,GA/DtD,6XCECmE,GAAyB,CACpC5D,YAAY,oBACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YCxBa,IAA0B,sCDyBvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEjB+B,CACtCtC,KAAK,OACLC,UAAW,MACXC,WAAW,+qBFcYwF,GGjBc,CACrC1F,KAAK,qBACLC,UAAW,MACXC,WAAW,uGHeXS,KAAK,SACL4B,MAAO,GACPC,WAAY,CAAC,SAAD,oCIpBRhB,GAAsB,CAAC,eAEhBoE,GAAgD,CAC3D5F,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,6fAAD,OAmByCsB,GAAU,GAnBnD,2YAwB+CA,GAAU,GAxBzD,uZCECqE,GAA+B,CAC1C9D,YAAY,eACZC,OAAO,cACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YCxBa,IAA0B,4CDyBvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEjBqC,CAC5CtC,KAAK,OACLC,UAAW,MACXC,WAAW,8hCFckB0F,GGvB0B,CACvD5F,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,cACLhC,KAAK,WACLiC,UAAU,KACVC,YAAY,MACZC,SAAS,MHeXnC,KAAK,cACL4B,MAAO,GACPC,WAAY,CAAC,SIpBThB,GAAsB,CAAC,SAEhBsE,GAA0C,CACrD9F,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,+qBAAD,OAwBmCsB,GAAU,GAxB7C,iWA6ByCA,GAAU,GA7BnD,ikBCICuE,GAAyB,CACpChE,YAAY,iBACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,eACfC,YC1Ba,IAA0B,sCD2BvCE,aAAc,MACd9T,SAAU,CEjBqC,CAC/CgS,YAAa,MACbC,aAAa,+BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,8BACLC,QAAQ,+CACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,KFQXxC,MAAO,CGnB+B,CACtCtC,KAAK,OACLC,UAAW,MACXC,WAAW,gtCHgBY4F,GInBc,CACrC9F,KAAK,qBACLC,UAAW,MACXC,WAAW,uGJiBXS,KAAK,QACL4B,MAAO,GACPC,WAAY,CAAC,YKtBThB,GAAsB,CAAC,QAAD,YAEfwE,GAA0C,CACrDhG,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,obAAD,OAkBuCsB,GAAU,GAlBjD,6XAuB6CA,GAAU,GAvBvD,+wBA2CiDA,GAAU,GA3C3D,mcAgDuDA,GAAU,GAhDjE,8XCECyE,GAAyB,CACpClE,YAAY,yBACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,aAAD,WACfC,YCxBa,IAA0B,sCDyBvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEjB+B,CACtCtC,KAAK,OACLC,UAAW,MACXC,WAAW,w7BFcY8F,GGjBc,CACrChG,KAAK,qBACLC,UAAW,MACXC,WAAW,uGHeXS,KAAK,QACL4B,MAAO,GACPC,WAAY,CAAC,MAAD,iBIpBRhB,GAAsB,CAAC,YAEhB0E,GAA6C,CACxDlG,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,u1BAAD,OA2BsCsB,GAAU,GA3BhD,sXAgC4CA,GAAU,GAhCtD,+VCEC2E,GAA4B,CACvCpE,YAAY,aACZC,OAAO,WACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YCxBa,IAA0B,yCDyBvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEjBkC,CACzCtC,KAAK,OACLC,UAAW,MACXC,WAAW,gtBFcegG,GGjBc,CACxClG,KAAK,qBACLC,UAAW,MACXC,WAAW,gHHeXS,KAAK,WACL4B,MAAO,GACPC,WAAY,CAAC,MAAD,sBIpBRhB,GAAsB,CAAC,YAEhB4E,GAA6C,CACxDpG,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,0rBAAD,OAsBsCsB,GAAU,GAtBhD,sXA2B4CA,GAAU,GA3BtD,usBCKC6E,GAA4B,CACvCtE,YAAY,eACZC,OAAO,WACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,+BACfC,YC3Ba,IAA0B,yCD4BvCE,aAAc,MACd9T,SAAU,CElBoC,CAC9CgS,YAAa,MACbC,aAAa,8BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,4BACLC,QAAQ,uCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVuC,CAClDvE,YAAa,MACbC,aAAa,kCACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,iCACLC,QAAQ,4CACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICV+B,CAC1CvE,YAAa,MACbC,aAAa,0BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,wBACLC,QAAQ,4BACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,KJSX/B,MAAO,CKpBkC,CACzCtC,KAAK,OACLC,UAAW,MACXC,WAAW,gtBLiBekG,GMpBc,CACxCpG,KAAK,qBACLC,UAAW,MACXC,WAAW,gHNkBXS,KAAK,WACL4B,MAAO,GACPC,WAAY,CAAC,gBAAD,+BOtBD8D,GAA6B,CACxC/F,YAAa,MACbC,aAAa,wBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,sBACLC,QAAQ,iCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVAyB,GAA6B,CACxChG,YAAa,MACbC,aAAa,wBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,kBACLC,QAAQ,sBACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,ICVAmC,GAAqC,CAChDjG,YAAa,MACbC,aAAa,gCACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,8BACLC,QAAQ,kCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICXPtD,GAAsB,CAAC,YAAD,mBAEfiF,GAAyC,CACpDzG,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,urFAAD,OAgEuCsB,GAAU,GAhEjD,6XAqE6CA,GAAU,GArEvD,y0BA4FsCA,GAAU,GA5FhD,uXAiG4CA,GAAU,GAjGtD,qyBCWCkF,GAAwB,CACnC3E,YAAY,iBACZC,OAAO,OACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,OAAD,WACfC,YCjCa,IAA0B,qCDkCvCE,aAAc,MACd9T,SAAU,CExBoC,CAC9CgS,YAAa,IACbC,aAAa,8BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,4BACLC,QAAQ,6CACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVuC,CAClDvE,YAAa,MACbC,aAAa,kCACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,iCACLC,QAAQ,kDACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICV+B,CAC1CvE,YAAa,MACbC,aAAa,0BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,wBACLC,QAAQ,4BACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,IJc2EkC,GAAmBD,GAAmBE,GKvBrF,CACvCjG,YAAa,MACbC,aAAa,uBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,yBACLC,QAAQ,kCACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EAETC,UCfmC,SAACC,GACpC,SAAKA,GAAgD,IAA5BA,EAAiBC,WN2B1CoB,MAAO,CO1B8B,CACrCtC,KAAK,OACLC,UAAW,MACXC,WAAW,u6BCTmC,CAC9CF,KAAK,SACLE,WAAW,GACXD,UAAW,IACXyC,SAAU,CACRC,KAAK,qBACLhC,KAAK,WACLiC,UAAU,OACVC,YAAY,MACZC,SAAS,23CRuBgC2D,GAAiBvB,GAAiBzC,IAC7E9B,KAAK,OACL4B,MAAO,GACPC,WAAY,CAAC,gBAAD,+FS7BRhB,GAAsB,CAAC,UAEhBmF,GAA2C,CACtD3G,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,igBAAD,OAmBoCsB,GAAU,GAnB9C,wWAwB0CA,GAAU,GAxBpD,6kBCLCoF,GAAkC,CAC7CrG,YAAa,MACbC,aAAa,6BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,2BACLC,QAAQ,yCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICDA+B,GAA0B,CACrC9E,YAAY,cACZC,OAAO,SACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,2CACfC,YC1Ba,IAA0B,uCD2BvCE,aAAc,MACd9T,SAAU,CAACqY,GEjB8B,CACzCrG,YAAa,MACbC,aAAa,yBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,uBACLC,QAAQ,8BACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,KFQX/B,MAAO,CGnBgC,CACvCtC,KAAK,OACLC,UAAW,MACXC,WAAW,4/BHgBayG,GInBc,CACtC3G,KAAK,qBACLC,UAAW,MACXC,WAAW,0GJiBXS,KAAK,SACL4B,MAAO,GACPC,WAAY,CAAC,WKtBThB,GAAsB,CAAC,UAEhBsF,GAA2C,CACtD9G,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,wcAAD,OAkBoCsB,GAAU,GAlB9C,0WAuB0CA,GAAU,GAvBpD,oUCCCuF,GAA0B,CACrChF,YAAY,mCACZC,OAAO,GACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,gBAChBC,YCvBa,IAA0B,uCDwBvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEhBgC,CACvCtC,KAAK,OACLC,UAAW,MACXC,WAAW,48BFaa4G,IACxBnG,KAAK,SACL4B,MAAO,GACPC,WAAY,IGnBRhB,GAAsB,CAAC,OAEhBwF,GAAwC,CACnDhH,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,8WAAD,OAgBsBsB,GAAU,GAhBhC,kEAiBwBA,GAAU,GAjBlC,uEAmBIA,GAAU,GAnBd,0MA0BKA,GAAU,GA1Bf,kZAsCiCA,GAAU,GAtC3C,mVA2CuCA,GAAU,GA3CjD,6TCGCyF,GAAuB,CAClClF,YAAY,6BACZC,OAAO,MACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YCzBa,IAA0B,oCD0BvCE,aAAc,MACd9T,SAAU,CEhBoB,CAC9BgS,YAAa,MACbC,aAAa,kBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,WACLC,QAAQ,qBACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,ICVuB,CAClC9D,YAAa,MACbC,aAAa,kBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,eACLC,QAAQ,sCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,KHOXxC,MAAO,CIlB6B,CACpCtC,KAAK,OACLC,UAAW,MACXC,WAAW,s5BJeU8G,GKlBc,CACnChH,KAAK,qBACLC,UAAW,MACXC,WAAW,iGLgBXS,KAAK,MACL4B,MAAO,GACPC,WAAY,CAAC,OAAD,aMrBRhB,GAAsB,CAAC,aAEhB0F,GAA8C,CACzDlH,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,+rBAAD,OA0BuCsB,GAAU,GA1BjD,6XA+B6CA,GAAU,GA/BvD,64BCKC2F,GAA6B,CACxCpF,YAAY,cACZC,OAAO,YACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,+BACfC,YC3Ba,IAA0B,0CD4BvCE,aAAc,MACd9T,SAAU,CElBqC,CAC/CgS,YAAa,MACbC,aAAa,+BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,6BACLC,QAAQ,iCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVwC,CACnDvE,YAAa,MACbC,aAAa,mCACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,kCACLC,QAAQ,kCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVgC,CAC3CvE,YAAa,MACbC,aAAa,2BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,yBACLC,QAAQ,6BACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,KJSX/B,MAAO,CKpBmC,CAC1CtC,KAAK,OACLC,UAAW,MACXC,WAAW,gpCLiBgBgH,GMpBc,CACzClH,KAAK,qBACLC,UAAW,MACXC,WAAW,mHNkBXS,KAAK,YACL4B,MAAO,GACPC,WAAY,CAAC,cAAD,YOvBRhB,GAAsB,CAAC,SAEhB4F,GAA0C,CACrDpH,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,0jBAAD,OAsBmCsB,GAAU,GAtB7C,iWA2ByCA,GAAU,GA3BnD,6SCGC6F,GAAyB,CACpCtF,YAAY,oBACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YCzBa,IAA0B,sCD0BvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CElB+B,CACtCtC,KAAK,OACLC,UAAW,MACXC,WAAW,w7BFeYkH,GGlBc,CACrCpH,KAAK,qBACLC,UAAW,MACXC,WAAW,sGCTyC,CACpDF,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,cACLhC,KAAK,QACLiC,UAAU,OACVC,YAAY,MACZC,SAAS,wtBJgBXnC,KAAK,QACL4B,MAAO,GACPC,WAAY,CAAC,QAAD,QKrBRhB,GAAsB,CAAC,iBCWhB8F,GAAiC,CAC5CvF,YAAY,gBACZC,OAAO,gBACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,aACfC,YC3Ba,IAA0B,8CD4BvCE,aAAc,MACd9T,SAAU,CElByC,CACnDgS,YAAa,MACbC,aAAa,mCACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,yBACLC,QAAQ,oCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVoC,CAC/CvE,YAAa,MACbC,aAAa,+BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,qBACLC,QAAQ,yBACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,ICV4C,CACvD9D,YAAa,MACbC,aAAa,uCACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,8BACLC,QAAQ,iDACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,KJSXxC,MAAO,CKpBuC,CAC9CtC,KAAK,OACLC,UAAW,MACXC,WAAW,w7BNDkD,CAC7DF,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,y0BAAD,OA2B2CsB,GAAU,GA3BrD,yZAgCiDA,GAAU,GAhC3D,u4BONmC,CAC7CxB,KAAK,qBACLC,UAAW,MACXC,WAAW,+HNkBXS,KAAK,QACL4B,MAAO,GACPC,WAAY,CAAC,UAAD,kBOvBRhB,GAAsB,CAAC,UAEhB+F,GAA2C,CACtDvH,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,usBAAD,OA+BoCsB,GAAU,GA/B9C,wWAoC0CA,GAAU,GApCpD,oTCLCgG,GAA0B,CACrCjH,YAAa,MACbC,aAAa,qBACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,kBACLC,QAAQ,mCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICFA2C,GAA0B,CACrC1F,YAAY,qBACZC,OAAO,SACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,WACfC,YCzBa,IAA0B,uCD0BvCE,aAAc,MACd9T,SAAU,CAACiZ,IACXlF,MAAO,CElBgC,CACvCtC,KAAK,OACLC,UAAW,MACXC,WAAW,srBFeaqH,GGxBc,CACtCvH,KAAK,qBACLC,UAAW,MACXC,WAAW,0GHsBXS,KAAK,SACL4B,MAAO,GACPC,WAAY,CAAC,aAAD,gBIrBRhB,GAAsB,CAAC,aAEhBkG,GAA8C,CACzD1H,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,mhBAAD,OAoBuCsB,GAAU,GApBjD,6XAyB6CA,GAAU,GAzBvD,4YCECmG,GAA6B,CACxC5F,YAAY,kBACZC,OAAO,YACP3T,YAAY,EACZ4T,QAAQ,EACRC,cAAe,CAAC,iBAAD,kCACfC,YCxBa,IAA0B,0CDyBvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEjBmC,CAC1CtC,KAAK,OACLC,UAAW,MACXC,WAAW,6tBFcgBwH,GGjBc,CACzC1H,KAAK,qBACLC,UAAW,MACXC,WAAW,mHHeXS,KAAK,YACL4B,MAAO,GACPC,WAAY,IIpBRhB,GAAsB,CAAC,cAEhBoG,GAA+C,CAC1D5H,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,y/BAAD,OAuCwCsB,GAAU,GAvClD,oYA4C8CA,GAAU,GA5CxD,u2CCKCqG,GAA8B,CACzC9F,YAAY,gBACZC,OAAO,aAGPE,cAAe,CAAC,UAAD,+BACfD,QAAQ,EACR5T,YAAY,EACZ8T,YC7Ba,IAA0B,2CD8BvCE,aAAc,MACd9T,SAAU,CEpBkC,CAC5CgS,YAAa,MACbC,aAAa,4BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,0BACLC,QAAQ,qCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICViC,CAC5CvE,YAAa,MACbC,aAAa,4BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,sBACLC,QAAQ,0BACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,KHWX/B,MAAO,CItBoC,CAC3CtC,KAAK,OACLC,UAAW,MACXC,WAAW,67CJmBiB0H,GKtBc,CAC1C5H,KAAK,qBACLC,UAAW,MACXC,WAAW,sHLoBXS,KAAK,aACL4B,MAAO,GACPC,WAAY,CAAC,WAAD,mCMzBRhB,GAAsB,CAAC,SAEhBsG,GAAiD,CAC5D9H,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,mmCAAD,OA2B0CsB,GAAU,GA3BpD,kZAgCgDA,GAAU,GAhC1D,qXCKCuG,GAAgC,CAC3ChG,YAAY,0BACZE,QAAQ,EACR5T,YAAY,EACZ2T,OAAO,eACPE,cAAe,CAAC,cAAD,yCACfC,YC3Ba,IAA0B,6CD4BvCE,aAAc,MACd9T,SAAU,GACVoS,KAAK,eACL2B,MAAO,CErBsC,CAC7CtC,KAAK,OACLC,UAAW,MACXC,WAAW,+iCFoBT4H,GG7B0C,CAC5C9H,KAAK,qBACLC,UAAW,MACXC,WAAW,2HCH8C,CACzDF,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,uBACLhC,KAAK,UACLiC,UAAU,OACVC,YAAY,MACZC,SAAS,kkDCJwD,CACnE9C,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,uBACLhC,KAAK,oBACLiC,UAAU,KACVC,YAAY,MACZC,SAAS,87BCd+C,CAC1D9C,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,uBACLhC,KAAK,WACLiC,UAAU,OACVC,YAAY,MACZC,SAAS,6ZCJqD,CAChE9C,KAAK,SACLE,WAAW,GACXD,UAAW,MACXyC,SAAU,CACRC,KAAK,uBACLhC,KAAK,iBACLiC,UAAU,KACVC,YAAY,MACZC,SAAS,ysBPsBXP,MAAO,GACPC,WAAY,CAAC,SAAD,iEQ/BRhB,GAAsB,CAAC,YAEhBwG,GAA6C,CACxDhI,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,2oBAAD,OAsBsCsB,GAAU,GAtBhD,sXA2B4CA,GAAU,GA3BtD,+3DCECyG,GAA4B,CACvClG,YAAY,mBACZE,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,cAAD,yCACfF,OAAO,WACPG,YCxBa,IAA0B,yCDyBvCE,aAAc,MACd9T,SAAU,GACVoS,KAAK,WACL2B,MAAO,CElBkC,CACzCtC,KAAK,OACLC,UAAW,MACXC,WAAW,gtBFee8H,GGxBc,CACxChI,KAAK,qBACLC,UAAW,MACXC,WAAW,gHHsBXqC,MAAO,GACPC,WAAY,CAAC,iBAAD,gBIpBRhB,GAAsB,CAAC,aAEhB0G,GAA8C,CACzDlI,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,mhBAAD,OAoBwCsB,GAAU,GApBlD,kYAyB8CA,GAAU,GAzBxD,iWCCC2G,GAA6B,CACxCpG,YAAY,yBACZE,QAAQ,EACR5T,YAAY,EACZ2T,OAAO,YACPE,cAAe,CAAC,cAAD,yCACfC,YCvBa,IAA0B,0CDwBvCE,aAAc,MACd9T,SAAU,GACVoS,KAAK,YACL2B,MAAO,CEjBmC,CAC1CtC,KAAK,OACLC,UAAW,MACXC,WAAW,4/BFcgBgI,IAC3B3F,MAAO,GACPC,WAAY,CAAC,SGnBThB,GAAsB,CAAC,MAEhB4G,GAAuC,CAClDpI,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,mgBAAD,OAsBgCsB,GAAU,GAtB1C,4UA2BsCA,GAAU,GA3BhD,ySCSC6G,GAAsB,CACjCtG,YAAY,0BACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YC/Ba,IAA0B,mCDgCvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CExB4B,CACnCtC,KAAK,OACLC,UAAW,MACXC,WAAW,y8BFqBSkI,GAAelF,GAA0BE,GAAiBD,GAAkBG,GAAmBC,GAAmBC,GAAkBC,GAAeJ,IACvK1C,KAAK,KACL4B,MAAO,GACPC,WAAY,CAAC,UAAD,uIG3BRhB,GAAsB,CAAC,cAEhB8G,GAA+C,CAC1DtI,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,8cAAD,OAiBwCsB,GAAU,GAjBlD,oYAsB8CA,GAAU,GAtBxD,oaCEC+G,GAA8B,CACzCxG,YAAY,iDACZC,OAAO,aACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,aAAD,WACfC,YCxBa,IAA0B,2CDyBvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEjBoC,CAC3CtC,KAAK,OACLC,UAAW,MACXC,WAAW,6gCFciBoI,GGvBc,CAC1CtI,KAAK,qBACLC,UAAW,MACXC,WAAW,sHHqBXS,KAAK,aACL4B,MAAO,GACPC,WAAY,IIpBRhB,GAAsB,CAAC,aAEhBgH,GAA8C,CACzDxI,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,6qBAAD,OAyBuCsB,GAAU,GAzBjD,6XA8B6CA,GAAU,GA9BvD,ysBCLCiH,GAAoC,CAC/ClI,YAAa,MACbC,aAAa,+BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,sBACLC,QAAQ,wCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVA4D,GAAwC,CACnDnI,YAAa,MACbC,aAAa,mCACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,2BACLC,QAAQ,qCACRC,MAAM,GACNC,UAAU,WACVC,SAAS,EACTC,UAAW8D,ICVA6D,GAAgC,CAC3CpI,YAAa,MACbC,aAAa,2BACbC,WAAW,eACXC,oBAAoB,EACpBC,KAAK,kBACLC,QAAQ,6BACRC,MAAM,GACNC,UAAU,OACVC,SAAS,EACTC,UAAWqD,ICJAuE,GAA6B,CACxC7G,YAAY,iBACZC,OAAO,YACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,UAAD,eACfC,YCvBa,IAA0B,0CDwBvCE,aAAc,MACd9T,SAAU,CAACma,GAA8BC,GAAsBF,IAC/DnG,MAAO,CEhBmC,CAC1CtC,KAAK,OACLC,UAAW,MACXC,WAAW,0jDFagBsI,GGhBc,CACzCxI,KAAK,qBACLC,UAAW,MACXC,WAAW,mHHcXS,KAAK,YACL4B,MAAO,GACPC,WAAY,CAAC,UAAD,QInBRhB,GAAsB,CAAC,UAEhBqH,GAA2C,CACtD7I,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,4hBAAD,OAsBoCsB,GAAU,GAtB9C,wWA2B0CA,GAAU,GA3BpD,gUCNNA,GAAsB,CAAC,SCgChBsH,GAA8B,CACzClF,GACAG,GACAG,GACAiB,GACAK,GACAG,GACAE,GACAE,GAEAE,GACAE,GACAE,GACAK,GACAG,GACAE,GC9BqC,CACrChF,YAAY,8BACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YCjCa,IAA0B,uCDkCvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CE1BgC,CACvCtC,KAAK,OACLC,UAAW,MACXC,WAAW,y8BFyBTwD,GACAC,GACAT,GACA2F,GACAzF,GACAD,GACAG,GACAC,GACAC,GACAC,GACAJ,IAEF1C,KAAK,SACL4B,MAAO,GACPC,WAAY,CAAC,UAAD,2IG1BwB,CACpCT,YAAY,6BACZC,OAAO,QACPC,QAAQ,EACR5T,YAAY,EACZ6T,cAAe,CAAC,WAChBC,YChCa,IAA0B,sCDiCvCE,aAAc,MACd9T,SAAU,GACV+T,MAAO,CEzB+B,CACtCtC,KAAK,OACLC,UAAW,MACXC,WAAW,y8BFwBTyD,GLzBmD,CACrD3D,KAAK,qBACLC,UAAW,MACXyB,sBAAuBF,GACvBtB,WAAW,qhBAAD,OAsBmCsB,GAAU,GAtB7C,iWA2ByCA,GAAU,GA3BnD,mTKuBR0B,GACAE,GACAD,GACAG,GACAC,GACAC,GACAC,GACAJ,IAEF1C,KAAK,QACL4B,MAAO,GACPC,WAAY,CAAC,UAAD,0IJUZyE,GACAE,GACAE,GAEAC,GACAG,GACAE,GACAE,GACAE,GACAI,GACAF,GACAnG,GACAuG,GACAE,GAGAK,IO9DIG,GAA2BD,GAAgB3a,QAAO,SAACC,GAAD,QAA4BA,EAAY6T,UAC1F+G,GAA4BF,GAAgB3a,QAAO,SAACC,GAAD,OAA4BA,EAAY6T,UAC3FgH,GAA2BF,GAAaza,SAAQ,SAACF,GAAD,OAAiBA,EAAYkU,MAAMhU,SAAQ,SAAC4a,GAAD,OAAcA,QAElGC,GAA2C,CACtDC,MAAOzJ,GACP0J,aAAa,GAAD,oBAAMN,IAAN,aAAuBC,KACnCM,iBAAkBP,GAClBxa,SAAUwa,GAAaza,SAAQ,SAACF,GAAD,OAAiBA,EAAYG,YAC5Dgb,YAAaN,GACbO,iBAAkBP,GAAgB9a,QAAO,SAAC+a,GAAD,MAAc,uBAAAA,EAASlJ,QAChEyJ,iBAAkBR,GAAgB9a,QAAO,SAAC+a,GAAD,MAAc,uBAAAA,EAASlJ,QAChE0J,eAAgB,CAACT,GAAgB9a,QAAO,SAAC+a,GAAD,MAAc,WAAAA,EAASlJ,SAC/D2J,UAAU,ICFCC,GAAkE,SAACC,EAAyB/J,GAIvG,IAAIgK,EAA0B,eAAQD,GAEtC,OACE/J,EAAOE,MAEP,IAAI,oBACF,OAAOmJ,GAET,IAAI,eACF,IAAMY,ECvByB,SAACX,GACpC,OAAQA,GACN,KAAKtT,GACH,OAAO6J,GACT,KAAKA,GACH,OAAO7J,GACT,QACE,MAAM,IAAIkU,MAAJ,iEDgBkBC,CAAYH,EAASV,OAE7C,OADAU,EAASV,MAAQW,EACVD,EAET,IAAI,iBAQF,OAPAA,EAAST,aAAavJ,EAAOoK,SAAS7b,YAAcwb,EAAMR,aAAavJ,EAAOoK,SAAS7b,WACvFyb,EAASR,iBAA+BQ,EAAST,aE/B2Clb,QAAO,SAACC,GAAD,OAA4C,IAA3BA,EAAYC,cFgChIyb,EAASvb,SAAWN,EAAY6b,EAASR,kBACzCQ,EAASP,YAAuBO,EAASR,iBGhCiDhb,SAAQ,SAACF,GAAD,OAAiBA,EAAYkU,MAAMhU,SAAQ,SAAC4a,GAAD,OAAcA,QHiC3JY,EAASN,iBAAoCM,EAASP,YIlCepb,QAAO,SAAC+a,GAAD,MAAc,uBAAAA,EAASlJ,QJmCnG8J,EAASL,iBKlCiB,SAACU,GAAD,OAAwCA,EAAUhc,QAAO,SAAC+a,GAAD,MAAc,uBAAAA,EAASlJ,QLkC9EoK,CAAiBN,EAASP,aACtDO,EAASJ,eMpCe,SAACS,GAAD,MAAmC,CAACA,EAAUhc,QAAO,SAAC+a,GAAD,MAAc,WAAAA,EAASlJ,SNoC1EqK,CAAeP,EAASP,aAC3CO,EAET,IAAI,sBACF,IAAMvJ,EAAcuJ,EAASvb,SAAS+b,QAAQxK,EAAOoK,QAAQK,QAG7D,OAFAT,EAASvb,SAASgS,GAAaM,MAAQf,EAAOoK,QAAQrJ,MACtDiJ,EAASvb,SAASgS,GAAaQ,QAAU+I,EAASvb,SAASgS,GAAaS,UAAU8I,EAASvb,SAASgS,GAAaM,OAC1GiJ,EAET,IAAI,sBAKF,OO/BwB,SAACU,GAC7B,IAAIC,EAAaC,OAEbC,EAAuB,aAAOH,EAAWI,UACzCC,EAAsB,aAAOL,EAAWjc,UAEtCuc,EAAuBH,EAAYL,QAAQxI,IAC3CiJ,EAAuBJ,EAAYG,GAAcvc,SAAS+b,QAAQ3I,IAClEqJ,EAAsBL,EAAYG,GAAcvc,SAAS+b,QAAQ/I,IACjE0J,EAAkCN,EAAYG,GAAcvc,SAAS+b,QAAQhK,IAC7E4K,EAAkCP,EAAYG,GAAcvc,SAAS0c,GAAyBpK,MAAMsK,WAAWC,MAAM,KAAKC,KAAK,OAE/H/I,EAAiBgJ,MAAMC,KAAK,IAAIC,IAAIb,EAAYrc,SAAQ,SAACF,GAAD,OAA2BA,EAAYkU,MAAMmJ,KAAI,SAACvC,GAAD,OAAqBA,UAE9HwC,EAAyBpJ,EAC5BnU,QAAO,SAAC+a,GAAD,MAAqB,uBAAAA,EAASlJ,QACrC2L,MAAK,SAACC,EAAOC,GACZ,OAAID,EAAM3L,UAAY4L,EAAM5L,UACnB,EAEL2L,EAAM3L,UAAY4L,EAAM5L,WAClB,EAEH,KAERwL,KAAI,SAACvC,GAAD,OAAqBA,EAAShJ,cAI/B4L,EAFwCxJ,EAAMnU,QAAO,SAAC+a,GAAD,MAAqB,uBAAAA,EAASlJ,QAGtFyL,KAAI,SAACM,GAAD,OAA8CA,EAAkBrK,yBACpEsK,OACAX,OACAD,MAAM,KACNC,KAAK,OAEFY,EAAyB3J,EAC5BnU,QAAO,SAAC+a,GAAD,MAAqB,uBAAAA,EAASlJ,QACrC2L,MAAK,SAACC,EAAOC,GACZ,OAAID,EAAM3L,UAAY4L,EAAM5L,UACnB,EAEL2L,EAAM3L,UAAY4L,EAAM5L,WAClB,EAEH,KAERwL,KAAI,SAACvC,GAAD,OAAqBA,EAAShJ,cAI/BgM,EAFmB5J,EAAMnU,QAAO,SAAC+a,GAAD,MAAqB,WAAAA,EAASlJ,QAEzByL,KAAI,SAACU,GAAD,OAAiBA,KAI1DC,EAFqB9J,EAAMnU,QAAO,SAAC+a,GAAD,MAAqB,SAAAA,EAASlJ,QAElCyL,KAAI,SAACU,GAAD,OAAiBA,EAAKjM,cAAYmL,KAA5C,IAExBgB,EAAoBH,EAAY5B,QAAQ7H,IAc9CyJ,EAAYG,GAAW3J,SAASI,SATE,WAChC,IAAMwJ,EAAqB9B,EAAWI,SAASE,GAAcvc,SAASyc,GAAanK,MAC7E0L,EAAcD,EAAWlB,MAAX,KAAsB,GACpCoB,EAAiBF,EAAWlB,MAAX,KAAsB,GAI7C,OAH6B3I,GAAmCC,SAASI,SAAWsJ,GACnDhB,MAAb,uBAA0CC,KAA1C,aAAqDmB,EAArD,eAAkED,IAI7CE,GAO3C,IAAMC,EAA+B,SAACC,EAAkBpe,GACtD,IAAIqe,EAAqBD,EAQzB,OANApe,EAASse,SAAQ,SAACC,GAChB,IAAIC,EAAUH,EAAWxB,MAAM0B,EAAWtM,cAAc6K,KAAKyB,EAAWjM,OACxE+L,EAAaG,KAGEH,GAInBV,EAAYT,KAAI,SAACuB,GAKf,OAJwBnC,EAAYgC,SAAQ,SAACC,GAC3C,IAAMG,EAAsBD,EAAetK,SAASI,SAASsI,MAAM0B,EAAWtM,cAAc6K,KAAKyB,EAAWjM,OAC5GmM,EAAetK,SAASI,SAAWmK,QAKvC,IAWIC,EAX0B,CAC5BnN,GAA2BG,YADC,oBAEzBwL,GAFyB,CAG5BvL,GACAC,IAJ4B,aAKzB6L,GALyB,CAM5B5L,GACA0C,GACAC,KAGqCqI,KAAf,KAKD,yCAAG,6BAAA8B,EAAA,6DAClBC,EADkB,iCAAAD,EAAA,MACR,6BAAAA,EAAA,sEAEZ1C,EAAIzI,OAAJ,UAAc2I,EAAYG,GAAcvc,SAASwc,GAAclK,QAAUwM,KAAzE,UAAiF1C,EAAYG,GAAcvc,SAASwc,GAAclK,MAAlI,kBAAkJ6L,EAAmBQ,EAAWrC,KAChLqB,EAAYW,SAAQ,SAACG,GACnBvC,EAAI4C,KAAJ,UACK1C,EAAYG,GAAcvc,SAASwc,GAAclK,MADtD,YAC+DmM,EAAetK,SAASC,KADvF,YAC+FqK,EAAetK,SAAS/B,KADvH,YAC+HqM,EAAetK,SAASE,WADvJ,UAEKoK,EAAetK,SAASI,UAC3B,CAAEwK,gBAAgB,GAAD,OAAKN,EAAetK,SAASG,kBAPtC,SAUS4H,EAAI8C,cAAc,CACrCvN,KAAK,iBAXK,cAUNwN,EAVM,yBAcLA,GAdK,gIADQ,uEAqBjBJ,KArBiB,2CAAH,qDAqKvBK,GAxIE9C,EAAYc,KAAI,SAACrd,GACf,IAAMsf,EAAOtf,EAAYoU,WAEzB,IAAK,IAAImL,KADTlD,EAAIzI,OAAJ,UAAc2I,EAAYG,GAAcvc,SAASwc,GAAclK,QAAUmB,OAAzE,QAAyFA,OAAO5T,EAAY4T,QAClF0L,EACxBjD,EAAIzI,OAAJ,UAAc2I,EAAYG,GAAcvc,SAASwc,GAAclK,QAAUmB,OAAO5T,EAAY4T,QAASA,OAAO0L,EAAKC,IAGnHlD,EAAIzI,OAAJ,UAAc2I,EAAYG,GAAcvc,SAASwc,GAAclK,QAAUwM,KAAzE,4vBAsBmB1C,EAAYG,GAAcvc,SAASwc,GAAclK,MAtBpE,gBAsBiF8J,EAAYG,GAAcvc,SAASwc,GAAclK,MAtBlI,MAwBE,CAAEyM,gBAAgB,QAIpB7C,EAAIzI,OAAJ,UAAc2I,EAAYG,GAAcvc,SAASwc,GAAclK,QAAUwM,KAAzE,oDAGY1C,EAAYG,GAAcvc,SAASwc,GAAclK,MAH7D,MAKE,CAAEyM,gBAAgB,QAIpB7C,EAAIzI,OAAJ,UAAc2I,EAAYG,GAAcvc,SAASwc,GAAclK,QAAUwM,KAAzE,0mBAkBM1C,EAAYG,GAAcvc,SAASyc,GAAanK,MAlBtD,iFAoB2B8J,EAAYG,GAAcvc,SAASyc,GAAanK,MApB3E,yDAsBMiL,EAtBN,gFAwBkBZ,EAxBlB,uJA2B+BP,EAAYG,GAAcvc,SAASyc,GAAanK,MA3B/E,mGA4B6E8J,EAAYG,GAAcvc,SAASyc,GAAanK,MA5B7H,6bAkC2E8J,EAAYG,GAAcvc,SAASyc,GAAanK,MAlC3H,gNAoCoG8J,EAAYG,GAAcvc,SAASyc,GAAanK,MApCpJ,gSA2CgI8J,EAAYG,GAAcvc,SAASyc,GAAanK,MA3ChL,6yCA0DiD8J,EAAYG,GAAcvc,SAASyc,GAAanK,MA1DjG,ozBAiEwI8J,EAAYG,GAAcvc,SAASyc,GAAanK,MAjExL,0nBAwEgC8J,EAAYG,GAAcvc,SAASyc,GAAanK,MAxEhF,00BAoFwB8J,EAAYG,GAAcvc,SAASyc,GAAanK,MApFxE,iBAuFE,CAAEyM,gBAAgB,WAQxB7C,EAAIzI,OAAJ,UAAc2I,EAAYG,GAAcvc,SAASwc,GAAclK,QAAUwM,KAAzE,uBAAuG,CAAEC,gBAAgB,QACzH7C,EACG8C,cAAc,CACbK,YAAY,UACZC,mBAAoB,CAAEC,MAAO,GAC7BC,SAAS,OACT/N,KAAK,SAENgO,MAAK,SAAUC,GACdC,KAAUC,OAAOF,EAAjB,UAA6BtD,EAAYG,GAAcvc,SAASwc,GAAclK,MAA9E,YPxQAuN,CAAe,CACbxD,SAAUf,EAAMP,iBAChB/a,SAAUsb,EAAMtb,WAEXsb,EAET,QACE,MAAM,IAAIG,MAAJ,+D,kBQrDCqE,GAAkCC,gBAAoB,CACjEzE,MAAOV,KAGIoF,GAAyB,SAACC,GAAoC,IAAD,EAC9CF,aAAiB1E,GAAaT,IADgB,mBACjEU,EADiE,KAC1D4E,EAD0D,KAGxE,OACE,eAACJ,GAAYK,SAAb,CAAsB7N,MAAO,CAAEgJ,QAAO4E,YAAtC,SACE,eAACE,GAAA,EAAD,CAAevF,MAAOS,EAAMT,MAA5B,SAAoCoF,EAAMI,cCPnCC,GAA2B,WAA2B,IAAD,EAO5DP,aAAiBD,IALnBxE,EAF8D,EAE9DA,MACA4E,EAH8D,EAG9DA,SAMF,OACE,eAACK,EAAA,EAAD,CAA4BC,MAAO,CAAE5d,MAAO,OAA5C,SACE,eAAC6d,EAAA,EAAD,CAEEC,QAASpF,EAAMT,QAAUtT,GACzBoZ,QAAS,WACPT,EAAS,CACPzO,KAAK,eACLkK,QAASL,EAAMT,UANrB,sBADa,e,UCbN+F,GAAkC,SAACC,GAC9C,OACE,eAACN,EAAA,EAAD,CAAWO,UAAU,cAArB,SACE,sBAAKC,IAAKF,EAAQjN,YAAaoN,IAAG,UAAKH,EAAQzO,KAAb,SAA0BvP,OAAO,KAAKD,MAAM,UCAvEqe,GAAoC,SAACJ,GAA2C,IAAD,EAOtFd,aAAiBD,IALnBxE,EAFwF,EAExFA,MACA4E,EAHwF,EAGxFA,SAMF,OACE,sBAAKY,UAAU,gBAAf,SACE,eAACP,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,CAEEC,QAASG,EAAQ/gB,WACjB6M,WAAUkU,EAAQnN,OAClBiN,QAAS,kBACPT,EAAS,CACPzO,KAAK,iBACLkK,QAASL,EAAMR,aAAaiB,QAAQ8E,OAP1C,UACUA,EAAQzO,KADlB,YADF,UAAmByO,EAAQzO,KAA3B,kBCTO8O,GAAyB,WAA2B,IAAD,EAQ1DnB,aAAiBD,IANnBxE,EAF4D,EAE5DA,MAF4D,EAI5D4E,SAMF,OACE,gBAACiB,EAAA,EAAD,CAAOL,UAAU,eAAeM,KAAK,QAAQC,cAAY,EAAzD,UACE,eAACC,EAAA,EAAD,CAAWR,UAAU,qBAArB,SACE,gBAACS,EAAA,EAAD,CAAUT,UAAU,mBAApB,UACE,eAACP,EAAA,EAAD,CAAsBC,MAAO,CAAE5d,MAAO,OAAtC,qBAAe,QAGf,eAAC2d,EAAA,EAAD,CAAsBC,MAAO,CAAE5d,MAAO,MAAOC,OAAQ,SAAtC,QACf,eAAC,GAAD,SAGJ,eAAC2e,EAAA,EAAD,CAAWV,UAAU,mBAArB,SAAyCxF,EAAMR,aAAaoC,KAAI,SAACrd,GAAD,OCxBvBghB,EDwB6DhhB,ECtBxG,eAAC4hB,GAAA,EAAD,CAAoCC,MAAOb,EAAQrN,YAAnD,SACE,gBAAC+N,EAAA,EAAD,CAAUT,UAAWD,EAAQnN,OAAS,iBAAmB,aAAciO,OAAOd,EAAQnN,OAAtF,UACE,eAAC6M,EAAA,EAAD,CAAWa,KAAK,QAAhB,SACGP,EAAQzO,MADX,UAAgCyO,EAAQzO,KAAxC,aAGCwO,GAAYC,GACZI,GAAcJ,OANnB,UAAiBA,EAAQzO,KAAzB,QAF0C,IAACyO,WCHlCe,GAAiC,kBAC5C,sBAAKd,UAAU,cAAf,SACE,eAAC,GAAD,O,UCESe,GAAoC,WAA2B,IAAD,EAOrE9B,aAAiBD,IALnBxE,EAFuE,EAEvEA,MACA4E,EAHuE,EAGvEA,SAMI4B,EAA0BxG,EAAMtb,SAAS+hB,OAAM,SAAC/F,GAAD,OAAYA,EAAOxJ,WAMlEwP,EAAuB1G,EAAMtb,SAAS+b,QAAQ3I,IAC9C6O,EAAkB3G,EAAMtb,SAASgiB,GAAc1P,MAErD,OACE,gBAAC4P,GAAA,EAAD,CAAQvV,UAAUmV,EAA+BK,QAAQ,YAAYxB,QARjD,WACpBT,EAAS,CAAEzO,KAAK,yBAOhB,sBACYwQ,EADZ,WCvBSG,GAAgC,kBAC3C,sBAAKtB,UAAU,aAAf,SACE,eAAC,GAAD,O,UCbW,OAA0B,+CCA1B,OAA0B,4CCc5BuB,GAA0C,SAACrG,GAAD,OACrD,eAACuE,EAAA,EAAD,CAAWO,UAAU,kBAAkBqB,QAAQ,OAAOf,KAAK,QAA3D,SACE,sBAAKJ,IAAI,kBAAkBne,OAAO,OAAOke,IAAK,KAAA/E,EAAO1J,MAAegQ,GAAkBtG,EAAOxJ,QAAU+P,GAAqBD,QCSnHE,GAA6B,SAACvC,GAMzC,IAN4E,EAsBxEF,aAAiBD,IANnBxE,EAhB0E,EAgB1EA,MAEA4E,EAlB0E,EAkB1EA,SAMI4B,EAA0BxG,EAAMtb,SAAS+hB,OAAM,SAAC/F,GAAD,OAAYA,EAAOxJ,WAElEiQ,EAA4B/iB,EAAY6a,IAAiB6C,MAAK,SAACwB,EAAY8D,GAAb,OAA4B9D,EAAExM,KAAKuQ,cAAcD,EAAEtQ,SAEvH,OACE,sBAAKoO,MAAO,CAAE5d,MAAO,QAArB,SACE,gBAACue,EAAA,EAAD,CAAOL,UAAU,cAAcM,KAAK,QAAQC,cAAY,EAAxD,UACE,eAACC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,CAAUT,UAAU,kBAApB,UACE,eAACP,EAAA,EAAD,CAAWa,KAAK,QAAQe,QAAQ,OAAO3B,MAAO,CAAE5d,MAAO,OAAvD,sBAGA,eAAC2d,EAAA,EAAD,CAAWa,KAAK,QAAQe,QAAQ,OAAO3B,MAAO,CAAE5d,MAAO,SACvD,eAAC2d,EAAA,EAAD,CAAWa,KAAK,QAAQe,QAAQ,OAAO3B,MAAO,CAAE5d,MAAO,MAAvD,SACE,sBAAKoe,IAAI,GAAGD,IAAKe,EAAiBS,GAAqBD,GAAiBzf,OAAO,gBAIrF,eAAC2e,EAAA,EAAD,CACEV,UAAU,kBACVN,MAAO,CACL5d,MAAO,QAHX,SAKG6f,EAAevF,KAAI,SAAC0F,GAAD,OCtD5B5G,EDsD+D4G,ECrD/DC,EDqD2E,SAACC,GAAD,OAA6C5C,GAzC7E6C,EAyC8GH,EAzCrFI,EAyCiGF,EAAYG,OAAO3Q,MAxC/K,CACLb,KAAK,sBACLkK,QAAS,CACPK,OAAQ+G,EACRzQ,MAAO0Q,MAL6B,IAACD,EAAyBC,GCTlE,eAACvB,GAAA,EAAD,CAASC,MAAO1F,EAAO3J,QAAvB,SACE,gBAACkP,EAAA,EAAD,CAAUI,OAAK,EAAf,UACE,eAACpB,EAAA,EAAD,CAAW/d,QAAQ,WAAW2f,QAAQ,OAAOf,KAAK,QAAlD,SACGpF,EAAO5J,OAEV,eAACmO,EAAA,EAAD,CAAW4B,QAAQ,OAAOf,KAAK,QAA/B,SACE,eAAC8B,GAAA,EAAD,CACEC,WAAS,EACT/B,KAAK,QACLgC,UAAU,EACV9Q,MAAO0J,EAAO1J,MACdb,KAAMuK,EAAOzJ,UACb8Q,YAAW,4BAAuBrH,EAAO5J,KAA9B,SACXkR,aAActH,EAAO7J,mBAAmByK,WACxC2G,SAAUV,MAGbR,GAAqBrG,OAjBWA,EAAOhK,aALJ,IAC1CgK,EACA6G,aCRWW,GAAgC,WAC3C,OACE,sBAAK1C,UAAU,aAAf,SACE,eAAC,GAAD,OCFO2C,GAA8B,kBACzC,uBAAK3C,UAAU,WAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,QCDS4C,GAAgB,WAC3B,OACE,sBAAK5C,UAAU,MAAf,SACE,eAAC,GAAD,UACE,eAAC6C,EAAA,EAAD,CAAOC,QAAM,EAAb,SACE,gBAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAAC,GAAD,MAEF,eAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,GAAD,gBCnBdC,IAASC,OAAO,eAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c769f9f.chunk.js","sourcesContent":["/** @format */\n\n//  getMemories.ts\n//  MEGADocker\n//  a function that pulls the Memories from an array of Manikins\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\nimport { IMemory } from '../../interfaces/IMemory'\n\n/**\n * updates memories array based on application state\n */\nexport const getMemories = (manikinsToGetMemoriesFrom: IManikin[]): IMemory[] =>\n  manikinsToGetMemoriesFrom.filter((eachManikin: IManikin) => eachManikin.isSelected).flatMap((eachManikin) => eachManikin.memories)\n","/** @format */\n\nimport { BaseCSSProperties } from '@material-ui/styles'\nimport '@fontsource/asap'\n\nconst AsapFont: BaseCSSProperties = {\n  fontFamily: 'Asap',\n  fontWeight: 300,\n}\n\nexport default AsapFont\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AccordionExpandedStyleDark: CSSProperties = {}\n\nexport default AccordionExpandedStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AccordionRootStyleDark: CSSProperties = {\n  boxShadow: `none`\n}\n\nexport default AccordionRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AlertRootStyleDark: CSSProperties = {\n  backgroundColor: `#131313`,\n  borderRadius: `24px`,\n  boxShadow: `7px 7px 15px #000000, -3px -3px 7px #39393A`,\n  '&:hover': {\n    borderColor: `#131313`,\n    boxShadow: `7px 7px 15px #000000, -3px -3px 7px #39393A`\n  }\n}\n\nexport default AlertRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AppBarRootStyleDark: CSSProperties = {\n  display: `flex`,\n  verticalAlign: `center`,\n  boxShadow: `0 5px 10px 10px #131313`\n}\n\nexport default AppBarRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AutocompleteOptionStyleDark: CSSProperties = {\n  backgroundColor: `#131313`,\n  color: `#FFFFFF`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    backgroundColor: `#131313`,\n    color: `#FFFFFF`,\n    boxShadow: `.75px -4px 3px -3px #000000, \n  inset .75px 1px .5px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A`\n  }\n}\n\nexport default AutocompleteOptionStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AutocompletePaperStyleDark: CSSProperties = {\n  marginBottom: `12px`,\n  borderRadius: `25px`,\n  boxShadow: `5px 5px 12px #000000, \ninset -1px -1px .5px #000000, \ninset 1px 1px .5px #39393A`,\n  color: `#FFFFFF`\n}\n\nexport default AutocompletePaperStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst BottomNavigationActionRootStyleDark: CSSProperties = {\n  color: grey[600],\n  backgroundColor: `#131313`,\n  borderRadius: `25px`,\n  margin: `7px`,\n  '&:hover': {\n    backgroundColor: `#131313`,\n    boxShadow: `.75px -4px 3px -3px black, \n  inset .75px 1px .5px black, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A`\n  },\n  '&$selected': {\n    backgroundColor: `#131313`,\n    color: `#FFFFFF`,\n    '&:hover': {\n      backgroundColor: `#131313`,\n      boxShadow: `none`\n    }\n  }\n}\n\nexport default BottomNavigationActionRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst BottomNavigationRootStyleDark: CSSProperties = {\n  borderTopLeftRadius: `25px`,\n  borderTopRightRadius: `25px`,\n  boxShadow: `0 -3px 7px  #000000, \ninset 0 .5px .5px #000000`\n}\n\nexport default BottomNavigationRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonIconInheritStyleDark: CSSProperties = {\n  color: `#FFFFFF`,\n  boxShadow: `-.75px 4px 3px -3px #000000, \n  inset -.75px -1px .75px #000000, \n  .75px -4px 3px -3px #39393A, \n  inset .75px 1px .75px #39393A`,\n  '&:hover': {\n    backgroundColor: `#131313`,\n    boxShadow: `.75px -4px 3px -3px #000000, \n    inset .75px 1px .75px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -1px .75px #39393A`\n  }\n}\n\nexport default ButtonIconInheritStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonIconRootStyleDark: CSSProperties = {\n  color: `#FFFFFF`,\n  borderRadius: `24px`,\n  textTransform: `uppercase`,\n  '&:hover': {\n    textTransform: `uppercase`\n  }\n}\n\nexport default ButtonIconRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonPrimaryStyleDark: CSSProperties = {\n  backgroundColor: `#131313`,\n  boxShadow: `-.75px 4px 3px -3px #000000, \n  inset -.75px -1px .75px #000000, \n  .75px -4px 3px -3px #39393A, \n  inset .75px 1px .75px #39393A`,\n  color: `#FFFFFF`,\n  '&:hover': {\n    backgroundColor: `#131313`,\n    color: `#FFFFFF`,\n    boxShadow: `.75px -4px 3px -3px #000000, \n    inset .75px 1px .75px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -1px .75px #39393A`\n  }\n}\n\nexport default ButtonPrimaryStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonRootStyleDark: CSSProperties = {\n  color: `#FFFFFF`,\n  borderRadius: `24px`,\n  margin: `7px`,\n  textTransform: `uppercase`,\n  '&:hover': {\n    textTransform: `uppercase`\n  }\n}\n\nexport default ButtonRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonSecondaryStyleDark: CSSProperties = {\n  color: `#000000`,\n  boxShadow: `-.75px 5px 4px -3px #000000, \n  inset -.75px -1px .75px #000000, \n  .75px -4px 3px -3px #39393A, \n  inset .75px 1px .75px #39393A`,\n  '&:hover': {\n    color: `#FFFFFF`,\n    backgroundColor: `#131313`,\n    boxShadow: `.75px -4px 3px -3px #000000, \n    inset .75px 1px .75px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -1px .75px #39393A`\n  }\n}\n\nexport default ButtonSecondaryStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst CardRootStyleDark: CSSProperties = {\n  paddingTop: '24px',\n  borderRadius: '50px',\n  boxShadow: `5px 5px 12px #000000, \n  -2px -2px 8px #39393A,  \n  inset -1px -1px .5px #000000, \n  inset 1px 1px .5px #39393A`,\n  color: `#FFFFFF`\n}\n\nexport default CardRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst CheckboxRootStyleDark: CSSProperties = {\n  boxShadow: `none`,\n  marginLeft: `5px`,\n  marginRight: `5px`\n}\n\nexport default CheckboxRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst CircularProgressPrimaryStyleDark: CSSProperties = {\n  color: grey[100]\n}\n\nexport default CircularProgressPrimaryStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst CircularProgressRootStyleDark: CSSProperties = {}\n\nexport default CircularProgressRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ContainerRootStyleDark: CSSProperties = {\n  alignContent: 'center',\n  borderRadius: '25px',\n  padding: '25px',\n  boxShadow: `5px 5px 12px #000000, \n  -2px -2px 8px #39393A, \n  inset -1px -1px .5px #000000, \n  inset 1px 1px .5px #39393A`,\n  color: `#FFFFFF`\n}\n\nexport default ContainerRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst DialogPaperStyleDark: CSSProperties = {\n  borderRadius: '24px'\n}\n\nexport default DialogPaperStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst DialogRootStyleDark: CSSProperties = {}\n\nexport default DialogRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst drawerWidth = 240\nconst appBarHeight = 70\n\nconst DrawerPaperStyleDark: CSSProperties = {\n  width: drawerWidth,\n  height: `calc(100%-${appBarHeight}px)`,\n  marginTop: 0,\n  borderRadius: '25px',\n  backgroundColor: `#131313`,\n  boxShadow: `12px 12px 30px -6px #000000`\n}\n\nexport default DrawerPaperStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst drawerWidth = 240\nconst appBarHeight = 70\n\nconst DrawerRootStyleDark: CSSProperties = {\n  width: drawerWidth,\n  height: `calc(100%-${appBarHeight}px)`,\n  marginTop: 0,\n  flexShrink: 0\n}\n\nexport default DrawerRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst FabRootStyleDark: CSSProperties = {}\n\nexport default FabRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst FormControlLabelRootStyleDark: CSSProperties = {}\n\nexport default FormControlLabelRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst FormControlRootStyleDark: CSSProperties = {}\n\nexport default FormControlRootStyleDark\n","import { grey } from '@material-ui/core/colors'\nimport { CSSProperties } from '@material-ui/styles'\n\nconst FormHelperTextRootStyleDark: CSSProperties = {\n  color: grey[300]\n}\n\nexport default FormHelperTextRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst IconRootStyleDark: CSSProperties = {}\n\nexport default IconRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ImageListItemBarRootStyleDark: CSSProperties = {\n  borderBottomLeftRadius: `12px`,\n  borderBottomRightRadius: `12px`\n}\n\nexport default ImageListItemBarRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ImageListRootStyleDark: CSSProperties = {\n  borderRadius: `12px`,\n  boxShadow: `5px 5px 12px #000000, -5px -5px 12px #39393A`\n}\n\nexport default ImageListRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst InputAdornmentRootStyleDark: CSSProperties = {\n  '&:hover': {},\n  '&$focused': {\n    '&:hover': {}\n  }\n}\n\nexport default InputAdornmentRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst InputBaseRootStyleDark: CSSProperties = {\n  color: grey[400],\n  marginBottom: `5px`,\n  boxShadow: `inset -1px -1px 3px #39393A, inset 3px 3px 5px #000000`,\n  '&:hover': {\n    color: grey[300],\n    boxShadow: `5px 5px 10px #000000, -2px -2px 5px #39393A`\n  },\n  '&$focused': {\n    color: grey[200],\n    boxShadow: `7px 7px 15px #000000, -2px -2px 7px #39393A`,\n    '&:hover': {\n      color: grey[200],\n      boxShadow: `7px 7px 15px #000000, -2px -2px 7px #39393A`\n    }\n  }\n}\n\nexport default InputBaseRootStyleDark\n","import grey from '@material-ui/core/colors/grey'\nimport { CSSProperties } from '@material-ui/styles'\n\nconst InputLabelRootStyleDark: CSSProperties = {\n  color: grey[300],\n  textShadow:\n    '2px 2px 3px #131313, -2px -2px 3px #131313, -2px 2px 3px #131313, 2px -2px 3px #131313',\n  '&$focused': {\n    color: `#FFFFFF`\n  }\n}\n\nexport default InputLabelRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst InputOutlinedRootStyleDark: CSSProperties = {\n  borderRadius: '50px',\n  boxShadow: `.75px -4px 3px -3px #000000, \n    inset .75px 3px 3px #000000, \n    -.75px 4px 3px -3px #39393A, \n    inset -.75px -3px 3px #39393A`,\n  '&:hover': {\n    color: `#FFFFFF`,\n    boxShadow: `7px 7px 15px #000000, -3px -3px 7px #39393A`\n  },\n  '&$focused': {\n    color: `#FFFFFF`,\n    boxShadow: `7px 7px 15px #000000, -3px -3px 7px #39393A`,\n    '&:hover': {\n      color: `#FFFFFF`,\n      boxShadow: `7px 7px 15px #000000, -3px -3px 7px #39393A`\n    }\n  }\n}\n\nexport default InputOutlinedRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ListItemRootStyleDark: CSSProperties = {\n  backgroundColor: `transparent`,\n  color: `#FFFFFF`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    color: `#FFFFFF`,\n    boxShadow: `.75px -4px 3px -3px #000000, \n  inset .75px 1px .5px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A`\n  },\n  '&$selected': {\n    color: `#FFFFFF`,\n    boxShadow: `.75px -4px 5px -3px #000000, \n  inset .75px 1px .75px #000000, \n  -.75px 4px 5px -3px #39393A, \n  inset -.75px -1px .75px #39393A`\n  }\n}\n\nexport default ListItemRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ListRootStyleDark: CSSProperties = {\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nexport default ListRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst MenuRootStyleDark: CSSProperties = {\n  borderRadius: '25px',\n  boxShadow: `5px 5px 12px #000000, \n  -2px -2px 7px #39393A, \n  inset -1px -1px .5px #000000, \n  inset 1px 1px .5px #39393A`,\n  color: `#FFFFFF`\n}\n\nexport default MenuRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst MobileStepperDotActiveStyleDark: CSSProperties = {\n  backgroundColor: grey[50]\n}\n\nexport default MobileStepperDotActiveStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst MobileStepperDotStyleDark: CSSProperties = {\n  backgroundColor: grey[800]\n}\n\nexport default MobileStepperDotStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst MobileStepperProgressStyleDark: CSSProperties = {\n  border: `5px`,\n  backgroundColor: grey[400],\n  borderColor: grey[50],\n  borderTopLeftRadius: `5px`,\n  borderTopRightRadius: `5px`,\n  borderBottomLeftRadius: `5px`,\n  borderBottomRightRadius: `5px`\n}\n\nexport default MobileStepperProgressStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst NativeSelectRootStyleDark: CSSProperties = {\n  marginLeft: `12px`,\n  \"&$disabled\": {\n    \"marginLeft\": \"12px\"\n  }\n}\n\nexport default NativeSelectRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst OutlinedInputMultilineStyleDark: CSSProperties = {\n  borderTopLeftRadius: '25px',\n  borderTopRightRadius: '25px',\n  borderBottomLeftRadius: '25px',\n  borderBottomRightRadius: '25px'\n}\n\nexport default OutlinedInputMultilineStyleDark\n","import { TypeBackground } from '@material-ui/core/styles/createPalette'\n\nconst PaletteBackgroundStyleDark: Partial<TypeBackground> = {\n  default: `#131313`,\n  paper: `#131313`\n}\n\nexport default PaletteBackgroundStyleDark\n","import { SimplePaletteColorOptions } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\n\nconst PalettePrimaryStyleDark: SimplePaletteColorOptions = {\n  main: `#131313`,\n  light: grey[50],\n  dark: `#000000`,\n  contrastText: grey[400]\n}\n\nexport default PalettePrimaryStyleDark\n","import { SimplePaletteColorOptions } from '@material-ui/core'\nimport { blue } from '@material-ui/core/colors'\n\nconst PaletteSecondaryStyleDark: SimplePaletteColorOptions = {\n  main: blue[300],\n  light: blue[200],\n  dark: blue[700],\n  contrastText: `#000000`\n}\n\nexport default PaletteSecondaryStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst PaperRootStyleDark: CSSProperties = {\n  paddingLeft: `30px`,\n  paddingRight: `30px`,\n  marginLeft: `-8px`,\n  marginRight: `-8px`\n}\n\nexport default PaperRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst RadioRootStyleDark: CSSProperties = {\n  boxShadow: `none`,\n  marginLeft: `5px`,\n  marginRight: `5px`\n}\n\nexport default RadioRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SelectMenuRootStyleDark: CSSProperties = {\n  borderRadius: '25px',\n  color: grey[300]\n}\nexport default SelectMenuRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SelectRootStyleDark: CSSProperties = {\n}\n\nexport default SelectRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SliderMarkActiveStyleDark: CSSProperties = {\n  opacity: 1,\n  backgroundColor: 'currentColor'\n}\n\nexport default SliderMarkActiveStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SliderMarkStyleDark: CSSProperties = {\n  backgroundColor: grey[700],\n  height: 8,\n  width: 1,\n  marginTop: -3\n}\n\nexport default SliderMarkStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SliderRailStyleDark: CSSProperties = {\n  height: 2,\n  backgroundColor: grey[700]\n}\n\nexport default SliderRailStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { lightBlue } from '@material-ui/core/colors'\n\nconst SliderRootStyleDark: CSSProperties = {\n  color: lightBlue[800],\n  height: 2,\n  padding: '15px 0'\n}\n\nexport default SliderRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SliderThumbStyleDark: CSSProperties = {\n  height: 28,\n  width: 28,\n  backgroundColor: `#131313`,\n  boxShadow: `inset -1px -1px 2px #39393A, inset 2px 2px 3px #000000, -1px -1px 2px #39393A, 2px 2px 3px #000000,\n  inset -1px 1px 2px #39393A, inset -2px 2px 3px #000000,  inset 1px -1px 2px #39393A, inset 2px -2px 3px #000000`,\n  marginTop: -14,\n  marginLeft: -14,\n  '&:focus, &:hover, &.Mui-active': {\n    boxShadow: `3px 3px 6px #000000, -1px -1px 1px #39393A, inset -6px -6px 12px #000000, inset 5px 5px 10px #39393A`,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      boxShadow: `inset -1px -1px 2px #39393A, inset 2px 2px 3px #000000, -1px -1px 2px #39393A, 2px 2px 3px #000000,\n        inset -1px 1px 2px #39393A, inset -2px 2px 3px #000000,  inset 1px -1px 2px #39393A, inset 2px -2px 3px #000000`\n    }\n  }\n}\n\nexport default SliderThumbStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SliderTrackStyleDark: CSSProperties = {\n  height: 2\n}\n\nexport default SliderTrackStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SliderValueLabelStyleDark: CSSProperties = {\n  left: 'calc(-50% + 12px)',\n  top: -22,\n  '& *': {\n    background: 'transparent',\n    color: grey[400]\n  }\n}\n\nexport default SliderValueLabelStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SpeedDialIconRootStyleDark: CSSProperties = {}\n\nexport default SpeedDialIconRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst StepIconActiveStyleDark: CSSProperties = {}\n\nexport default StepIconActiveStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst StepIconCompletedStyleDark: CSSProperties = {\n  backgroundColor: grey[500],\n  borderRadius: `50%`\n}\n\nexport default StepIconCompletedStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst StepIconRootStyleDark: CSSProperties = {\n  color: grey[900],\n  \"&$error\": {\n    \"borderColor\": grey[900],\n    \"color\": \"red\"\n  }\n}\n\nexport default StepIconRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SwitchRootStyleDark: CSSProperties = {\n  root: {\n    width: 42,\n    height: 26,\n    padding: 3\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: '#ffffff',\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none'\n      }\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26,\n    backgroundColor: grey[200],\n    opacity: 1\n  }\n}\n\nexport default SwitchRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabLabelIconStyleDark: CSSProperties = {}\n\nexport default TabLabelIconStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TablePaginationRootStyleDark: CSSProperties = {}\n\nexport default TablePaginationRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TablePaginationSelectRootStyleDark: CSSProperties = {\n  backgroundColor: `#131313`,\n  color: `#FFFFFF`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    backgroundColor: `#131313`,\n    color: `#FFFFFF`,\n    boxShadow: `.75px -4px 3px -3px #000000, \n  inset .75px 1px .5px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .5px #39393A`\n  }\n}\n\nexport default TablePaginationSelectRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabRootStyleDark: CSSProperties = {}\n\nexport default TabRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabSelectedStyleDark: CSSProperties = {}\n\nexport default TabSelectedStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabsRootStyleDark: CSSProperties = {}\n\nexport default TabsRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TextAreaRootStyleDark: CSSProperties = {}\n\nexport default TextAreaRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ToggleButtonGroupRootStyleDark: CSSProperties = {}\n\nexport default ToggleButtonGroupRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ToggleButtonRootStyleDark: CSSProperties = {\n  borderRadius: '12px',\n  border: 'none',\n  '&:hover': {\n    backgroundColor: `#131313`,\n    boxShadow: `.75px -4px 3px -3px #000000, \n  inset .75px 1px .75px #000000, \n  -.75px 4px 3px -3px #39393A, \n  inset -.75px -1px .75px #39393A`\n  },\n  '&$selected': {\n    backgroundColor: `#131313`,\n    color: `#FFFFFF`,\n    boxShadow: `.75px -4px 5px -3px #000000, \n  inset .75px 1px .75px #000000, \n  -.75px 4px 5px -3px #39393A, \n  inset -.75px -1px .75px #39393A`\n  }\n}\n\nexport default ToggleButtonRootStyleDark\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst TouchRippleRootStyleDark: CSSProperties = {\n  color: grey[600]\n}\n\nexport default TouchRippleRootStyleDark\n","/** @format */\n\n//  OrbThemeDark.tsx\n//  MEGADocker\n//  a Theme for dark mode\n//  Created by Jospeh Treanor II on 12/24/20.\n//  Copyright © 2020-2021 Orb.Run, Inc. All rights reserved.\n\nimport { createMuiTheme, Theme } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\nimport AsapFont from '../fonts/Asap'\nimport AccordionExpandedStyleDark from '../styles/dark/AccordionExpandedStyleDark'\nimport AccordionRootStyleDark from '../styles/dark/AccordionRootStyleDark'\nimport AlertRootStyleDark from '../styles/dark/AlertRootStyleDark'\nimport AppBarRootStyleDark from '../styles/dark/AppBarRootStyleDark'\nimport AutocompleteOptionStyleDark from '../styles/dark/AutocompleteOptionStyleDark'\nimport AutocompletePaperStyleDark from '../styles/dark/AutocompletePaperStyleDark'\nimport BottomNavigationActionRootStyleDark from '../styles/dark/BottomNavigationActionRootStyleDark'\nimport BottomNavigationRootStyleDark from '../styles/dark/BottomNavigationRootStyleDark'\nimport ButtonIconInheritStyleDark from '../styles/dark/ButtonIconInheritStyleDark'\nimport ButtonIconRootStyleDark from '../styles/dark/ButtonIconRootStyleDark'\nimport ButtonPrimaryStyleDark from '../styles/dark/ButtonPrimaryStyleDark'\nimport ButtonRootStyleDark from '../styles/dark/ButtonRootStyleDark'\nimport ButtonSecondaryStyleDark from '../styles/dark/ButtonSecondaryStyleDark'\nimport CardRootStyleDark from '../styles/dark/CardRootStyleDark'\nimport CheckboxRootStyleDark from '../styles/dark/CheckboxRootStyleDark'\nimport CircularProgressPrimaryStyleDark from '../styles/dark/CircularProgressPrimaryStyleDark'\nimport CircularProgressRootStyleDark from '../styles/dark/CircularProgressRootStyleDark'\nimport ContainerRootStyleDark from '../styles/dark/ContainerRootStyleDark'\nimport DialogPaperStyleDark from '../styles/dark/DialogPaperStyleDark'\nimport DialogRootStyleDark from '../styles/dark/DialogRootStyleDark'\nimport DrawerPaperStyleDark from '../styles/dark/DrawerPaperStyleDark'\nimport DrawerRootStyleDark from '../styles/dark/DrawerRootStyleDark'\nimport FabRootStyleDark from '../styles/dark/FabRootStyleDark'\nimport FormControlLabelRootStyleDark from '../styles/dark/FormControlLabelRootStyleDark'\nimport FormControlRootStyleDark from '../styles/dark/FormControlRootStyleDark'\nimport FormHelperTextRootStyleDark from '../styles/dark/FormHelperTextRootStyleDark'\nimport IconRootStyleDark from '../styles/dark/IconRootStyleDark'\nimport ImageListItemBarRootStyleDark from '../styles/dark/ImageListItemBarRootStyleDark'\nimport ImageListRootStyleDark from '../styles/dark/ImageListRootStyleDark'\nimport InputAdornmentRootStyleDark from '../styles/dark/InputAdornmentRootStyleDark'\nimport InputBaseRootStyleDark from '../styles/dark/InputBaseRootStyleDark'\nimport InputLabelRootStyleDark from '../styles/dark/InputLabelRootStyleDark'\nimport InputOutlinedRootStyleDark from '../styles/dark/InputOutlinedRootStyleDark'\nimport ListItemRootStyleDark from '../styles/dark/ListItemRootStyleDark'\nimport ListRootStyleDark from '../styles/dark/ListRootStyleDark'\nimport MenuRootStyleDark from '../styles/dark/MenuRootStyleDark'\nimport MobileStepperDotActiveStyleDark from '../styles/dark/MobileStepperDotActiveStyleDark'\nimport MobileStepperDotStyleDark from '../styles/dark/MobileStepperDotStyleDark'\nimport MobileStepperProgressStyleDark from '../styles/dark/MobileStepperProgressStyleDark'\nimport NativeSelectRootStyleDark from '../styles/dark/NativeSelectRootStyleDark'\nimport OutlinedInputMultilineStyleDark from '../styles/dark/OutlinedInputMultilineStyleDark'\nimport PaletteBackgroundStyleDark from '../styles/dark/PaletteBackgroundStyleDark'\nimport PalettePrimaryStyleDark from '../styles/dark/PalettePrimaryStyleDark'\nimport PaletteSecondaryStyleDark from '../styles/dark/PaletteSecondaryStyleDark'\nimport PaperRootStyleDark from '../styles/dark/PaperRootStyleDark'\nimport RadioRootStyleDark from '../styles/dark/RadioRootStyleDark'\nimport SelectMenuRootStyleDark from '../styles/dark/SelectMenuRootStyleDark'\nimport SelectRootStyleDark from '../styles/dark/SelectRootStyleDark'\nimport SliderMarkActiveStyleDark from '../styles/dark/SliderMarkActiveStyleDark'\nimport SliderMarkStyleDark from '../styles/dark/SliderMarkStyleDark'\nimport SliderRailStyleDark from '../styles/dark/SliderRailStyleDark'\nimport SliderRootStyleDark from '../styles/dark/SliderRootStyleDark'\nimport SliderThumbStyleDark from '../styles/dark/SliderThumbStyleDark'\nimport SliderTrackStyleDark from '../styles/dark/SliderTrackStyleDark'\nimport SliderValueLabelStyleDark from '../styles/dark/SliderValueLabelStyleDark'\nimport SpeedDialIconRootStyleDark from '../styles/dark/SpeedDialIconRootStyleDark'\nimport StepIconActiveStyleDark from '../styles/dark/StepIconActiveStyleDark'\nimport StepIconCompletedStyleDark from '../styles/dark/StepIconCompletedStyleDark'\nimport StepIconRootStyleDark from '../styles/dark/StepIconRootStyleDark'\nimport SwitchRootStyleDark from '../styles/dark/SwitchRootStyleDark'\nimport TabLabelIconStyleDark from '../styles/dark/TabLabelIconStyleDark'\nimport TablePaginationRootStyleDark from '../styles/dark/TablePaginationItemRootStyleDark'\nimport TablePaginationItemRootStyleDark from '../styles/dark/TablePaginationItemRootStyleDark'\nimport TablePaginationSelectRootStyleDark from '../styles/dark/TablePaginationSelectRootStyleDark'\nimport TabRootStyleDark from '../styles/dark/TabRootStyleDark'\nimport TabSelectedStyleDark from '../styles/dark/TabSelectedStyleDark'\nimport TabsRootStyleDark from '../styles/dark/TabsRootStyleDark'\nimport TextAreaRootStyleDark from '../styles/dark/TextAreaRootStyleDark'\nimport ToggleButtonGroupRootStyleDark from '../styles/dark/ToggleButtonGroupRootStyleDark'\nimport ToggleButtonRootStyleDark from '../styles/dark/ToggleButtonRootStyleDark'\nimport TouchRippleRootStyleDark from '../styles/dark/TouchRippleRootStyleDark'\n\nexport const OrbThemeDark: Theme = createMuiTheme({\n  components: {\n    MuiAccordion: {\n      styleOverrides: {\n        root: AccordionRootStyleDark,\n        expanded: AccordionExpandedStyleDark,\n      },\n    },\n    MuiAlert: {\n      styleOverrides: {\n        root: AlertRootStyleDark,\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: AppBarRootStyleDark,\n      },\n    },\n    MuiAutocomplete: {\n      styleOverrides: {\n        paper: AutocompletePaperStyleDark,\n        option: AutocompleteOptionStyleDark,\n      },\n    },\n    MuiBottomNavigation: {\n      styleOverrides: {\n        root: BottomNavigationRootStyleDark,\n      },\n    },\n    MuiBottomNavigationAction: {\n      styleOverrides: {\n        root: BottomNavigationActionRootStyleDark,\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: ButtonRootStyleDark,\n        containedPrimary: ButtonPrimaryStyleDark,\n        containedSecondary: ButtonSecondaryStyleDark,\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: CardRootStyleDark,\n      },\n    },\n    MuiCheckbox: {\n      styleOverrides: {\n        root: CheckboxRootStyleDark,\n      },\n    },\n    MuiChip: {\n      styleOverrides: {\n        root: ButtonPrimaryStyleDark,\n      },\n    },\n    MuiCircularProgress: {\n      styleOverrides: {\n        root: CircularProgressRootStyleDark,\n        colorPrimary: CircularProgressPrimaryStyleDark,\n      },\n    },\n    MuiContainer: {\n      styleOverrides: {\n        root: ContainerRootStyleDark,\n      },\n    },\n    MuiCssBaseline: {\n      styleOverrides: {\n        '@global': {\n          '@font-face': AsapFont,\n        },\n      },\n    },\n    MuiDialog: {\n      styleOverrides: {\n        paper: DialogPaperStyleDark,\n        root: DialogRootStyleDark,\n      },\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: DrawerPaperStyleDark,\n        root: DrawerRootStyleDark,\n      },\n    },\n    MuiFab: {\n      styleOverrides: {\n        root: FabRootStyleDark,\n      },\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: FormControlRootStyleDark,\n      },\n    },\n    MuiFormControlLabel: {\n      styleOverrides: {\n        root: FormControlLabelRootStyleDark,\n      },\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: FormHelperTextRootStyleDark,\n      },\n    },\n    MuiIconButton: {\n      styleOverrides: {\n        root: ButtonIconRootStyleDark,\n        colorInherit: ButtonIconInheritStyleDark,\n        colorPrimary: ButtonPrimaryStyleDark,\n        colorSecondary: ButtonSecondaryStyleDark,\n      },\n    },\n    MuiIcon: {\n      styleOverrides: {\n        root: IconRootStyleDark,\n      },\n    },\n    MuiImageList: {\n      styleOverrides: {\n        root: ImageListRootStyleDark,\n      },\n    },\n    MuiImageListItemBar: {\n      styleOverrides: {\n        root: ImageListItemBarRootStyleDark,\n      },\n    },\n    MuiInputAdornment: {\n      styleOverrides: {\n        root: InputAdornmentRootStyleDark,\n      },\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: InputBaseRootStyleDark,\n      },\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: InputLabelRootStyleDark,\n      },\n    },\n    MuiList: {\n      styleOverrides: {\n        root: ListRootStyleDark,\n      },\n    },\n    MuiListItem: {\n      styleOverrides: {\n        root: ListItemRootStyleDark,\n      },\n    },\n    MuiMenu: {\n      styleOverrides: {\n        paper: MenuRootStyleDark,\n      },\n    },\n    MuiMobileStepper: {\n      styleOverrides: {\n        dot: MobileStepperDotStyleDark,\n        dotActive: MobileStepperDotActiveStyleDark,\n        progress: MobileStepperProgressStyleDark,\n      },\n    },\n    MuiNativeSelect: {\n      styleOverrides: {\n        root: NativeSelectRootStyleDark,\n        filled: NativeSelectRootStyleDark,\n        select: NativeSelectRootStyleDark,\n        outlined: NativeSelectRootStyleDark,\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: InputOutlinedRootStyleDark,\n        multiline: OutlinedInputMultilineStyleDark,\n      },\n    },\n    MuiPaginationItem: {\n      styleOverrides: {\n        root: TablePaginationItemRootStyleDark,\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: PaperRootStyleDark,\n      },\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: MenuRootStyleDark,\n      },\n    },\n    MuiRadio: {\n      styleOverrides: {\n        root: RadioRootStyleDark,\n      },\n    },\n    MuiSelect: {\n      styleOverrides: {\n        root: SelectRootStyleDark,\n        selectMenu: SelectMenuRootStyleDark,\n      },\n    },\n    MuiSlider: {\n      styleOverrides: {\n        root: SliderRootStyleDark,\n        thumb: SliderThumbStyleDark,\n        valueLabel: SliderValueLabelStyleDark,\n        track: SliderTrackStyleDark,\n        rail: SliderRailStyleDark,\n        mark: SliderMarkStyleDark,\n        markActive: SliderMarkActiveStyleDark,\n      },\n    },\n    MuiSpeedDial: {\n      styleOverrides: {\n        root: SpeedDialIconRootStyleDark,\n        fab: ButtonPrimaryStyleDark,\n      },\n    },\n    MuiStepIcon: {\n      styleOverrides: {\n        root: StepIconRootStyleDark,\n        active: StepIconActiveStyleDark,\n        completed: StepIconCompletedStyleDark,\n      },\n    },\n    MuiSwitch: {\n      styleOverrides: {\n        root: SwitchRootStyleDark,\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: TabRootStyleDark,\n        selected: TabSelectedStyleDark,\n        labelIcon: TabLabelIconStyleDark,\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        root: TabsRootStyleDark,\n        indicator: TabSelectedStyleDark,\n      },\n    },\n    MuiTablePagination: {\n      styleOverrides: {\n        root: TablePaginationRootStyleDark,\n        selectRoot: TablePaginationSelectRootStyleDark,\n      },\n    },\n    MuiTextField: {\n      styleOverrides: {\n        root: TextAreaRootStyleDark,\n      },\n    },\n    MuiToggleButton: {\n      styleOverrides: {\n        root: ToggleButtonRootStyleDark,\n      },\n    },\n    MuiToggleButtonGroup: {\n      styleOverrides: {\n        root: ToggleButtonGroupRootStyleDark,\n      },\n    },\n    MuiTouchRipple: {\n      styleOverrides: {\n        root: TouchRippleRootStyleDark,\n      },\n    },\n  },\n  palette: {\n    mode: 'dark',\n    background: PaletteBackgroundStyleDark,\n    primary: PalettePrimaryStyleDark,\n    secondary: PaletteSecondaryStyleDark,\n    text: {\n      primary: grey[300],\n      secondary: grey[500],\n      disabled: grey[700],\n    },\n  },\n  typography: {\n    fontFamily: 'Asap',\n  },\n})\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AccordionExpandedStyle: CSSProperties = {}\n\nexport default AccordionExpandedStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AccordionRootStyle: CSSProperties = {\n  boxShadow: `none`\n}\n\nexport default AccordionRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AlertRootStyle: CSSProperties = {\n  backgroundColor: `#F0F0F3`,\n  borderRadius: `24px`,\n  boxShadow: `7px 7px 15px #9B9B9E, -3px -3px 7px white`,\n  color: `#000000`,\n  '&:hover': {\n    borderColor: `#F0F0F3`,\n    boxShadow: `7px 7px 15px #c2c2c5, -3px -3px 7px white`\n  }\n}\n\nexport default AlertRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AppBarRootStyle: CSSProperties = {\n  display: `flex`,\n  verticalAlign: `center`,\n  boxShadow: `0 5px 10px 10px #F0F0F3`\n}\n\nexport default AppBarRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AutocompleteOptionStyle: CSSProperties = {\n  backgroundColor: `#F0F0F3`,\n  color: `#000000`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    backgroundColor: `#F0F0F3`,\n    color: `#000000`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white`\n  }\n}\n\nexport default AutocompleteOptionStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst AutocompletePaperStyle: CSSProperties = {\n  marginBottom: `12px`,\n  borderRadius: `25px`,\n  boxShadow: `5px 5px 12px #BFBFC1, \ninset -1px -1px .5px #BFBFC1, \ninset 1px 1px .5px white`,\n  color: `#000000`\n}\n\nexport default AutocompletePaperStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst BottomNavigationActionRootStyle: CSSProperties = {\n  color: grey[600],\n  backgroundColor: `#F0F0F3`,\n  borderRadius: `25px`,\n  margin: `7px`,\n  '&:hover': {\n    backgroundColor: `#F0F0F3`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white`\n  },\n  '&$selected': {\n    backgroundColor: `#F0F0F3`,\n    color: `#000000`,\n    '&:hover': {\n      backgroundColor: `#F0F0F3`,\n      boxShadow: `none`\n    }\n  }\n}\n\nexport default BottomNavigationActionRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst BottomNavigationRootStyle: CSSProperties = {\n  borderTopLeftRadius: `25px`,\n  borderTopRightRadius: `25px`,\n  boxShadow: `0 -3px 7px  #BFBFC1, \ninset 0 .5px .5px #BFBFC1`\n}\n\nexport default BottomNavigationRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonIconInheritStyle: CSSProperties = {\n  boxShadow: `-.75px 4px 3px -3px #D8D8DB, \n  inset -.75px -1px .75px #D8D8DB, \n  .75px -4px 3px -3px white, \n  inset .75px 1px .75px white`,\n  '&:hover': {\n    backgroundColor: `#F0F0F3`,\n    color: `#000000`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n    inset .75px 1px .75px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -1px .75px white`\n  }\n}\n\nexport default ButtonIconInheritStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonIconRootStyle: CSSProperties = {\n  borderRadius: `24px`,\n  textTransform: `uppercase`,\n  '&:hover': {\n    textTransform: `uppercase`\n  }\n}\n\nexport default ButtonIconRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonPrimaryStyle: CSSProperties = {\n  boxShadow: `-.75px 4px 3px -3px #D8D8DB, \n  inset -.75px -1px .75px #D8D8DB, \n  .75px -4px 3px -3px white, \n  inset .75px 1px .75px white`,\n  color: `#000000`,\n  '&:hover': {\n    backgroundColor: `#F0F0F3`,\n    color: `#000000`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n    inset .75px 1px .75px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -1px .75px white`\n  }\n}\n\nexport default ButtonPrimaryStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonRootStyle: CSSProperties = {\n  borderRadius: `24px`,\n  margin: `7px`,\n  textTransform: `uppercase`,\n  '&:hover': {\n    textTransform: `uppercase`\n  }\n}\n\nexport default ButtonRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ButtonSecondaryStyle: CSSProperties = {\n  color: `#000000`,\n  boxShadow: `-.75px 4px 3px -3px #D8D8DB, \n  inset -.75px -1px .75px #D8D8DB, \n  .75px -4px 3px -3px white, \n  inset .75px 1px .75px white`,\n  '&:hover': {\n    color: `#000000`,\n    backgroundColor: `#F0F0F3`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n    inset .75px 1px .75px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -1px .75px white`\n  }\n}\n\nexport default ButtonSecondaryStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst CardRootStyle: CSSProperties = {\n  paddingTop: '24px',\n  borderRadius: '50px',\n  boxShadow: `5px 5px 12px #BFBFC1, \n  -5px -5px 12px white, \n  inset -1px -1px .5px #BFBFC1, \n  inset 1px 1px .5px white`,\n  color: `#000000`\n}\n\nexport default CardRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst CheckboxRootStyle: CSSProperties = {\n  boxShadow: `none`,\n  marginLeft: `5px`,\n  marginRight: `5px`\n}\n\nexport default CheckboxRootStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst CircularProgressPrimaryStyle: CSSProperties = {\n  color: grey[700]\n}\n\nexport default CircularProgressPrimaryStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst CircularProgressRootStyle: CSSProperties = {}\n\nexport default CircularProgressRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ContainerRootStyle: CSSProperties = {\n  alignContent: 'center',\n  borderRadius: '25px',\n  padding: '25px',\n  boxShadow: `5px 5px 12px #BFBFC1, \n  -5px -5px 12px white, \n  inset -1px -1px .5px #BFBFC1, \n  inset 1px 1px .5px white`,\n  color: `#000000`\n}\n\nexport default ContainerRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst DialogPaperStyle: CSSProperties = {\n  borderRadius: '24px'\n}\n\nexport default DialogPaperStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst DialogRootStyle: CSSProperties = {}\n\nexport default DialogRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst drawerWidth = 240\nconst appBarHeight = 70\n\nconst DrawerPaperStyle: CSSProperties = {\n  width: drawerWidth,\n  height: `calc(100%-${appBarHeight}px)`,\n  marginTop: 0,\n  borderRadius: '25px',\n  backgroundColor: `#F0F0F3`,\n  boxShadow: `12px 12px 30px -6px #B4B4B5`\n}\n\nexport default DrawerPaperStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst drawerWidth = 240\nconst appBarHeight = 70\n\nconst DrawerRootStyle: CSSProperties = {\n  width: drawerWidth,\n  height: `calc(100%-${appBarHeight}px)`,\n  marginTop: 0,\n  flexShrink: 0\n}\n\nexport default DrawerRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst FabRootStyle: CSSProperties = {}\n\nexport default FabRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst FormControlLabelRootStyle: CSSProperties = {}\n\nexport default FormControlLabelRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst FormControlRootStyle: CSSProperties = {}\n\nexport default FormControlRootStyle\n","import { grey } from '@material-ui/core/colors'\nimport { CSSProperties } from '@material-ui/styles'\n\nconst FormHelperTextRootStyle: CSSProperties = {\n  color: grey[700]\n}\n\nexport default FormHelperTextRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst IconRootStyle: CSSProperties = {}\n\nexport default IconRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ImageListItemBarRootStyle: CSSProperties = {\n  borderBottomLeftRadius: `12px`,\n  borderBottomRightRadius: `12px`\n}\n\nexport default ImageListItemBarRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ImageListRootStyle: CSSProperties = {\n  borderRadius: `12px`,\n  boxShadow: `5px 5px 12px #C2C2C5, -5px -5px 12px white`\n}\n\nexport default ImageListRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst InputAdornmentRootStyle: CSSProperties = {\n  '&:hover': {},\n  '&$focused': {\n    '&:hover': {}\n  }\n}\n\nexport default InputAdornmentRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst InputBaseRootStyle: CSSProperties = {\n  color: `black`,\n  marginBottom: `5px`,\n  boxShadow: `inset -3px -3px 7px #ffffff, inset 3px 3px 5px #D8D8DB`,\n  '&:hover': {\n    color: `black`,\n    boxShadow: `7px 7px 15px #c2c2c5, -3px -3px 7px white`\n  },\n  '&$focused': {\n    color: `black`,\n    boxShadow: `7px 7px 15px #9B9B9E, -3px -3px 7px white`,\n    '&:hover': {\n      color: `black`,\n      boxShadow: `7px 7px 15px #9B9B9E, -3px -3px 7px white`\n    }\n  }\n}\n\nexport default InputBaseRootStyle\n","import grey from '@material-ui/core/colors/grey'\nimport { CSSProperties } from '@material-ui/styles'\n\nconst InputLabelRootStyle: CSSProperties = {\n  color: grey[700],\n  textShadow:\n    '2px 2px 3px #F0F0F3, -2px -2px 3px #F0F0F3, -2px 2px 3px #F0F0F3, 2px -2px 3px #F0F0F3',\n  '&$focused': {\n    color: `black`\n  }\n}\n\nexport default InputLabelRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst InputOutlinedRootStyle: CSSProperties = {\n  borderRadius: '50px',\n  boxShadow: `.75px -4px 3px -3px #D8D8DB, \n    inset .75px 3px 3px #D8D8DB, \n    -.75px 4px 3px -3px white, \n    inset -.75px -3px 3px white`,\n  '&:hover': {\n    color: `black`,\n    boxShadow: `7px 7px 15px #c2c2c5, -3px -3px 7px white`\n  },\n  '&$focused': {\n    color: `black`,\n    boxShadow: `7px 7px 15px #9B9B9E, -3px -3px 7px white`,\n    '&:hover': {\n      color: `black`,\n      boxShadow: `7px 7px 15px #9B9B9E, -3px -3px 7px white`\n    }\n  }\n}\n\nexport default InputOutlinedRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ListItemRootStyle: CSSProperties = {\n  backgroundColor: `transparent`,\n  color: `#000000`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    color: `#000000`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white`\n  },\n  '&$selected': {\n    color: `#000000`,\n    boxShadow: `.75px -4px 5px -3px #D8D8DB, \n  inset .75px 1px .75px #D8D8DB, \n  -.75px 4px 5px -3px white, \n  inset -.75px -1px .75px white`\n  }\n}\n\nexport default ListItemRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ListRootStyle: CSSProperties = {\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nexport default ListRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst MenuRootStyle: CSSProperties = {\n  borderRadius: '25px',\n  boxShadow: `5px 5px 12px #BFBFC1, \n  -5px -5px 12px white, \n  inset -1px -1px .5px #BFBFC1, \n  inset 1px 1px .5px white`,\n  color: `#000000`\n}\n\nexport default MenuRootStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst MobileStepperDotActiveStyle: CSSProperties = {\n  backgroundColor: grey[800]\n}\n\nexport default MobileStepperDotActiveStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst MobileStepperDotStyle: CSSProperties = {\n  backgroundColor: grey[400]\n}\n\nexport default MobileStepperDotStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst MobileStepperProgressStyle: CSSProperties = {\n  backgroundColor: grey[400],\n  color: '#000000'\n}\n\nexport default MobileStepperProgressStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst NativeSelectRootStyle: CSSProperties = {\n  marginLeft: `12px`,\n  \"&$disabled\": {\n    \"marginLeft\": \"12px\"\n  }\n}\n\nexport default NativeSelectRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst OutlinedInputMultilineStyle: CSSProperties = {\n  borderTopLeftRadius: '25px',\n  borderTopRightRadius: '25px',\n  borderBottomLeftRadius: '25px',\n  borderBottomRightRadius: '25px'\n}\n\nexport default OutlinedInputMultilineStyle\n","import { TypeBackground } from '@material-ui/core/styles/createPalette'\n\nconst PaletteBackgroundStyle: Partial<TypeBackground> = {\n  default: `#F0F0F3`,\n  paper: `#F0F0F3`\n}\n\nexport default PaletteBackgroundStyle\n","import { SimplePaletteColorOptions } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\n\nconst PalettePrimaryStyle: SimplePaletteColorOptions = {\n  main: `#F0F0F3`,\n  light: grey[500],\n  dark: `#d8d8da`,\n  contrastText: grey[900]\n}\n\nexport default PalettePrimaryStyle\n","import { SimplePaletteColorOptions } from '@material-ui/core'\nimport { grey, lightBlue } from '@material-ui/core/colors'\n\nconst PaletteSecondaryStyle: SimplePaletteColorOptions = {\n  main: lightBlue[200],\n  light: lightBlue[100],\n  dark: lightBlue[300],\n  contrastText: grey[900]\n}\n\nexport default PaletteSecondaryStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst PaperRootStyle: CSSProperties = {\n  paddingLeft: `30px`,\n  paddingRight: `30px`,\n  marginLeft: `-8px`,\n  marginRight: `-8px`\n}\n\nexport default PaperRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst RadioRootStyle: CSSProperties = {\n  boxShadow: `none`,\n  marginLeft: `5px`,\n  marginRight: `5px`\n}\n\nexport default RadioRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SelectMenuRootStyle: CSSProperties = {\n  borderRadius: '25px',\n  color: `#000000`\n}\nexport default SelectMenuRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SelectRootStyle: CSSProperties = {\n}\n\nexport default SelectRootStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SliderMarkActiveStyle: CSSProperties = {\n  backgroundColor: grey[700]\n}\n\nexport default SliderMarkActiveStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SliderMarkStyle: CSSProperties = {\n  backgroundColor: grey[400],\n  height: 8,\n  width: 1,\n  marginTop: -3\n}\n\nexport default SliderMarkStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SliderRailStyle: CSSProperties = {\n  height: 2,\n  backgroundColor: grey[700]\n}\n\nexport default SliderRailStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { lightBlue } from '@material-ui/core/colors'\n\nconst SliderRootStyle: CSSProperties = {\n  color: lightBlue[300],\n  height: 2,\n  padding: '15px 0'\n}\n\nexport default SliderRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SliderThumbStyle: CSSProperties = {\n  height: 28,\n  width: 28,\n  backgroundColor: `#F0F0F3`,\n  boxShadow: `inset -2px -2px 3px #FFFFFF, inset 1px 1px 2px #aeaeb1, -2px -2px 3px #FFFFFF, 1px 1px 2px #aeaeb1,\n  inset -2px 2px 3px #FFFFFF, inset -1px 1px 2px #aeaeb1,  inset 2px -2px 3px #FFFFFF, inset 1px -1px 2px #aeaeb1`,\n  marginTop: -14,\n  marginLeft: -14,\n  '&:focus, &:hover, &.Mui-active': {\n    boxShadow: `2px 2px 4px #aeaeb1, -3px -3px 6px #FFFFFF, inset -5px -5px 10px #aeaeb1, inset 6px 6px 12px #FFFFFF`,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      boxShadow: `inset -2px -2px 3px #FFFFFF, inset 1px 1px 2px #aeaeb1, -2px -2px 3px #FFFFFF, 1px 1px 2px #aeaeb1,\n        inset -2px 2px 3px #FFFFFF, inset -1px 1px 2px #aeaeb1,  inset 2px -2px 3px #FFFFFF, inset 1px -1px 2px #aeaeb1`\n    }\n  }\n}\n\nexport default SliderThumbStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SliderTrackStyle: CSSProperties = {\n  height: 2\n}\n\nexport default SliderTrackStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SliderValueLabelStyle: CSSProperties = {\n  left: 'calc(-50% + 12px)',\n  top: -22,\n  '& *': {\n    background: 'transparent',\n    color: '#000000'\n  }\n}\n\nexport default SliderValueLabelStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst SpeedDialIconRootStyle: CSSProperties = {}\n\nexport default SpeedDialIconRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst StepIconActiveStyle: CSSProperties = {}\n\nexport default StepIconActiveStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst StepIconCompletedStyle: CSSProperties = {\n  backgroundColor: `#000000`,\n  borderRadius: `50%`\n}\n\nexport default StepIconCompletedStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst StepIconRootStyle: CSSProperties = {\n  color: grey[300],\n  \"&$error\": {\n    \"borderColor\": grey[300],\n    \"color\": \"red\"\n  }\n}\n\nexport default StepIconRootStyle\n","import { CSSProperties } from '@material-ui/styles'\nimport { grey } from '@material-ui/core/colors'\n\nconst SwitchRootStyle: CSSProperties = {\n  root: {\n    width: 42,\n    height: 26,\n    padding: 3\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: '#ffffff',\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none'\n      }\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26,\n    backgroundColor: grey[900],\n    opacity: 1\n  }\n}\n\nexport default SwitchRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabLabelIconStyle: CSSProperties = {}\n\nexport default TabLabelIconStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TablePaginationItemRootStyle: CSSProperties = {}\n\nexport default TablePaginationItemRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TablePaginationSelectRootStyle: CSSProperties = {\n  backgroundColor: `#F0F0F3`,\n  color: `#000000`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    backgroundColor: `#F0F0F3`,\n    color: `#000000`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .5px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .5px white`\n  }\n}\n\nexport default TablePaginationSelectRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TableRowRootStyle: CSSProperties = {\n  backgroundColor: `#FFFFFF`,\n  color: `#000000`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    backgroundColor: `#EEEEEE`,\n    color: `#000000`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, inset .75px 1px .5px #D8D8DB, -.75px 4px 3px -3px white, inset -.75px -1px .5px white`\n  }\n}\n\nexport default TableRowRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TableRowSelectedStyle: CSSProperties = {\n  backgroundColor: `#EEEEEE`,\n  color: `#000000`,\n  borderRadius: `25px`,\n  marginTop: `8px`,\n  marginBottom: `8px`,\n  '&:hover': {\n    backgroundColor: `#EEEEEE`,\n    color: `#000000`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, inset .75px 1px .5px #D8D8DB, -.75px 4px 3px -3px white, inset -.75px -1px .5px white`\n  }\n}\n\nexport default TableRowSelectedStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabRootStyle: CSSProperties = {}\n\nexport default TabRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabSelectedStyle: CSSProperties = {}\n\nexport default TabSelectedStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TabsRootStyle: CSSProperties = {}\n\nexport default TabsRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst TextAreaRootStyle: CSSProperties = {}\n\nexport default TextAreaRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ToggleButtonGroupRootStyle: CSSProperties = {}\n\nexport default ToggleButtonGroupRootStyle\n","import { CSSProperties } from '@material-ui/styles'\n\nconst ToggleButtonRootStyle: CSSProperties = {\n  borderRadius: '12px',\n  border: 'none',\n  '&:hover': {\n    backgroundColor: `#F0F0F3`,\n    boxShadow: `.75px -4px 3px -3px #D8D8DB, \n  inset .75px 1px .75px #D8D8DB, \n  -.75px 4px 3px -3px white, \n  inset -.75px -1px .75px white`\n  },\n  '&$selected': {\n    backgroundColor: `#F0F0F3`,\n    color: `#000000`,\n    boxShadow: `.75px -4px 5px -3px #D8D8DB, \n  inset .75px 1px .75px #D8D8DB, \n  -.75px 4px 5px -3px white, \n  inset -.75px -1px .75px white`\n  }\n}\n\nexport default ToggleButtonRootStyle\n","/** @format */\n\n//  OrbThemeLight.tsx\n//  MEGADocker\n//  a Theme for light mode\n//  Created by Jospeh Treanor II on 12/24/20.\n//  Copyright © 2020-2021 Orb.Run, Inc. All rights reserved.\n\nimport { createMuiTheme, Theme } from '@material-ui/core'\nimport AsapFont from '../fonts/Asap'\nimport AccordionExpandedStyle from '../styles/light/AccordionExpandedStyle'\nimport AccordionRootStyle from '../styles/light/AccordionRootStyle'\nimport AlertRootStyle from '../styles/light/AlertRootStyle'\nimport AppBarRootStyle from '../styles/light/AppBarRootStyle'\nimport AutocompleteOptionStyle from '../styles/light/AutocompleteOptionStyle'\nimport AutocompletePaperStyle from '../styles/light/AutocompleteRootStyle'\nimport BottomNavigationActionRootStyle from '../styles/light/BottomNavigationActionRootStyle'\nimport BottomNavigationRootStyle from '../styles/light/BottomNavigationRootStyle'\nimport ButtonIconInheritStyle from '../styles/light/ButtonIconInheritStyle'\nimport ButtonIconRootStyle from '../styles/light/ButtonIconRootStyle'\nimport ButtonPrimaryStyle from '../styles/light/ButtonPrimaryStyle'\nimport ButtonRootStyle from '../styles/light/ButtonRootStyle'\nimport ButtonSecondaryStyle from '../styles/light/ButtonSecondaryStyle'\nimport CardRootStyle from '../styles/light/CardRootStyle'\nimport CheckboxRootStyle from '../styles/light/CheckboxRootStyle'\nimport CircularProgressPrimaryStyle from '../styles/light/CircularProgressPrimaryStyle'\nimport CircularProgressRootStyle from '../styles/light/CircularProgressRootStyle'\nimport ContainerRootStyle from '../styles/light/ContainerRootStyle'\nimport DialogPaperStyle from '../styles/light/DialogPaperStyle'\nimport DialogRootStyle from '../styles/light/DialogRootStyle'\nimport DrawerPaperStyle from '../styles/light/DrawerPaperStyle'\nimport DrawerRootStyle from '../styles/light/DrawerRootStyle'\nimport FabRootStyle from '../styles/light/FabRootStyle'\nimport FormControlLabelRootStyle from '../styles/light/FormControlLabelRootStyle'\nimport FormControlRootStyle from '../styles/light/FormControlRootStyle'\nimport FormHelperTextRootStyle from '../styles/light/FormHelperTextRootStyle'\nimport IconRootStyle from '../styles/light/IconRootStyle'\nimport ImageListItemBarRootStyle from '../styles/light/ImageListItemBarRootStyle'\nimport ImageListRootStyle from '../styles/light/ImageListRootStyle'\nimport InputAdornmentRootStyle from '../styles/light/InputAdornmentRootStyle'\nimport InputBaseRootStyle from '../styles/light/InputBaseRootStyle'\nimport InputLabelRootStyle from '../styles/light/InputLabelRootStyle'\nimport InputOutlinedRootStyle from '../styles/light/InputOutlinedRootStyle'\nimport ListItemRootStyle from '../styles/light/ListItemRootStyle'\nimport ListRootStyle from '../styles/light/ListRootStyle'\nimport MenuRootStyle from '../styles/light/MenuRootStyle'\nimport MobileStepperDotActiveStyle from '../styles/light/MobileStepperDotActiveStyle'\nimport MobileStepperDotStyle from '../styles/light/MobileStepperDotStyle'\nimport MobileStepperProgressStyle from '../styles/light/MobileStepperProgressStyle'\nimport NativeSelectRootStyle from '../styles/light/NativeSelectRootStyle'\nimport OutlinedInputMultilineStyle from '../styles/light/OutlinedInputMultilineStyle'\nimport PaletteBackgroundStyle from '../styles/light/PaletteBackgroundStyle'\nimport PalettePrimaryStyle from '../styles/light/PalettePrimaryStyle'\nimport PaletteSecondaryStyle from '../styles/light/PaletteSecondaryStyle'\nimport PaperRootStyle from '../styles/light/PaperRootStyle'\nimport RadioRootStyle from '../styles/light/RadioRootStyle'\nimport SelectMenuRootStyle from '../styles/light/SelectMenuRootStyle'\nimport SelectRootStyle from '../styles/light/SelectRootStyle'\nimport SliderMarkActiveStyle from '../styles/light/SliderMarkActiveStyle'\nimport SliderMarkStyle from '../styles/light/SliderMarkStyle'\nimport SliderRailStyle from '../styles/light/SliderRailStyle'\nimport SliderRootStyle from '../styles/light/SliderRootStyle'\nimport SliderThumbStyle from '../styles/light/SliderThumbStyle'\nimport SliderTrackStyle from '../styles/light/SliderTrackStyle'\nimport SliderValueLabelStyle from '../styles/light/SliderValueLabelStyle'\nimport SpeedDialIconRootStyle from '../styles/light/SpeedDialIconRootStyle'\nimport StepIconActiveStyle from '../styles/light/StepIconActiveStyle'\nimport StepIconCompletedStyle from '../styles/light/StepIconCompletedStyle'\nimport StepIconRootStyle from '../styles/light/StepIconRootStyle'\nimport SwitchRootStyle from '../styles/light/SwitchRootStyle'\nimport TabLabelIconStyle from '../styles/light/TabLabelIconStyle'\nimport TablePaginationItemRootStyle from '../styles/light/TablePaginationItemRootStyle'\nimport TablePaginationSelectRootStyle from '../styles/light/TablePaginationSelectRootStyle'\nimport TableRowRootStyle from '../styles/light/TableRowRootStyle'\nimport TableRowSelectedStyle from '../styles/light/TableRowSelectedStyle'\nimport TabRootStyle from '../styles/light/TabRootStyle'\nimport TabSelectedStyle from '../styles/light/TabSelectedStyle'\nimport TabsRootStyle from '../styles/light/TabsRootStyle'\nimport TextFieldRootStyle from '../styles/light/TextFieldRootStyle'\nimport ToggleButtonGroupRootStyle from '../styles/light/ToggleButtonGroupRootStyle'\nimport ToggleButtonRootStyle from '../styles/light/ToggleButtonRootStyle'\n\nexport const OrbThemeLight: Theme = createMuiTheme({\n  components: {\n    MuiAccordion: {\n      styleOverrides: {\n        root: AccordionRootStyle,\n        expanded: AccordionExpandedStyle,\n      },\n    },\n    MuiAlert: {\n      styleOverrides: {\n        root: AlertRootStyle,\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: AppBarRootStyle,\n      },\n    },\n    MuiAutocomplete: {\n      styleOverrides: {\n        paper: AutocompletePaperStyle,\n        option: AutocompleteOptionStyle,\n      },\n    },\n    MuiBottomNavigation: {\n      styleOverrides: {\n        root: BottomNavigationRootStyle,\n      },\n    },\n    MuiBottomNavigationAction: {\n      styleOverrides: {\n        root: BottomNavigationActionRootStyle,\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: ButtonRootStyle,\n        containedPrimary: ButtonPrimaryStyle,\n        containedSecondary: ButtonSecondaryStyle,\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: CardRootStyle,\n      },\n    },\n    MuiCheckbox: {\n      styleOverrides: {\n        root: CheckboxRootStyle,\n      },\n    },\n    MuiChip: {\n      styleOverrides: {\n        root: ButtonPrimaryStyle,\n      },\n    },\n    MuiCircularProgress: {\n      styleOverrides: {\n        root: CircularProgressRootStyle,\n        colorPrimary: CircularProgressPrimaryStyle,\n      },\n    },\n    MuiContainer: {\n      styleOverrides: {\n        root: ContainerRootStyle,\n      },\n    },\n    MuiCssBaseline: {\n      styleOverrides: {\n        '@global': {\n          '@font-face': AsapFont,\n        },\n      },\n    },\n    MuiDialog: {\n      styleOverrides: {\n        root: DialogRootStyle,\n        paper: DialogPaperStyle,\n      },\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        root: DrawerRootStyle,\n        paper: DrawerPaperStyle,\n      },\n    },\n    MuiFab: {\n      styleOverrides: {\n        root: FabRootStyle,\n      },\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: FormControlRootStyle,\n      },\n    },\n    MuiFormControlLabel: {\n      styleOverrides: {\n        root: FormControlLabelRootStyle,\n      },\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: FormHelperTextRootStyle,\n      },\n    },\n    MuiIconButton: {\n      styleOverrides: {\n        root: ButtonIconRootStyle,\n        colorInherit: ButtonIconInheritStyle,\n        colorPrimary: ButtonPrimaryStyle,\n        colorSecondary: ButtonSecondaryStyle,\n      },\n    },\n    MuiIcon: {\n      styleOverrides: {\n        root: IconRootStyle,\n      },\n    },\n    MuiImageList: {\n      styleOverrides: {\n        root: ImageListRootStyle,\n      },\n    },\n    MuiImageListItemBar: {\n      styleOverrides: {\n        root: ImageListItemBarRootStyle,\n      },\n    },\n    MuiInputAdornment: {\n      styleOverrides: {\n        root: InputAdornmentRootStyle,\n      },\n    },\n    MuiInputBase: {\n      styleOverrides: {\n        root: InputBaseRootStyle,\n      },\n    },\n    MuiInputLabel: {\n      styleOverrides: {\n        root: InputLabelRootStyle,\n      },\n    },\n    MuiList: {\n      styleOverrides: {\n        root: ListRootStyle,\n      },\n    },\n    MuiListItem: {\n      styleOverrides: {\n        root: ListItemRootStyle,\n      },\n    },\n    MuiMenu: {\n      styleOverrides: {\n        paper: MenuRootStyle,\n      },\n    },\n    MuiMobileStepper: {\n      styleOverrides: {\n        dot: MobileStepperDotStyle,\n        dotActive: MobileStepperDotActiveStyle,\n        progress: MobileStepperProgressStyle,\n      },\n    },\n    MuiNativeSelect: {\n      styleOverrides: {\n        root: NativeSelectRootStyle,\n        filled: NativeSelectRootStyle,\n        select: NativeSelectRootStyle,\n        outlined: NativeSelectRootStyle,\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: InputOutlinedRootStyle,\n        multiline: OutlinedInputMultilineStyle,\n      },\n    },\n    MuiPaginationItem: {\n      styleOverrides: {\n        root: TablePaginationItemRootStyle,\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: PaperRootStyle,\n      },\n    },\n    MuiPopover: {\n      styleOverrides: {\n        paper: MenuRootStyle,\n      },\n    },\n    MuiRadio: {\n      styleOverrides: {\n        root: RadioRootStyle,\n      },\n    },\n    MuiSelect: {\n      styleOverrides: {\n        root: SelectRootStyle,\n        selectMenu: SelectMenuRootStyle,\n      },\n    },\n    MuiSlider: {\n      styleOverrides: {\n        root: SliderRootStyle,\n        thumb: SliderThumbStyle,\n        valueLabel: SliderValueLabelStyle,\n        track: SliderTrackStyle,\n        rail: SliderRailStyle,\n        mark: SliderMarkStyle,\n        markActive: SliderMarkActiveStyle,\n      },\n    },\n    MuiSpeedDial: {\n      styleOverrides: {\n        root: SpeedDialIconRootStyle,\n        fab: ButtonPrimaryStyle,\n      },\n    },\n    MuiStepIcon: {\n      styleOverrides: {\n        root: StepIconRootStyle,\n        active: StepIconActiveStyle,\n        completed: StepIconCompletedStyle,\n      },\n    },\n    MuiSwitch: {\n      styleOverrides: {\n        root: SwitchRootStyle,\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: TabRootStyle,\n        selected: TabSelectedStyle,\n        labelIcon: TabLabelIconStyle,\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        root: TabsRootStyle,\n        indicator: TabSelectedStyle,\n      },\n    },\n    MuiTablePagination: {\n      styleOverrides: {\n        root: TablePaginationItemRootStyle,\n        selectRoot: TablePaginationSelectRootStyle,\n      },\n    },\n    MuiTableRow: {\n      styleOverrides: {\n        root: TableRowRootStyle,\n        selected: TableRowSelectedStyle,\n      },\n    },\n    MuiTextField: {\n      styleOverrides: {\n        root: TextFieldRootStyle,\n      },\n    },\n    MuiToggleButton: {\n      styleOverrides: {\n        root: ToggleButtonRootStyle,\n      },\n    },\n    MuiToggleButtonGroup: {\n      styleOverrides: {\n        root: ToggleButtonGroupRootStyle,\n      },\n    },\n  },\n  palette: {\n    mode: 'light',\n    background: PaletteBackgroundStyle,\n    primary: PalettePrimaryStyle,\n    secondary: PaletteSecondaryStyle,\n    action: {\n      selected: `#C0C0C2`,\n    },\n    text: {\n      primary: `#000000`,\n      secondary: `#646465`,\n      disabled: `#818182`,\n    },\n  },\n  typography: {\n    fontFamily: 'Asap',\n  },\n})\n","/** @format */\n\nimport { IHeaderMite } from '../../../interfaces/IHeaderMite'\n\nexport const mobFileHeaderSectionString: IHeaderMite = {\n  type: `DockerSwarmHeader`,\n  miteIndex: 29999,\n  miteString: `\n# MegaDocker YML File\nversion: '3.9'\n\n# Created by MegaDocker\n# Mob is named: [[MOBNAME]]\n\n# Begin Services Section\n\nservices:\n`,\n}\n","/** @format */\n\nimport { IHeaderMite } from '../../../interfaces/IHeaderMite'\n\nexport const mobServicesFooterSectionString: IHeaderMite = {\n  type: `DockerSwarmHeader`,\n  miteIndex: 39999,\n  miteString: `\n\n# End Services Section\n\n`,\n}\n","/** @format */\n\nimport { IHeaderMite } from '../../../interfaces/IHeaderMite'\n\nexport const mobNetworkHeaderSectionString: IHeaderMite = {\n  type: `DockerSwarmHeader`,\n  miteIndex: 39999,\n  miteString: `\n\n# Begin Networks Section\n\nnetworks:\n\n`,\n}\n","/** @format */\n\nimport { IHeaderMite } from '../../../interfaces/IHeaderMite'\n\nexport const mobNetworkFooterSectionString: IHeaderMite = {\n  type: `DockerSwarmHeader`,\n  miteIndex: 49999,\n  miteString: `\n\n# End Networks Section\n\n`,\n}\n","/** @format */\n\n//  cloudflareEmail.ts\n//  MEGADocker\n//  The variable for the user's CloudFlare Email address\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { cloudflareApiTokenValidator } from '../../functions/validators/cloudflareApiTokenValidator'\n\nexport const cloudflareAPIToken: IMemory = {\n  memoryIndex: 20004,\n  memoryMarker: `[[CLOUDFLAREAPITOKEN]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: true,\n  name: `CloudFlare API Token`,\n  tooltip: `A CloudFlare API token with \"DNS: Edit\" and \"Zone: Read\" privileges for your domains`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: cloudflareApiTokenValidator,\n}\n","/** @format */\n\n//  cloudflareApiTokenValidator.ts\n//  MEGADocker\n//  a validator function for Cloudflare API tokens\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nexport const cloudflareApiTokenValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate || stringToValidate.length === 0) {\n    return false\n  }\n  const isExactlyFortyCharacters: boolean = stringToValidate.length === 40\n  const isAlphanumericRegex: RegExp = new RegExp(`^[a-zA-Z0-9_]*$`)\n  const containsOnlyAlphanumerics: boolean = isAlphanumericRegex.test(stringToValidate!)\n  const isValidated: boolean = containsOnlyAlphanumerics && isExactlyFortyCharacters\n  return isValidated\n}\n","/** @format */\n\n//  letsEncryptEmail.ts\n//  MEGADocker\n//  The variable for the usert's Let's Encrypt account email address\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { emailValidator } from '../../functions/validators/emailValidator'\n\nexport const letsEncryptEmail: IMemory = {\n  memoryIndex: 20024,\n  memoryMarker: `[[LETSENCRYPTEMAIL]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: true,\n  name: `Let's Encrypt Email Address`,\n  tooltip: `The email address used to register your domain`,\n  value: ``,\n  valueType: `email`,\n  isReady: false,\n  validator: emailValidator,\n}\n","/** @format */\n\n//  emailValidator.ts\n//  MEGADocker\n//  a validator function for email addresses\n\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nexport const emailValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate || stringToValidate.length === 0) {\n    return false\n  }\n  const emailRegex: RegExp = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$')\n  const isValidated: boolean = emailRegex.test(stringToValidate) ? true : false\n  return isValidated\n}\n","/** @format */\n\n//  primaryDomain.ts\n//  MEGADocker\n//  The variable for the domain name of your primary web domain\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { domainValidator } from '../../functions/validators/domainValidator'\n\nexport const primaryDomain: IMemory = {\n  memoryIndex: 20038,\n  memoryMarker: `[[PRIMARYDOMAIN]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Web Domain`,\n  tooltip: `The domain name for your MEGADOCKER Mob (such as 'example.com' or 'myawesomemob.org')`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: domainValidator,\n}\n","/** @format */\n\n//  domainValidator.ts\n//  MEGADocker\n//  a validator function for domain names\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nexport const domainValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate || stringToValidate.length === 0) {\n    return false\n  }\n  const domainRegex: RegExp = /^(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/\n  const isValidated: boolean = domainRegex.test(stringToValidate) ? true : false\n  return isValidated\n}\n","/** @format */\n\n//  traefikServiceMite.ts\n//  MEGADocker\n//  Service Mite for Traefik\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\n// TODO: fix traefik authorization to use ldap\n\nconst hostnames: string[] = [`traefik`]\n\nexport const traefikServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30030,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Traefik Service Section\n\n traefik:\n  image: traefik\n  command:\n   - '--accesslog=true'\n   - '--api.dashboard=true'\n   - '--certificatesresolvers.cloudflarecerts.acme.email=[[LETSENCRYPTEMAIL]]'\n   - '--certificatesresolvers.cloudflarecerts.acme.storage=/acme.json'\n   - '--certificatesresolvers.cloudflarecerts.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'\n   - '--certificatesresolvers.cloudflarecerts.acme.dnschallenge=true'\n   - '--certificatesresolvers.cloudflarecerts.acme.dnschallenge.provider=cloudflare'\n   - '--certificatesresolvers.cloudflarecerts.acme.dnschallenge.resolvers=1.1.1.1:53, 1.0.0.1:53'\n   - '--entrypoints.plainhttp.address=:80'\n   - '--entrypoints.encryptedhttp.address=:443'\n   - '--log.level=DEBUG'\n   - '--log.format=json'\n   - '--accesslog=true'\n   - '--providers.docker.endpoint=unix:///var/run/docker.sock'\n   - '--providers.docker.exposedbydefault=false'\n   - '--providers.docker.network=[[MOBNAME]]_traefik'\n   - '--providers.docker.swarmmode=true'\n   - '--providers.docker.watch=true'\n  networks:\n   - traefik\n  ports:\n   - 80:80\n   - 443:443\n   - 8080:8080\n  volumes:\n   - \\${PWD}/logs/traefik:/var/log/traefik\n   - \\${PWD}/traefik/acme.json:/acme.json\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  environment:\n   - CF_DNS_API_TOKEN=[[CLOUDFLAREAPITOKEN]]\n   - CF_ZONE_API_TOKEN=[[CLOUDFLAREAPITOKEN]]\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.traefik.entrypoints=plainhttp'\n    - 'traefik.http.routers.traefik.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\") && (PathPrefix(\"/api\") || PathPrefix(\"/dashboard\"))'\n## TODO: integrate LDAP auth to get rid of this sloppiness\n##    - 'traefik.http.middlewares.traefik-auth.basicauth.users=[[TRAEFIKUSER]]:[[TRAEFIKPASSWORD]]'\n    - 'traefik.http.middlewares.traefik-auth.basicauth.users=traefikuser:$$apr1$$OG8S9BgU$$7BwcoMe3X.gpi.aRLljDd.'\n    - 'traefik.http.routers.traefik-https.middlewares=traefik-auth'\n    - 'traefik.http.middlewares.traefik-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.traefik.middlewares=traefik-force-secure'\n    - 'traefik.http.routers.traefik-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.traefik-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\") && (PathPrefix(\"/api\") || PathPrefix(\"/dashboard\"))'\n    - 'traefik.http.services.traefik.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.traefik-https.service=api@internal'\n    - 'traefik.http.routers.traefik-https.tls=true'\n    - 'traefik.http.routers.dashboard.tls.certresolver=cloudflarecerts'\n    - 'traefik.http.routers.dashboard.tls.domains[0].main=[[PRIMARYDOMAIN]]'\n    - 'traefik.http.routers.dashboard.tls.domains[0].sans=*.[[PRIMARYDOMAIN]]'\n    - 'com.MegaDocker.description=Traefik - a modern reverse-proxy for microservices environments.'\n   placement:\n    constraints:\n     - node.role == manager\n\n traefik-ssl-exporter:\n  image: ldez/traefik-certs-dumper:latest\n  networks:\n   - traefik\n  volumes:\n   - \\${PWD}/logs/traefik:/loglocation\n   - \\${PWD}/traefik/acme.json/:/acme.json\n   - \\${PWD}/traefik/ssl:/output\n  command: >\n   file\n   --watch\n   --version v2\n   --dest /output\n  deploy:\n   restart_policy:\n    condition: any\n \n# End Traefik Service Section\n\n`,\n}\n","export default __webpack_public_path__ + \"static/media/traefikIcon.c26ffd4d.png\";","/** @format */\n\n//  mobName.ts\n//  MEGADocker\n//  The variable for the Mob name\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { mobnameValidator } from '../../functions/validators/mobnameValidator'\n\nexport const mobName: IMemory = {\n  memoryIndex: 20026,\n  memoryMarker: `[[MOBNAME]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Mob Name`,\n  tooltip: `The name of your MEGADocker Mob (only using lowercase letters or numbers)`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: mobnameValidator,\n}\n","/** @format */\n\n//  mobnameValidator.ts\n//  MEGADocker\n//  a validator function that disallows whitespace, symbols, and lengths greath than 20\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nexport const mobnameValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate || stringToValidate.length === 0) {\n    return false\n  }\n  const noWhiteSpaceRegex: RegExp = new RegExp(`^[sa-z0-9]*$`)\n  const hasNoWhiteSpaceOrSymbols: boolean = noWhiteSpaceRegex.test(stringToValidate) ? true : false\n  const nameLengthRequirements: boolean = stringToValidate.length < 20 && stringToValidate.length > 4\n  const isValidated: boolean = hasNoWhiteSpaceOrSymbols && nameLengthRequirements\n  return isValidated\n}\n","/** @format */\n\n//  traefik.ts\n//  MEGADocker\n//  A Manikin to generate a Traefik reverse proxy service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { cloudflareAPIToken } from '../memories/cloudflareAPIToken'\nimport { letsEncryptEmail } from '../memories/letsEncryptEmail'\nimport { primaryDomain } from '../memories/primaryDomain'\nimport { traefikServiceMite } from '../mites/service/traefikServiceMite'\nimport { traefikNetworkMite } from '../mites/network/traefikNetworkMite'\nimport traefikIcon from '../../images/manikin-icons/traefikIcon.png'\nimport { mobName } from '../memories/mobName'\nimport { traefikLdifMite } from '../mites/ldif/traefikLdifMite'\n\n/**\n * traefik Manikin\n */\nexport const traefikManikin: IManikin = {\n  description: `Reverse Proxy`,\n  folder: `traefik`,\n  isCore: true,\n  isSelected: true,\n  manikinGroups: [`Core`, `Network`],\n  manikinIcon: traefikIcon,\n  manikinIndex: 10028,\n  memories: [mobName, letsEncryptEmail, cloudflareAPIToken, primaryDomain],\n  name: `Traefik`,\n  mites: [traefikLdifMite, traefikServiceMite, traefikNetworkMite],\n  ports: [],\n  subfolders: [`ssl`],\n}\n","/** @format */\n\n//  traefikLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Traefik\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const traefikLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50032,\n  miteString: `# Begin Traefik Section\n\ndn: ou=TraefikUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=TraefikAdmins,ou=TraefikUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=TraefikITAdmins,ou=TraefikAdmins,ou=TraefikUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=TraefikAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: TraefikAdmins\naliasedObjectName: ou=TraefikITAdmins,ou=TraefikAdmins,ou=TraefikUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Traefik LDIF Section`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for Traefik\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const traefikNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40027,\n  miteString: `\n\n# Begin Traefik Network Section\n\n traefik:\n  driver: overlay\n\n# End Traefik Network Section\n\n`,\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const ldapBootstrapMegaDockerDotLdifMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60007,\n  miteFile: {\n    path: `ldap/ldif-files`,\n    name: `51-bootstrap-megadocker`,\n    extension: `ldif`,\n    permissions: `644`,\n    contents: `# MegaDocker 51-bootstrap-megadocker.ldif file for [[MOBNAME]]\n# base domain name for ldap was automatically generated from [[PRIMARYDOMAIN]]\n\nversion: 1\n\n# Begin Customers Section\n    \ndn: ou=Customers,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Businesses,ou=Customers,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Domestic,ou=Businesses,ou=Customers,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=International,ou=Businesses,ou=Customers,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Individuals,ou=Customers,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Domestic,ou=Individuals,ou=Customers,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=International,ou=Individuals,ou=Customers,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n# End Customers Section\n\n# Begin Employees Section\n\ndn: ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Staff,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Managers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Executives,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n# End Employees Section\n\n# Begin Hardware Section\n\ndn: ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Batteries,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=AMD64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Desktops,ou=AMD64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Laptops,ou=AMD64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Servers,ou=AMD64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ARM64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Desktops,ou=ARM64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Laptops,ou=ARM64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Servers,ou=ARM64,ou=Linux,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=AMD64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Desktops,ou=AMD64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Laptops,ou=AMD64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Servers,ou=AMD64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ARM64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Desktops,ou=ARM64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Laptops,ou=ARM64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Servers,ou=ARM64,ou=MacOS,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=AMD64,ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Desktops,ou=AMD64ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Laptops,ou=AMD64ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Servers,ou=AMD64ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ARM64,ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Desktops,ou=ARM64,ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Laptops,ou=ARM64,ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Servers,ou=ARM64,ou=Windows,ou=Computers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=AndroidDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Phones,ou=AndroidDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Tablets,ou=AndroidDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Wearables,ou=AndroidDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=AppleDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Phones,ou=AppleDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Tablets,ou=AppleDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Wearables,ou=AppleDevices,ou=MobileDevices,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NetworkGear,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Firewalls,ou=NetworkGear,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Routers,ou=NetworkGear,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Switches,ou=NetworkGear,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WirelessAccessPoints,ou=NetworkGear,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Printers,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=VOIPPhones,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Cameras,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Doorbells,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Sensors,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=CarbonMonoxideDetectors,ou=Sensors,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DoorSensors,ou=Sensors,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GlassBreakSensors,ou=Sensors,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SmokeDetectors,ou=Sensors,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WindowSensors,ou=Sensors,ou=Security,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SettopBoxes,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=AppleTVs,ou=SettopBoxes,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=FireTVSticks,ou=SettopBoxes,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=Rokus,ou=SettopBoxes,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SmartTVs,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RokuTVs,ou=SmartTVs,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=FireTVs,ou=SmartTVs,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LGTVs,ou=SmartTVs,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SamsungTVs,ou=SmartTVs,ou=Hardware,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n# End Hardwware Section\n\n# Begin Users Section\n\ndn: ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=BotUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ExternalUsers,ou=BotUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=InternalUsers,ou=BotUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=HumanUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ExternalUsers,ou=HumanUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=InternalUsers,ou=HumanUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n# End Users Section\n\n# Begin Vendors Section\n\n# Vendors ou\ndn: ou=Vendors,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n## Domestic-Vendors\ndn: ou=Domestic,ou=Vendors,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n## International-Vendors\ndn: ou=International,ou=Vendors,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n# End Vendors Section\n\n\n`,\n  },\n}\n","/** @format */\n\nimport { IHeaderMite } from '../../../interfaces/IHeaderMite'\n\nexport const mobSecretsHeaderSectionString: IHeaderMite = {\n  type: `DockerSwarmHeader`,\n  miteIndex: 59999,\n  miteString: `\n\n# Begin Secrets Section\n\nsecrets:\n\n`,\n}\n","/** @format */\n\nimport { IHeaderMite } from '../../../interfaces/IHeaderMite'\n\nexport const mobSecretsFooterSectionString: IHeaderMite = {\n  type: `DockerSwarmHeader`,\n  miteIndex: 69999,\n  miteString: `\n\n# End Secrets Section\n\n`,\n}\n","/** @format */\n\n//  booksServiceMite.ts\n//  MEGADocker\n//  Service Mite for lazylibrarian\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`books`]\n\nexport const booksServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30000,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Books Service Section\n\n books:\n  image: linuxserver/lazylibrarian:latest\n  networks:\n   - books\n   - traefik\n  volumes:\n   - \\${PWD}/media/books-config:/config\n   - \\${PWD}/media/books-data:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.books.entrypoints=plainhttp'\n    - 'traefik.http.services.books.loadbalancer.server.port=5299'\n    - 'traefik.http.routers.books.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.books-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.books.middlewares=books-force-secure'\n    - 'traefik.http.routers.books.service=books'\n    - 'traefik.http.routers.books-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.books-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.books-https.service=books'\n    - 'traefik.http.routers.books-https.tls=true'\n    - 'traefik.http.services.books-https.loadbalancer.server.port=5299'\n    - 'com.MegaDocker.description=LazyLibrarian - a books search tool'\n\n# End Books Service Section \n\n`,\n}\n","/** @format */\n\n//  mediaRequestsServiceMite.ts\n//  MEGADocker\n//  Service Mite for ombi\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`requests`, `torrent`, `newsgroups`, `newsgroup-indexer`, `torrent-indexer`]\n\nexport const mediaRequestsServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30015,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Media Requests Service Sections\n\n requests:\n  image: linuxserver/ombi\n  volumes:\n   - \\${PWD}/media/requests-config:/config\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.requests.entrypoints=plainhttp'\n    - 'traefik.http.services.requests.loadbalancer.server.port=80'\n    - 'traefik.http.routers.requests.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.requests-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.requests.middlewares=requests-force-secure'\n    - 'traefik.http.routers.requests.service=requests'\n    - 'traefik.http.routers.requests-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.requests-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.requests-https.service=requests'\n    - 'traefik.http.routers.requests-https.tls=true'\n    - 'traefik.http.services.requests-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Ombi - media download request app'\n\n torrent-indexer:\n  image: linuxserver/jackett\n  volumes:\n   - \\${PWD}/media/torrent-indexer-config:/config\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.torrent-indexer.entrypoints=plainhttp'\n    - 'traefik.http.services.torrent-indexer.loadbalancer.server.port=9117'\n    - 'traefik.http.routers.torrent-indexer.rule=Host(\"${hostnames[4]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.torrent-indexer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.torrent-indexer.middlewares=torrent-indexer-force-secure'\n    - 'traefik.http.routers.torrent-indexer.service=torrent-indexer'\n    - 'traefik.http.routers.torrent-indexer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.torrent-indexer-https.rule=Host(\"${hostnames[4]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.torrent-indexer-https.service=torrent-indexer'\n    - 'traefik.http.routers.torrent-indexer-https.tls=true'\n    - 'traefik.http.services.torrent-indexer-https.loadbalancer.server.port=9117'\n    - 'com.MegaDocker.description=Jackett - torrent indexer'\n\n torrent:\n  image: linuxserver/qbittorrent\n  volumes:\n   - \\${PWD}/media/torrent-config:/config\n   - \\${PWD}/media/torrent-downloads:/downloads\n   - \\${PWD}/media/books-data:/media/books\n   - \\${PWD}/media/comics-data:/media/comics\n   - \\${PWD}/media/movies-data:/media/movies\n   - \\${PWD}/media/music-data:/media/music\n   - \\${PWD}/media/tv-data:/media/tv\n   - /Volumes/Drobo/Fileshare/plex:/plex\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n   - UMASK_SET=022\n   - WEBUI_PORT=8080\n   - TZ=$HOSTTIMEZONE\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  ports:\n   - 6881:6881\n   - 6881:6881/udp\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.torrent.entrypoints=plainhttp'\n    - 'traefik.http.services.torrent.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.torrent.rule=Host(\"${hostnames[1]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.torrent-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.torrent.middlewares=torrent-force-secure'\n    - 'traefik.http.routers.torrent.service=torrent'\n    - 'traefik.http.routers.torrent-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.torrent-https.rule=Host(\"${hostnames[1]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.torrent-https.service=torrent'\n    - 'traefik.http.routers.torrent-https.tls=true'\n    - 'traefik.http.services.torrent-https.loadbalancer.server.port=8080'\n    - 'com.MegaDocker.description=ruTorrent - torrent downloader'\n\n newsgroups:\n  image: linuxserver/nzbget\n  volumes:\n   - \\${PWD}/media/newsgroups-config:/config\n   - \\${PWD}/media/newsgroups-downloads:/media\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.newsgroups.entrypoints=plainhttp'\n    - 'traefik.http.services.newsgroups.loadbalancer.server.port=80'\n    - 'traefik.http.routers.newsgroups.rule=Host(\"${hostnames[2]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.newsgroups-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.newsgroups.middlewares=newsgroups-force-secure'\n    - 'traefik.http.routers.newsgroups.service=newsgroups'\n    - 'traefik.http.routers.newsgroups-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.newsgroups-https.rule=Host(\"${hostnames[2]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.newsgroups-https.service=newsgroups'\n    - 'traefik.http.routers.newsgroups-https.tls=true'\n    - 'traefik.http.services.newsgroups-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=NZBGet - newsgroups downloader'\n\n newsgroup-indexer:\n  image: linuxserver/hydra2\n  volumes:\n   - \\${PWD}/media/newsgroups-indexer-config:/config\n  networks:\n   - books\n   - comics\n   - movies\n   - music\n   - traefik\n   - tv\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.newsgroup-indexer.entrypoints=plainhttp'\n    - 'traefik.http.services.newsgroup-indexer.loadbalancer.server.port=80'\n    - 'traefik.http.routers.newsgroup-indexer.rule=Host(\"${hostnames[3]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.newsgroup-indexer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.newsgroup-indexer.middlewares=newsgroup-indexer-force-secure'\n    - 'traefik.http.routers.newsgroup-indexer.service=newsgroup-indexer'\n    - 'traefik.http.routers.newsgroup-indexer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.newsgroup-indexer-https.rule=Host(\"${hostnames[3]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.newsgroup-indexer-https.service=newsgroup-indexer'\n    - 'traefik.http.routers.newsgroup-indexer-https.tls=true'\n    - 'traefik.http.services.newsgroup-indexer-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=NZBGet - newsgroup indexer'\n\n# End Media Requests Service Section\n\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for OwnCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const booksNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40001,\n  miteString: `\n\n# Begin Books Network Section\n\n books:\n  driver: overlay\n\n# End Books Network Section\n\n`,\n}\n","/** @format */\n\n//  plexServiceMite.ts\n//  MEGADocker\n//  Service Mite for Plex Media Server\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`plex`]\n\nexport const plexServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30024,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Plex Service Section\n\n plex:\n  image: plexinc/pms-docker\n  networks:\n   - traefik\n  ports:\n   - 32469:32469\n   - 32400:32400\n   - 32401:32401\n   - 3005:3005\n   - 8324:8324\n   - 1900:1900/udp\n   - 32410:32410/udp\n   - 32412:32412/udp\n   - 32413:32413/udp\n   - 32414:32414/udp\n  volumes:\n   - \\${PWD}/media/plex-config:/config\n   - \\${PWD}/media/content\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.plex.entrypoints=plainhttp'\n    - 'traefik.http.services.plex.loadbalancer.server.port=32400'\n    - 'traefik.http.routers.plex.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.plex-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.plex.middlewares=plex-force-secure'\n    - 'traefik.http.routers.plex.service=plex'\n    - 'traefik.http.routers.plex-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.plex-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.plex-https.service=plex'\n    - 'traefik.http.routers.plex-https.tls=true'\n    - 'traefik.http.services.plex-https.loadbalancer.server.port=32400'\n    - 'com.MegaDocker.description=Plex - media streaming server'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End Plex Service Section\n\n`,\n}\n","/** @format */\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const plexNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40022,\n  miteString: `\n\n# Begin Plex Network Section\n\n plex:\n  driver: overlay\n\n# End Plex Network Section\n\n`,\n}\n","export default __webpack_public_path__ + \"static/media/booksIcon.1192fd50.png\";","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for OwnCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const comicsNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40002,\n  miteString: `\n\n# Begin Comics Network Section\n\n comics:\n  driver: overlay\n\n# End Comics Network Section\n\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for OwnCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const moviesNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40014,\n  miteString: `\n\n# Begin Movies Network Section\n\n movies:\n  driver: overlay\n\n# End Movies Network Section\n\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for OwnCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const musicNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40015,\n  miteString: `\n\n# Begin Music Network Section\n\n music:\n  driver: overlay\n\n# End Music Network Section\n\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for OwnCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const tvNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40028,\n  miteString: `\n\n# Begin TV Network Section\n\n tv:\n  driver: overlay\n\n# End TV Network Section\n\n`,\n}\n","/** @format */\n\n//  plexLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Plex\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const plexLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50026,\n  miteString: `# Begin PlexMediaServer Section\n\ndn: ou=PlexMediaServerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PlexMediaServerAdmins,ou=PlexMediaServerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PlexMediaServerModerators,ou=PlexMediaServerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PlexMediaServerAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: PlexMediaServerAdmins\naliasedObjectName: ou=PlexMediaServerITAdmins,ou=PlexMediaServerAdmins,ou=PlexMediaServerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=PlexMediaServerModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: PlexMediaServerModerators\naliasedObjectName: ou=PlexMediaServerITModerators,ou=PlexMediaServerModerators,ou=PlexMediaServerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End PlexMediaServer Section\n`,\n}\n","/** @format */\n\n//  mediarequestsLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for ombi\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const mediarequestsLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50017,\n  miteString: `# Begin Ombi Section\n\ndn: ou=OmbiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=OmbiAdmins,ou=OmbiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=OmbiModerators,ou=OmbiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=OmbiAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: OmbiAdmins\naliasedObjectName: ou=OmbiITAdmins,ou=OmbiAdmins,ou=OmbiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=OmbiModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: OmbiModerators\naliasedObjectName: ou=OmbiITModerators,ou=OmbiModerators,ou=OmbiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Ombi Section\n`,\n}\n","/** @format */\n\n//  books.ts\n//  MEGADocker\n//  A Manikin to create an e-book library\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { booksServiceMite } from '../mites/service/booksServiceMite'\nimport { mediaRequestsServiceMite } from '../mites/service/mediaRequestsServiceMite'\nimport { booksNetworkMite } from '../mites/network/booksNetworkMite'\nimport { plexServiceMite } from '../mites/service/plexServiceMite'\nimport { plexNetworkMite } from '../mites/network/plexNetworkMite'\nimport booksIcon from '../../images/manikin-icons/booksIcon.png'\nimport { comicsNetworkMite } from '../mites/network/comicsNetworkMite'\nimport { moviesNetworkMite } from '../mites/network/moviesNetworkMite'\nimport { musicNetworkMite } from '../mites/network/musicNetworkMite'\nimport { tvNetworkMite } from '../mites/network/tvNetworkMite'\nimport { booksLdifMite } from '../mites/ldif/booksLdifMite'\nimport { plexLdifMite } from '../mites/ldif/plexLdifMite'\nimport { mediarequestsLdifMite } from '../mites/ldif/mediarequestsLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const booksManikin: IManikin = {\n  description: `Automatic Books Downloader`,\n  folder: `media`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`],\n  manikinIcon: booksIcon,\n  manikinIndex: 10000,\n  memories: [],\n  mites: [\n    booksLdifMite,\n    mediarequestsLdifMite,\n    plexLdifMite,\n    booksServiceMite,\n    mediaRequestsServiceMite,\n    plexServiceMite,\n    booksNetworkMite,\n    comicsNetworkMite,\n    moviesNetworkMite,\n    musicNetworkMite,\n    tvNetworkMite,\n    plexNetworkMite,\n  ],\n  name: `Books`,\n  ports: [],\n  subfolders: [`books-config`, `content`, `newsgroups-config`, `newsgroup-indexer-config`, `plex-config`, `requests-config`, `torrent-config`, `torrent-indexer-config`],\n}\n","/** @format */\n\n//  booksLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for LazyLibrarian\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const booksLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50000,\n  miteString: `# Begin LazyLibrarian Section\n\ndn: ou=LazyLibrarianUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LazyLibrarianAdmins,ou=LazyLibrarianUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LazyLibrarianModerators,ou=LazyLibrarianUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\n# End LazyLibrarian Section\n`,\n}\n","/** @format */\n\n//  comicsServiceMite.ts\n//  MEGADocker\n//  Service Mite for mylar\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`comics`]\n\nexport const comicsServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30001,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Comics Service Section\n\n comics:\n  image: linuxserver/mylar:latest\n  networks:\n   - comics\n   - traefik\n  volumes:\n   - \\${PWD}/media/comics-config:/config\n   - \\${PWD}/media/comics-data:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.comics.entrypoints=plainhttp'\n    - 'traefik.http.services.comics.loadbalancer.server.port=8090'\n    - 'traefik.http.routers.comics.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.comics-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.comics.middlewares=comics-force-secure'\n    - 'traefik.http.routers.comics.service=comics'\n    - 'traefik.http.routers.comics-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.comics-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.comics-https.service=comics'\n    - 'traefik.http.routers.comics-https.tls=true'\n    - 'traefik.http.services.comics-https.loadbalancer.server.port=8090'\n    - 'com.MegaDocker.description=Mylar - a comics search tool'\n\n# End Comics Service Section\n\n`,\n}\n","export default __webpack_public_path__ + \"static/media/comicsIcon.5c388675.png\";","/** @format */\n\n//  pihole.ts\n//  MEGADocker\n//  A Manikin to generate a pihole DNS adblocker service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { comicsServiceMite } from '../mites/service/comicsServiceMite'\nimport { mediaRequestsServiceMite } from '../mites/service/mediaRequestsServiceMite'\nimport { comicsNetworkMite } from '../mites/network/comicsNetworkMite'\nimport { plexServiceMite } from '../mites/service/plexServiceMite'\nimport { plexNetworkMite } from '../mites/network/plexNetworkMite'\nimport comicsIcon from '../../images/manikin-icons/comicsIcon.png'\nimport { booksNetworkMite } from '../mites/network/booksNetworkMite'\nimport { moviesNetworkMite } from '../mites/network/moviesNetworkMite'\nimport { musicNetworkMite } from '../mites/network/musicNetworkMite'\nimport { tvNetworkMite } from '../mites/network/tvNetworkMite'\nimport { comicsLdifMite } from '../mites/ldif/comicsLdifMite'\nimport { plexLdifMite } from '../mites/ldif/plexLdifMite'\nimport { mediarequestsLdifMite } from '../mites/ldif/mediarequestsLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const comicsManikin: IManikin = {\n  description: `Automatic Comics Downloader`,\n  folder: `media`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`],\n  manikinIcon: comicsIcon,\n  manikinIndex: 10001,\n  memories: [],\n  mites: [\n    comicsLdifMite,\n    plexLdifMite,\n    mediarequestsLdifMite,\n    comicsServiceMite,\n    mediaRequestsServiceMite,\n    plexServiceMite,\n    booksNetworkMite,\n    comicsNetworkMite,\n    moviesNetworkMite,\n    musicNetworkMite,\n    tvNetworkMite,\n    plexNetworkMite,\n  ],\n  name: `Comics`,\n  ports: [],\n  subfolders: [`comics-config`, `content`, `newsgroups-config`, `newsgroup-indexer-config`, `plex-config`, `requests-config`, `torrent-config`, `torrent-indexer-config`],\n}\n","/** @format */\n\n//  comicsLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Mylar\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const comicsLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50001,\n  miteString: `# Begin Mylar Section\n\ndn: ou=MylarUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=MylarAdmins,ou=MylarUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=MylarAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: PortainerAdmins\naliasedObjectName: ou=MylarITAdmins,ou=MylarAdmins,ou=MylarUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Mylar Section\n`,\n}\n","/** @format */\n\n//  duplicatiServiceMite.ts\n//  MEGADocker\n//  Service Mite for duplicati\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`backup`]\n\nexport const duplicatiServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30003,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Backup Service Section\n\n backup:\n  image: georgegeorgulasiv/duplicati\n  networks:\n   - traefik\n  environment:\n   - TZ=$HOSTTIMEZONE\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  volumes:\n   - \\${PWD}/:/source\n   - \\${PWD}/backups/data/:/backups\n   - \\${PWD}/backups/Duplicati/:/data/Duplicati\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.backup.entrypoints=plainhttp'\n    - 'traefik.http.services.backup.loadbalancer.server.port=8200'\n    - 'traefik.http.routers.backup.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.backup-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.backup.middlewares=backup-force-secure'\n    - 'traefik.http.routers.backup.service=backup'\n    - 'traefik.http.routers.backup-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.backup-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.backup-https.service=backup'\n    - 'traefik.http.routers.backup-https.tls=true'\n    - 'traefik.http.services.backup-interface-https.loadbalancer.server.port=8200'\n    - 'com.MegaDocker.description=Duplicati - automated incremental backup and restore with web interface'\n\n# End Backup Service Section\n\n`,\n}\n","export default __webpack_public_path__ + \"static/media/duplicatiIcon.52b8b782.png\";","/** @format */\n\n//  drupal.ts\n//  MEGADocker\n//  A Manikin to generate a Drupal blogging service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { duplicatiServiceMite } from '../mites/service/duplicatiServiceMite'\nimport duplicatiIcon from '../../images/manikin-icons/duplicatiIcon.png'\nimport { duplicatiLdifMite } from '../mites/ldif/duplicatiLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const duplicatiManikin: IManikin = {\n  description: `Incremental Backup`,\n  folder: `duplicati`,\n  isCore: true,\n  isSelected: true,\n  manikinGroups: [`Core`, `Utility`],\n  manikinIcon: duplicatiIcon,\n  manikinIndex: 10003,\n  memories: [],\n  mites: [duplicatiLdifMite, duplicatiServiceMite],\n  name: `Duplicati`,\n  ports: [],\n  subfolders: [`data`, `Duplicati`],\n}\n","/** @format */\n\n//  duplicatiLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for duplicati\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const duplicatiLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50003,\n  miteString: `# Begin Duplicati Section\n\ndn: ou=DuplicatiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DuplicatiAdmins,ou=DuplicatiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DuplicatiModerators,ou=DuplicatiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DuplicatiAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: DuplicatiAdmins\naliasedObjectName: ou=DuplicatiITAdmins,ou=DuplicatiAdmins,ou=DuplicatiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=DuplicatiModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: DuplicatiModerators\naliasedObjectName: ou=DuplicatiITModerators,ou=DuplicatiModerators,ou=DuplicatiUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Duplicati Section\n`,\n}\n","/** @format */\n\n//  drupalServiceMite.ts\n//  MEGADocker\n//  Service Mite for Drupal\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`drupal`]\n\nexport const drupalServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30002,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Drupal Service Section\n\n drupal:\n  image: drupal:8.9.13-php7.4-fpm-alpine\n  networks:\n   - ldap\n   - traefik\n   - drupal\n  environment:\n   - SERVER_NAME=drupal.[[PRIMARYDOMAIN]]\n   - DRUPAL_PROFILE=standard\n   - DRUPAL_SITE_NAME=Drupal\n   - DRUPAL_USER=[[DRUPALPOSTGRESUSER]]\n   - DRUPAL_PASS=[[DRUPALPOSTGRESPASSWORD]]\n   - DRUPAL_DBURL=postgres://drupal:drupaluser@[[MOBNAME]]_drupal-postgres:5432/drupaldb\n  volumes:\n   - \\${PWD}/logs/drupal:/loglocation\n   - \\${PWD}/drupal/modules:/var/www/html/modules\n   - \\${PWD}/drupal/profiles:/var/www/html/profiles\n   - \\${PWD}/drupal/themes:/var/www/html/themes\n   - \\${PWD}/drupal/sites:/var/www/html/sites\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.drupal.entrypoints=plainhttp'\n    - 'traefik.http.services.drupal.loadbalancer.server.port=80'\n    - 'traefik.http.routers.drupal.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.drupal-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.drupal.middlewares=drupal-force-secure'\n    - 'traefik.http.routers.drupal.service=drupal'\n    - 'traefik.http.routers.drupal-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.drupal-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.drupal-https.service=drupal'\n    - 'traefik.http.routers.drupal-https.tls=true'\n    - 'traefik.http.services.drupal-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=drupal-Drupal blogging software'\n   placement:\n    constraints:\n     - node.role == manager\n\n\n drupal-postgres:\n  image: postgres\n  networks:\n   - drupal\n  volumes:\n   - \\${PWD}/logs/drupal:/loglocation\n   - \\${PWD}/drupal/database:/var/lib/postgresql/data\n  environment:\n   - POSTGRES_DB=drupaldb\n   - POSTGRES_USER=[[DRUPALPOSTGRESUSER]]\n   - POSTGRES_PASSWORD=[[DRUPALPOSTGRESPASSWORD]]\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n\n# End Drupal Service Section\n\n`,\n}\n","export default __webpack_public_path__ + \"static/media/drupalIcon.a26cf1fc.png\";","/** @format */\n\n//  noWhitespaceOrSymbolsValidator.ts\n//  MEGADocker\n//  a validator function that disallows whitespace and symbols\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { noWhitespaceValidator } from './noWhitespaceValidator'\n\nexport const noWhitespaceOrSymbolsValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate) {\n    return false\n  }\n  const hasNoWhitespace: boolean = noWhitespaceValidator(stringToValidate)\n  const noWhiteSpaceOrSymbolsRegex: RegExp = new RegExp(`^[sa-zA-Z0-9]*$`)\n  const hasNoWhiteSpaceOrSymbols: boolean = noWhiteSpaceOrSymbolsRegex.test(stringToValidate) ? true : false\n  const nameLengthRequirements: boolean = stringToValidate.length < 21 && stringToValidate.length > 4\n  const isValidated: boolean = hasNoWhiteSpaceOrSymbols && nameLengthRequirements && hasNoWhitespace\n  return isValidated\n}\n","/** @format */\n\n//  noWhitespaceValidator.ts\n//  MEGADocker\n//  a validator function that disallows whitespace\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nexport const noWhitespaceValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate) {\n    return false\n  }\n  const spacesDetected: boolean = stringToValidate.includes(`\\u0020`)\n  const tabsDetected: boolean = stringToValidate.includes(`\\u0009`)\n  const lineFeedsDetected: boolean = stringToValidate.includes(`\\u000A`)\n  const formFeedsDetected: boolean = stringToValidate.includes(`\\u000C`)\n  if (spacesDetected) {\n    return false\n  }\n  if (tabsDetected) {\n    return false\n  }\n  if (lineFeedsDetected) {\n    return false\n  }\n  if (formFeedsDetected) {\n    return false\n  }\n  const whiteSpaceDetected: boolean = spacesDetected || tabsDetected || lineFeedsDetected || formFeedsDetected\n  const isValidated: boolean = !whiteSpaceDetected\n  return isValidated\n}\n","/** @format */\n\n//  drupalPostgresUser.ts\n//  MEGADocker\n//  The variable for Drupal's Postgres username\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const drupalPostgresUser: IMemory = {\n  memoryIndex: 20007,\n  memoryMarker: `[[DRUPALPOSTGRESUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Drupal Postgres User`,\n  tooltip: `The Drupal Postgres user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  passwordValidator.ts\n//  MEGADocker\n//  a validator function for passwords\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nexport const passwordValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate || stringToValidate.length === 0) {\n    return false\n  }\n  const passwordRegex: RegExp = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})')\n  const passesRegex: boolean = passwordRegex.test(stringToValidate) ? true : false\n  const isAtLeast8Characters: boolean = stringToValidate.length > 7\n  const isValidated: boolean = passesRegex && isAtLeast8Characters\n  return isValidated\n}\n","/** @format */\n\n//  drupalPostgresPassword.ts\n//  MEGADocker\n//  The variable for\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const drupalPostgresPassword: IMemory = {\n  memoryIndex: 20006,\n  memoryMarker: `[[DRUPALPOSTGRESPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Drupal Postgres Password`,\n  tooltip: `The password for Drupal to connect to it's PostgreSQL database.`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for LDAP\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const ldapNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40011,\n  miteString: `\n\n# Begin LDAP Network Section\n\n ldap:\n  driver: overlay\n\n# End LDAP Network Section\n\n`,\n}\n","/** @format */\n\n//  drupal.ts\n//  MEGADocker\n//  A Manikin to generate a Drupal blogging service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { drupalServiceMite } from '../mites/service/drupalServiceMite'\nimport { drupalNetworkMite } from '../mites/network/drupalNetworkMite'\nimport drupalIcon from '../../images/manikin-icons/drupalIcon.png'\nimport { drupalPostgresUser } from '../memories/drupalPostgresUser'\nimport { drupalPostgresPassword } from '../memories/drupalPostgresPassword'\nimport { ldapNetworkMite } from '../mites/network/ldapNetworkMite'\nimport { drupalLdifMite } from '../mites/ldif/drupalLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const drupalManikin: IManikin = {\n  description: `Drupal Blog`,\n  folder: `drupal`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`, `Development`],\n  manikinIcon: drupalIcon,\n  manikinIndex: 10002,\n  memories: [drupalPostgresUser, drupalPostgresPassword],\n  mites: [drupalLdifMite, drupalServiceMite, drupalNetworkMite, ldapNetworkMite],\n  name: `Drupal`,\n  ports: [],\n  subfolders: [`modules`, `profiles`, `themes`, `sites`, `database`],\n}\n","/** @format */\n\n//  drupalLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Drupal\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const drupalLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50002,\n  miteString: `# Begin Drupal Section\n\ndn: ou=DrupalUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DrupalAdmins,ou=DrupalUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DrupalModerators,ou=DrupalUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DrupalITAdmins,ou=DrupalAdmins,ou=DrupalUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DrupalITModerators,ou=DrupalModerators,ou=DrupalUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=DrupalAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: DrupalAdmins\naliasedObjectName: ou=DrupalITAdmins,ou=DrupalAdmins,ou=DrupalUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=DrupalModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: DrupalModerators\naliasedObjectName: ou=DrupalITModerators,ou=DrupalModerators,ou=DrupalUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n\n# End Drupal Section\n`,\n}\n","/** @format */\n\n//  drupalNetworkMite.ts\n//  MEGADocker\n//  Network Mite for Drupal\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const drupalNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40003,\n  miteString: `\n\n# Begin Drupal Network Section\n\n drupal:\n  driver: overlay\n\n# End Drupal Network Section\n\n  `,\n}\n","/** @format */\n\n//  elkServiceMite.ts\n//  MEGADocker\n//  Service Mite for Elk\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`kibana`]\n\nexport const elkServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30004,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin ELK Service Section\n \n elasticsearch:\n  image: elastic/elasticsearch:7.12.0\n  environment:\n   - bootstrap.memory_lock=true\n   - cluster.name=\"[[MOBNAME]]-docker-cluster\"\n   - discovery.type=single-node\n   - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'\n   - ES_PATH_CONF=/usr/share/elasticsearch/configs\n   - network.host=0.0.0.0\n   - path.data=/usr/share/elasticsearch/data\n   - path.logs=/usr/share/elasticsearch/logs\n  networks:\n   - elk\n  volumes:\n   - \\${PWD}/logs/elk-elasticsearch:/loglocation\n   - \\${PWD}/elk/elasticsearch-config:/usr/share/elasticsearch/configs\n   - \\${PWD}/elk/elasticsearch-data:/usr/share/elasticsearch/data\n   - \\${PWD}/elk/logfiles:/usr/share/elasticsearch/logs\n\n filebeat:\n  image: elastic/filebeat:7.12.0\n  command: filebeat run --modules traefik\n  environment:\n   - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'\n   - ES_PATH_CONF=/usr/share/elasticsearch/configs\n   - bootstrap.memory_lock=true\n   - discovery.type=single-node\n  networks:\n   - elk\n  volumes:\n  - ./logs/elk-filebeats:/loglocation\n  - ./elk/filebeat-config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro\n  - ./elk/filebeat-modules:/usr/share/filebeat/modules.d\n  - /var/lib/docker/containers:/var/lib/docker/containers:ro\n  - /var/run/docker.sock:/var/run/docker.sock\n\n kibana:\n  image: elastic/kibana:7.12.0\n  networks:\n   - traefik\n   - elk\n  environment:\n   - SERVER_NAME=[[MOBNAME]]_elasticsearch:9200\n  volumes:\n   - \\${PWD}/logs/elk-kibana:/loglocation\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.kibana.entrypoints=plainhttp'\n    - 'traefik.http.services.kibana.loadbalancer.server.port=5601'\n    - 'traefik.http.routers.kibana.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.kibana-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.kibana.middlewares=kibana-force-secure'\n    - 'traefik.http.routers.kibana.service=kibana'\n    - 'traefik.http.routers.kibana-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.kibana-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.kibana-https.service=kibana'\n    - 'traefik.http.routers.kibana-https.tls=true'\n    - 'traefik.http.services.kibana-https.loadbalancer.server.port=5601'\n    - 'com.MegaDocker.description=Kibana data visualization dashboard'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End ELK Service Section\n\n`,\n}\n","export default __webpack_public_path__ + \"static/media/elkIcon.8a51351e.png\";","/** @format */\n\n//  ghostRootMariaDBPassword.ts\n//  MEGADocker\n//  The variable for Ghost's MariaDB root user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const kibanaUser: IMemory = {\n  memoryIndex: 20017,\n  memoryMarker: `[[KIBANAUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Kibana User`,\n  tooltip: `The Kibana user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  ldapAdminPassword.ts\n//  MEGADocker\n//  The variable for the LDAP administrative user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const kibanaPassword: IMemory = {\n  memoryIndex: 20016,\n  memoryMarker: `[[KIBANAPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Kibana Password`,\n  tooltip: `The Kibana user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  elk.ts\n//  MEGADocker\n//  A Manikin to generate a ELK monitoring service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { elkServiceMite } from '../mites/service/elkServiceMite'\nimport { elkNetworkMite } from '../mites/network/elkNetworkMite'\nimport { kibanaDotYmlMite } from '../mites/custom/kibanaDotYmlMite'\nimport elkIcon from '../../images/manikin-icons/elkIcon.png'\nimport { kibanaUser } from '../memories/kibanaUser'\nimport { kibanaPassword } from '../memories/kibanaPassword'\nimport { elasticsearchDotYmlMite } from '../mites/custom/elasticsearchDotYmlMite'\nimport { elasticsearchJvmDotOptionsMite } from '../mites/custom/elasticsearchJvmDotOptionsMite'\nimport { elasticsearchLog4j2DotPropertiesMite } from '../mites/custom/elasticsearchLog4j2DotPropertiesMite'\nimport { filebeatDotYmlMite } from '../mites/custom/filebeatDotYmlMite'\nimport { elasticsearchLdifMite } from '../mites/ldif/elasticsearchLdifMite'\nimport { logstashLdifMite } from '../mites/ldif/logstashLdifMite'\nimport { kibanaLdifMite } from '../mites/ldif/kibanaLdifMite'\n\n/**\n * elk Manikin\n */\nexport const elkManikin: IManikin = {\n  description: `Log Monitoring`,\n  folder: `elk`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Monitoring`],\n  manikinIcon: elkIcon,\n  manikinIndex: 10004,\n  memories: [kibanaUser, kibanaPassword],\n  mites: [\n    elasticsearchLdifMite,\n    logstashLdifMite,\n    kibanaLdifMite,\n    elkServiceMite,\n    elkNetworkMite,\n    kibanaDotYmlMite,\n    elasticsearchDotYmlMite,\n    elasticsearchJvmDotOptionsMite,\n    elasticsearchLog4j2DotPropertiesMite,\n    filebeatDotYmlMite,\n  ],\n  name: `ELK`,\n  ports: [],\n  subfolders: [`elasticsearch-config`, `elasticsearch-data`, `filebeat-config`, `filebeat-modules`, `kibana-config`, `logfiles`],\n}\n","/** @format */\n\n//  elasticsearchLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Elasticsearch\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const elasticsearchLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50004,\n  miteString: `# Begin Elasticsearch Section\n\ndn: ou=ElasticsearchUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ElasticsearchAdmins,ou=ElasticsearchUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ElasticsearchModerators,ou=ElasticsearchUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ElasticsearchAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: ElasticsearchAdmins\naliasedObjectName: ou=ElasticsearchITAdmins,ou=ElasticsearchAdmins,ou=ElasticsearchUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=ElasticsearchModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: ElasticsearchModerators\naliasedObjectName: ou=ElasticsearchITModerators,ou=ElasticsearchModerators,ou=ElasticsearchUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Elasticsearch Section\n`,\n}\n","/** @format */\n\n//  logstashLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Logstash\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const logstashLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50015,\n  miteString: `# Begin Logstash Section\n\ndn: ou=LogstashUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LogstashAdmins,ou=LogstashUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LogstashModerators,ou=LogstashUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LogstashAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LogstashAdmins\naliasedObjectName: ou=LogstashITAdmins,ou=LogstashAdmins,ou=LogstashUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=LogstashModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LogstashModerators\naliasedObjectName: ou=LogstashITModerators,ou=LogstashModerators,ou=LogstashUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Logstash Section\n`,\n}\n","/** @format */\n\n//  kibanaLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Kibana\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const kibanaLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50012,\n  miteString: `# Begin Kibana Section\n\ndn: ou=KibanaUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KibanaAdmins,ou=KibanaUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KibanaITAdmins,ou=KibanaAdmins,ou=KibanaUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KibanaAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: KibanaAdmins\naliasedObjectName: ou=KibanaITAdmins,ou=KibanaAdmins,ou=KibanaUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Kibana Section\n\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for ELK\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const elkNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40004,\n  miteString: `\n\n# Begin ELK Network Section\n\n elk:\n  driver: overlay\n\n# End ELK Network Section\n\n`,\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const kibanaDotYmlMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60006,\n  miteFile: {\n    path: `elk/kibana-config`,\n    name: `kibana`,\n    extension: `yml`,\n    permissions: `644`,\n    contents: `# MegaDocker kibana configuration file for [[MOBNAME]]\nserver.port: 80\nxpack.reporting.kibanaServer.hostname: 0.0.0.0\nserver.rewriteBasePath: false\nserver.name: \"kibana.[[PRIMARYDOMAIN]]\"\nelasticsearch.hosts: [\"http://[[MOBNAME]]_elasticsearch:9200\"]\nkibana.index: \".kibana\"\nelasticsearch.username: \"[[KIBANAUSER]]\"\nelasticsearch.password: \"[[KIBANAPASSWORD]]\"\nserver.ssl.enabled: true\nserver.ssl.certificate: /ssl/[[PRIMARYDOMAIN]].crt\nserver.ssl.key: /ssl/[[PRIMARYDOMAIN]].key\nlogging.verbose: true\nelasticsearch.logQueries: true\nlogging.dest: stdout\nlogging.json: true\ni18n.locale: \"en\"\n`,\n  },\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const elasticsearchDotYmlMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60001,\n  miteFile: {\n    path: `elk/elasticsearch-config`,\n    name: `elasticsearch`,\n    extension: `yml`,\n    permissions: `644`,\n    contents: `# MegaDocker elasticsearch.yml file for [[MOBNAME]]\ncluster.name: \"[[MOBNAME]]-docker-cluster\"\nnetwork.host: 0.0.0.0\npath.data: /usr/share/elasticsearch/data\npath.logs: /usr/share/elasticsearch/logs\n    `,\n  },\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const elasticsearchJvmDotOptionsMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60002,\n  miteFile: {\n    path: `elk/elasticsearch-config`,\n    name: `jvm`,\n    extension: `options`,\n    permissions: `644`,\n    contents: `\n\n\n\n\n\n\n\n\n\n\n\n\n\n`,\n  },\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const elasticsearchLog4j2DotPropertiesMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60003,\n  miteFile: {\n    path: `elk/elasticsearch-config`,\n    name: `log4j2`,\n    extension: `properties`,\n    permissions: `644`,\n    contents: `\n\n\n\n\n\n\n\n\n\n\n`,\n  },\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const filebeatDotYmlMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60004,\n  miteFile: {\n    path: `elk/filebeat-config`,\n    name: `filebeat`,\n    extension: `yml`,\n    permissions: `600`,\n    contents: `# MegaDocker filebeat.yml configuration file\nfilebeat.config.modules.path: /usr/share/filebeat/modules.d/*.yml\nfilebeat.config.reload.enabled: false\n\nprocessors.add_docker_metadata. host: \"unix:///var/run/docker.sock\"\n\ndecode_json_fields.fields: [\"message\"]\ndecode_json_fields.target: \"json\"\ndecode_json_fields.overwrite_keys: true\n\noutput.elasticsearch.hosts: [\"[[MOBNAME]]_elasticsearch:9200\"]\noutput.elasticsearch.username: \"[[KIBANAUSER]]\"\noutput.elasticsearch.password: \"[[KIBANAPASSWORD]]\"\noutput.elasticsearch.indices:\n - index: \"filebeat-%{[agent.version]}-%{+yyyy.MM.dd}\"\n\nsetup.kibana.host: \"[[MOBNAME]]_kibana:5601\"\nsetup.kibana.protocol: \"http\"\n\nlogging.json: true\nlogging.metrics.enabled: false\n`,\n  },\n}\n\n// TODO: add modules to config\n// filebeat.modules:\n// - module: apache\n//   access:\n//     var.paths: [\"/logfiles\"]\n// - module: elasticsearch\n//   access:\n//     var.paths: [\"/logfiles/elk\"]\n// - module: kibana\n//   access:\n//     var.paths: [\"/logfiles/elk\"]\n// - module: logstash\n//   access:\n//     var.paths: [\"/logfiles/elk\"]\n// - module: mongodb\n//   access:\n//     var.paths: [\"/logfiles\"]\n// - module: mysql\n//   access:\n//     var.paths: [\"/logfiles\"]\n// - module: nginx\n//   access:\n//     var.paths: [\"/logfiles/nginx\"]\n// - module: redis\n//   access:\n//     var.paths: [\"/logfiles\"]\n// - module: traefik\n//   access:\n//     var.paths: [\"/logfiles/traefik\"]\n","/** @format */\n\n//  emailServiceMite.ts\n//  MEGADocker\n//  Service Mite for email server\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`webmail`, `mail`]\n\nexport const emailServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30005,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin MailServer section\n\n mailserver:\n  image: tvial/docker-mailserver\n  ports:\n   - 25:25\n   - 587:587\n   - 993:993\n  volumes:\n   - \\${PWD}/logs/email:/loglocation\n   - \\${PWD}/email/maildata:/var/mail\n   - \\${PWD}/email/mailstate:/var/mail-state\n   - \\${PWD}/email/config:/tmp/docker-mailserver\n## TODO: mount certs correctly\n#   - \\${PWD}/traefik/ssl/certs:/certs:ro\n#   - \\${PWD}/traefik/ssl/pem/*.[[PRIMARYDOMAIN]].pem:/etc/letsencrypt/live/*.[[PRIMARYDOMAIN]]/*.[[PRIMARYDOMAIN]].pem:ro\n#   - \\${PWD}/traefik/ssl/private/*.[[PRIMARYDOMAIN]].key:/etc/letsencrypt/live/*.[[PRIMARYDOMAIN]]/*.[[PRIMARYDOMAIN]]/key:ro\n#   - \\${PWD}/traefik/ssl/private/letsencrypt.key:/etc/letsencrypt/live/*.[[PRIMARYDOMAIN]]/letsencrypt.key:ro\n   - \\${PWD}/traefik/ssl:/etc/letsencrypt:ro\n  environment:\n   - ENABLE_SPAMASSASSIN=1\n   - ENABLE_CLAMAV=1\n   - ENABLE_POSTGREY=0\n   - ONE_DIR=1\n   - DOMAIN=[[PRIMARYDOMAIN]]\n## TODO: add MX hosts option to ITraefikedServiceMite\n## TODO: add zipDockerSwarm function to generate MX record in dnssetup.sh\n   - OVERRIDE_HOSTNAME=${hostnames[1]}.[[PRIMARYDOMAIN]]\n   - OVERRIDE_DOMAINNAME=${hostnames[1]}.[[PRIMARYDOMAIN]]\n   - POSTMASTER_ADDRESS=postmaster@[[PRIMARYDOMAIN]]\n   - PERMIT_DOCKER=network\n   - SSL_TYPE=manual\n   - SSL_CERT_PATH=/etc/letsencrypt/certs/[[PRIMARYDOMAIN]].crt\n   - SSL_KEY_PATH=/etc/letsencrypt/private/[[PRIMARYDOMAIN]].key\n  networks:\n   - email\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n\n rainloop:\n  image: hardware/rainloop\n  networks:\n   - email\n   - traefik\n  volumes:\n   - \\${PWD}/logs/email:/loglocation\n   - \\${PWD}/email/rainloop:/rainloop/data\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.rainloop.entrypoints=plainhttp'\n    - 'traefik.http.services.rainloop.loadbalancer.server.port=80'\n    - 'traefik.http.routers.rainloop.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.rainloop-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.rainloop.middlewares=rainloop-force-secure'\n    - 'traefik.http.routers.rainloop.service=rainloop'\n    - 'traefik.http.routers.rainloop-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.rainloop-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.rainloop-https.service=rainloop'\n    - 'traefik.http.routers.rainloop-https.tls=true'\n    - 'traefik.http.services.rainloop-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Rainloop webmail frontend'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End Mailserver Service Section\n\n`,\n}\n","/** @format */\n\n//  elk.ts\n//  MEGADocker\n//  A Manikin to generate a ELK monitoring service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { emailServiceMite } from '../mites/service/emailServiceMite'\nimport { emailNetworkMite } from '../mites/network/emailNetworkMite'\nimport emailIcon from '../../images/manikin-icons/emailIcon.png'\nimport { emailLdifMite } from '../mites/ldif/emailLdifMite'\n\n/**\n * elk Manikin\n */\nexport const emailManikin: IManikin = {\n  description: `Email and Webmail`,\n  folder: `email`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`],\n  manikinIcon: emailIcon,\n  manikinIndex: 10005,\n  memories: [],\n  mites: [emailLdifMite, emailServiceMite, emailNetworkMite],\n  name: `E-mail`,\n  ports: [],\n  subfolders: [`config`, `maildata`, `mailstate`, `rainloop`],\n}\n","export default __webpack_public_path__ + \"static/media/emailIcon.edde9678.png\";","/** @format */\n\n//  emailLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Email\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const emailLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50005,\n  miteString: `\n\n# Begin Email Section\n\ndn: ou=EmailUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=EmailAdmins,ou=EmailUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=EmailITAdmins,ou=EmailAdmins,ou=EmailUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=EmailAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: EmailAdmins\naliasedObjectName: ou=EmailITAdmins,ou=EmailAdmins,ou=EmailUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Email Section\n\n`,\n}\n","/** @format */\n\n//  emailNetworkMite.ts\n//  MEGADocker\n//  Network Mite for email server\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const emailNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40005,\n  miteString: `\n\n# Begin email Network Section\n\n email:\n  driver: overlay\n\n# End email Network Section\n\n`,\n}\n","/** @format */\n\n//  filebrowserServiceMite.ts\n//  MEGADocker\n//  Service Mite for filebrowser server\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`filebrowser`]\n\nexport const filebrowserServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30006,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin filebrowser section\n\n filebrowser:\n  image: filebrowser/filebrowser:v2\n  volumes:\n   - \\${PWD}/filebrowser/data:/srv\n   - \\${PWD}/filebrowser/database.db:/database.db\n  networks:\n   - traefik\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.filebrowser.entrypoints=plainhttp'\n    - 'traefik.http.services.filebrowser.loadbalancer.server.port=80'\n    - 'traefik.http.routers.filebrowser.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.filebrowser-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.filebrowser.middlewares=filebrowser-force-secure'\n    - 'traefik.http.routers.filebrowser.service=filebrowser'\n    - 'traefik.http.routers.filebrowser-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.filebrowser-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.filebrowser-https.service=rainloop'\n    - 'traefik.http.routers.filebrowser-https.tls=true'\n    - 'traefik.http.services.filebrowser-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Filebrowser - a web filesharing interface'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End filebrowser Service Section\n\n`,\n}\n","/** @format */\n\n//  elk.ts\n//  MEGADocker\n//  A Manikin to generate a ELK monitoring service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { filebrowserServiceMite } from '../mites/service/filebrowserServiceMite'\nimport filebrowserIcon from '../../images/manikin-icons/filebrowserIcon.png'\nimport { filebrowserDatabaseDotDbMite } from '../mites/custom/filebrowserDatabaseDotDbMite'\nimport { filebrowserLdifMite } from '../mites/ldif/filebrowserLdifMite'\n\n/**\n * elk Manikin\n */\nexport const filebrowserManikin: IManikin = {\n  description: `File Sharing`,\n  folder: `filebrowser`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`],\n  manikinIcon: filebrowserIcon,\n  manikinIndex: 10006,\n  memories: [],\n  mites: [filebrowserLdifMite, filebrowserServiceMite, filebrowserDatabaseDotDbMite],\n  name: `FileBrowser`,\n  ports: [],\n  subfolders: [`data`],\n}\n","export default __webpack_public_path__ + \"static/media/filebrowserIcon.1ca2562f.png\";","/** @format */\n\n//  filebrowserLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for FileBrowser\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const filebrowserLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50006,\n  miteString: `# Begin FileBrowser Section\n\ndn: ou=FileBrowserUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=FileBrowserAdmins,ou=FileBrowserUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=FileBrowserModerators,ou=FileBrowserUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=FileBrowserAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: FileBrowserAdmins\naliasedObjectName: ou=FileBrowserITAdmins,ou=FileBrowserAdmins,ou=FileBrowserUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=FileBrowserModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: FileBrowserModerators\naliasedObjectName: ou=FileBrowserITModerators,ou=FileBrowserModerators,ou=FileBrowserUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End FileBrowser Section\n`,\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const filebrowserDatabaseDotDbMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60005,\n  miteFile: {\n    path: `filebrowser`,\n    name: `database`,\n    extension: `db`,\n    permissions: `644`,\n    contents: ``,\n  },\n}\n","/** @format */\n\n//  ghostServiceMite.ts\n//  MEGADocker\n//  Service Mite for Ghost\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`ghost`]\n\nexport const ghostServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30007,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Ghost Service Section\n\n ghost:\n  image: ghost\n  networks:\n   - ghost\n   - traefik\n  volumes:\n   - \\${PWD}/logs/ghost:/loglocation\n  environment:\n   - database__client=mysql\n   - database__connection__host=[[MOBNAME]]_ghost-mariadb\n   - database__connection__user=root\n   - database__connection__password=[[GHOSTMARIADBROOTPASSWORD]]\n   - database__connection__database=[[MOBNAME]]_ghost-mariadb\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.ghost.entrypoints=plainhttp'\n    - 'traefik.http.services.ghost.loadbalancer.server.port=2368'\n    - 'traefik.http.routers.ghost.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.ghost-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.ghost.middlewares=ghost-force-secure'\n    - 'traefik.http.routers.ghost.service=ghost'\n    - 'traefik.http.routers.ghost-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.ghost-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.ghost-https.service=ghost'\n    - 'traefik.http.routers.ghost-https.tls=true'\n    - 'traefik.http.services.ghost-https.loadbalancer.server.port=2368'\n    - 'com.MegaDocker.description=Ghost blogging platform'\n\n ghost-mariadb:\n  image: mariadb\n  networks:\n   - ghost\n  volumes:\n   - \\${PWD}/logs/ghost:/loglocation\n   - \\${PWD}/ghost/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[GHOSTMARIADBROOTPASSWORD]]\n  deploy:\n   restart_policy:\n    condition: any\n\n# End Ghost Service Section\n\n`,\n}\n","/** @format */\n\n//  ghost.ts\n//  MEGADocker\n//  A Manikin to generate a Ghost blogging service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { ghostServiceMite } from '../mites/service/ghostServiceMite'\nimport { ghostNetworkMite } from '../mites/network/ghostNetworkMIte'\nimport ghostIcon from '../../images/manikin-icons/ghostIcon.png'\nimport { ghostMariaDBRootPassword } from '../memories/ghostRootMariaDBPassword'\nimport { ghostLdifMite } from '../mites/ldif/ghostLdifMite'\n\n/**\n * ghost Manikin\n * replace MVOs\n */\nexport const ghostManikin: IManikin = {\n  description: `Ghost Blogging`,\n  folder: `ghost`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`, `Development`],\n  manikinIcon: ghostIcon,\n  manikinIndex: 10007,\n  memories: [ghostMariaDBRootPassword],\n  mites: [ghostLdifMite, ghostServiceMite, ghostNetworkMite],\n  name: `Ghost`,\n  ports: [],\n  subfolders: [`mariadb`],\n}\n","export default __webpack_public_path__ + \"static/media/ghostIcon.68272004.png\";","/** @format */\n\n//  ghostRootMariaDBPassword.ts\n//  MEGADocker\n//  The variable for Ghost's MariaDB root user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const ghostMariaDBRootPassword: IMemory = {\n  memoryIndex: 20008,\n  memoryMarker: `[[GHOSTMARIADBROOTPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Ghost MariaDB Root Password`,\n  tooltip: `The password for the Ghost MariaDB root user`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  ghostLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Ghost\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const ghostLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50007,\n  miteString: `# Begin Ghost Section\n\ndn: ou=GhostUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GhostModerators,ou=GhostUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GhostAdmins,ou=GhostUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GhostITAdmins,ou=GhostAdmins,ou=GhostUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GhostITModerators,ou=GhostModerators,ou=GhostUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GhostAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: GhostAdmins\naliasedObjectName: ou=GhostITAdmins,ou=GhostAdmins,ou=GhostUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=GhostModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: GhostModerators\naliasedObjectName: ou=GhostITModerators,ou=GhostModerators,ou=GhostUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Ghost Section\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for Ghost\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const ghostNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40006,\n  miteString: `\n\n# Begin Ghost Network Section\n\n ghost:\n  driver: overlay\n\n# End Ghost Network Section\n\n`,\n}\n","/** @format */\n\n//  grocyServiceMite.ts\n//  MEGADocker\n//  Service Mite for Grocy\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`grocy`, `barcodes`]\n\nexport const grocyServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30009,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Grocy Service Section\n\n grocy-app:\n  image: linuxserver/grocy\n  networks:\n   - grocy\n   - traefik\n  volumes:\n   - \\${PWD}/grocy/app:/config\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.grocy-app.entrypoints=plainhttp'\n    - 'traefik.http.services.grocy-app.loadbalancer.server.port=80'\n    - 'traefik.http.routers.grocy-app.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.grocy-app-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.grocy-app.middlewares=grocy-app-force-secure'\n    - 'traefik.http.routers.grocy-app.service=grocy-app'\n    - 'traefik.http.routers.grocy-app-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.grocy-app-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.grocy-app-https.service=grocy-app'\n    - 'traefik.http.routers.grocy-app-https.tls=true'\n    - 'traefik.http.services.grocy-app-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Grocy Web Server - home Enterprise Resource Planning software'\n\n grocy-barcode-buddy:\n  image: f0rc3/barcodebuddy-docker\n  networks:\n   - grocy\n   - traefik\n  volumes:\n   - \\${PWD}/grocy/barcodebuddy:/config\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.grocy-barcode-buddy.entrypoints=plainhttp'\n    - 'traefik.http.services.grocy-barcode-buddy.loadbalancer.server.port=80'\n    - 'traefik.http.routers.grocy-barcode-buddy.rule=Host(\"${hostnames[1]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.grocy-barcode-buddy-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.grocy-barcode-buddy.middlewares=grocy-barcode-buddy-force-secure'\n    - 'traefik.http.routers.grocy-barcode-buddy.service=grocy-barcode-buddy'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.rule=Host(\"${hostnames[1]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.service=grocy-barcode-buddy'\n    - 'traefik.http.routers.grocy-barcode-buddy-https.tls=true'\n    - 'traefik.http.services.grocy-barcode-buddy-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Barcode Buddy - barcode scanner add-on for grocy'\n\n# End Grocy Service Section\n\n`,\n}\n","/** @format */\n\n//  drupal.ts\n//  MEGADocker\n//  A Manikin to generate a Drupal blogging service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { grocyServiceMite } from '../mites/service/grocyServiceMite'\nimport { grocyNetworkMite } from '../mites/network/grocyNetworkMite'\nimport grocyIcon from '../../images/manikin-icons/grocyIcon.png'\nimport { grocyLdifMite } from '../mites/ldif/grocyLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const grocyManikin: IManikin = {\n  description: `Home Resource Planning`,\n  folder: `grocy`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Monitoring`, `Utility`],\n  manikinIcon: grocyIcon,\n  manikinIndex: 10009,\n  memories: [],\n  mites: [grocyLdifMite, grocyServiceMite, grocyNetworkMite],\n  name: `Grocy`,\n  ports: [],\n  subfolders: [`app`, `barcodebuddy`],\n}\n","export default __webpack_public_path__ + \"static/media/grocyIcon.f4377a3a.png\";","/** @format */\n\n//  grocyLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Grocy\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const grocyLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50009,\n  miteString: `# Begin Grocy Section\n\ndn: ou=GrocyUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GrocyAdmins,ou=GrocyUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GrocyModerators,ou=GrocyUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=GrocyAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: GrocyAdmins\naliasedObjectName: ou=GrocyITAdmins,ou=GrocyAdmins,ou=GrocyUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=GrocyModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: GrocyModerators\naliasedObjectName: ou=GrocyITModerators,ou=GrocyModerators,ou=GrocyUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Grocy Section\n`,\n}\n","/** @format */\n\n//  drupalNetworkMite.ts\n//  MEGADocker\n//  Network Mite for Drupal\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const grocyNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40008,\n  miteString: `\n\n# Begin Grocy Network Section\n\n grocy:\n  driver: overlay\n\n# End Grocy Network Section\n\n`,\n}\n","/** @format */\n\n//  heimdallServiceMite.ts\n//  MEGADocker\n//  Service Mite for Heimdall\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`heimdall`]\n\nexport const heimdallServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30010,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Heimdall Service Section\n\n heimdall:\n  image: linuxserver/heimdall\n  networks:\n   - traefik\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n   - TZ=$HOSTTIMEZONE\n  volumes:\n   - \\${PWD}/logs/heimdall:/loglocation\n   - \\${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/config/keys/[[PRIMARYDOMAIN]].crt\n   - \\${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/config/keys/[[PRIMARYDOMAIN]].key\n   - \\${PWD}/heimdall/php:/config/php\n   - \\${PWD}/heimdall/www:/config/www\n   - \\${PWD}/heimdall/log:/config/log\n   - \\${PWD}/heimdall/nginx:/config/nginx\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.heimdall.entrypoints=plainhttp'\n    - 'traefik.http.services.heimdall.loadbalancer.server.port=80'\n    - 'traefik.http.routers.heimdall.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.heimdall-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.heimdall.middlewares=heimdall-force-secure'\n    - 'traefik.http.routers.heimdall.service=heimdall'\n    - 'traefik.http.routers.heimdall-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.heimdall-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.heimdall-https.service=heimdall'\n    - 'traefik.http.routers.heimdall-https.tls=true'\n    - 'traefik.http.services.heimdall-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Heimdall - a portal for your MegaDocker interface pages'\n  \n# End Heimdall Service Section\n  \n`,\n}\n","/** @format */\n\n//  portal.ts\n//  MEGADocker\n//  A Manikin to generate a web portal for quick access to MEGADocker services\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { heimdallServiceMite } from '../mites/service/heimdallServiceMite'\nimport { heimdallNetworkMite } from '../mites/network/heimdallNetworkMite'\nimport heimdallIcon from '../../images/manikin-icons/heimdallIcon.png'\nimport { heimdallLdifMite } from '../mites/ldif/heimdallLdifMite'\n\n/**\n * portal Manikin\n */\nexport const heimdallManikin: IManikin = {\n  description: `Web Portal`,\n  folder: `heimdall`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`],\n  manikinIcon: heimdallIcon,\n  manikinIndex: 10010,\n  memories: [],\n  mites: [heimdallLdifMite, heimdallServiceMite, heimdallNetworkMite],\n  name: `Heimdall`,\n  ports: [],\n  subfolders: [`log`, `nginx`, `php`, `www`],\n}\n","export default __webpack_public_path__ + \"static/media/heimdallIcon.f44912ba.png\";","/** @format */\n\n//  heimdallLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Heimdall\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const heimdallLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50010,\n  miteString: `# Begin Heimdall Section\n\ndn: ou=HeimdallUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=HeimdallAdmins,ou=HeimdallUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=HeimdallITAdmins,ou=HeimdallAdmins,ou=HeimdallUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=HeimdallAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: HeimdallAdmins\naliasedObjectName: ou=HeimdallITAdmins,ou=HeimdallAdmins,ou=HeimdallUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Heimdall Section\n`,\n}\n","/** @format */\n\n//  serviceMite.ts\n//  MEGADocker\n//  Network Mite for Portal\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const heimdallNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40009,\n  miteString: `\n\n# Begin Heimdall Network Section\n\n heimdall:\n  driver: overlay\n\n# End Heimdall Network Section\n\n`,\n}\n","/** @format */\n\n//  kanboardServiceMite.ts\n//  MEGADocker\n//  Service Mite for Kanboard\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`kanboard`]\n\nexport const kanboardServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30011,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Kanboard Service Section\n\n kanboard-app:\n  image: kanboard/kanboard\n  networks:\n   - traefik\n   - kanboard\n  environment:\n   - DATABASE_URL=mysql://[[KANBOARDMARIADBUSER]]:[[KANBOARDMARIADBPASSWORD]]@[[MOBNAME]]_kanboard-mariadb/kanboard\n  volumes:\n   - \\${PWD}/logs/kanboard:/loglocation\n   - \\${PWD}/kanboard/kanboard-data:/var/www/app/data\n   - \\${PWD}/kanboard/kanboard-plugins:/var/www/app/plugins\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.kanboard.entrypoints=plainhttp'\n    - 'traefik.http.services.kanboard.loadbalancer.server.port=80'\n    - 'traefik.http.routers.kanboard.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.kanboard-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.kanboard.middlewares=kanboard-force-secure'\n    - 'traefik.http.routers.kanboard.service=kanboard'\n    - 'traefik.http.routers.kanboard-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.kanboard-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.kanboard-https.service=kanboard'\n    - 'traefik.http.routers.kanboard-https.tls=true'\n    - 'traefik.http.services.kanboard-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Kanboard - an extensible kanban board for task sharing'\n\n kanboard-mariadb:\n  image: mariadb\n  networks:\n   - kanboard\n  volumes:\n   - \\${PWD}/logs/kanboard:/loglocation\n   - \\${PWD}/kanboard/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[KANBOARDMARIADBROOTPASSWORD]]\n   - MYSQL_DATABASE=kanboard\n   - MYSQL_USER=[[KANBOARDMARIADBUSER]]\n   - MYSQL_PASSWORD=[[KANBOARDMARIADBPASSWORD]]\n  \n# End Kanboard Service Section\n  \n  `,\n}\n","/** @format */\n\n//  portal.ts\n//  MEGADocker\n//  A Manikin to generate a web portal for quick access to MEGADocker services\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { kanboardServiceMite } from '../mites/service/kanboardServiceMite'\nimport { kanboardNetworkMite } from '../mites/network/kanboardNetworkMite'\nimport kanboardIcon from '../../images/manikin-icons/kanboardIcon.png'\nimport { kanboardMariaDBPassword } from '../memories/kanboardMariaDBPassword'\nimport { kanboardMariaDBRootPassword } from '../memories/kanboardMariaDBRootPassword'\nimport { kanboardMariaDBUser } from '../memories/kanboardMariaDBUser'\nimport { kanboardLdifMite } from '../mites/ldif/kanboardLdifMite'\n\n/**\n * portal Manikin\n */\nexport const kanboardManikin: IManikin = {\n  description: `Task Sharing`,\n  folder: `kanboard`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`, `Organization`, `Productivity`],\n  manikinIcon: kanboardIcon,\n  manikinIndex: 10011,\n  memories: [kanboardMariaDBPassword, kanboardMariaDBRootPassword, kanboardMariaDBUser],\n  mites: [kanboardLdifMite, kanboardServiceMite, kanboardNetworkMite],\n  name: `Kanboard`,\n  ports: [],\n  subfolders: [`kanboard-data`, `kanboard-plugins`, `mariadb`],\n}\n","export default __webpack_public_path__ + \"static/media/kanboardIcon.8bb1f0a7.png\";","/** @format */\n\n//  wordpressMariaDBPassword.ts\n//  MEGADocker\n//  The variable for Wordpress's MariaDB User's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const kanboardMariaDBPassword: IMemory = {\n  memoryIndex: 20013,\n  memoryMarker: `[[KANBOARDMARIADBPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Kanboard MariaDB Password`,\n  tooltip: `The Kanboard MariaDB user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  wordpressMariaDBRootPassword.ts\n//  MEGADocker\n//  The variable for the WordPress MariaDB's root user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const kanboardMariaDBRootPassword: IMemory = {\n  memoryIndex: 20014,\n  memoryMarker: `[[KANBOARDMARIADBROOTPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Kanboard MariaDB Root Password`,\n  tooltip: `The Kanboard MariaDB root user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  wordpressMariaDBUser.ts\n//  MEGADocker\n//  The variable for the Wordpress MariaDB username\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const kanboardMariaDBUser: IMemory = {\n  memoryIndex: 20015,\n  memoryMarker: `[[KANBOARDMARIADBUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Kanboard MariaDB User`,\n  tooltip: `The Kanboard MariaDB user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  kanboardLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Kanboard\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const kanboardLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50011,\n  miteString: `# Begin Kanboard Section\n\ndn: ou=KanboardUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KanboardAdmins,ou=KanboardUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KanboardITAdmins,ou=KanboardAdmins,ou=KanboardUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=KanboardAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: KanboardAdmins\naliasedObjectName: ou=KanboardITAdmins,ou=KanboardAdmins,ou=KanboardUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Kanboard Section\n`,\n}\n","/** @format */\n\n//  serviceMite.ts\n//  MEGADocker\n//  Network Mite for Portal\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const kanboardNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40010,\n  miteString: `\n\n# Begin Kanboard Network Section\n\n kanboard:\n  driver: overlay\n\n# End Kanboard Network Section\n\n`,\n}\n","/** @format */\n\n//  ldapAdminPassword.ts\n//  MEGADocker\n//  The variable for the LDAP administrative user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const ldapAdminPassword: IMemory = {\n  memoryIndex: 20018,\n  memoryMarker: `[[LDAPADMINPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `LDAP Admin Password`,\n  tooltip: `The LDAP admin user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  ldapAdminUsername.ts\n//  MEGADocker\n//  The variable for the LDAP administrative user's username\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const ldapAdminUsername: IMemory = {\n  memoryIndex: 20019,\n  memoryMarker: `[[LDAPADMINUSERNAME]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `LDAP Admin User`,\n  tooltip: `The LDAP admin user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  ldapConfigurationPassword.ts\n//  MEGADocker\n//  The variable for the LDAP server's configuration password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const ldapConfigurationPassword: IMemory = {\n  memoryIndex: 20020,\n  memoryMarker: `[[LDAPCONFIGURATIONPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `LDAP Configuration Password`,\n  tooltip: `The LDAP configuration password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  ldapServiceMite.ts\n//  MEGADocker\n//  Service Mite for LDAP\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`ldapadmin`, `authelia`, `ldap`]\n\nexport const ldapServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30012,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin LDAP Service Section\n\n ldap:\n  image: osixia/openldap\n  command:  --copy-service\n  networks:\n   - ldap\n  environment:\n   - LDAP_BACKEND=mdb\n   - LDAP_DOMAIN=[[PRIMARYDOMAIN]]\n   - LDAP_ORGANISATION=[[LDAPORGANISATION]]\n   - LDAP_ADMIN_PASSWORD=[[LDAPADMINPASSWORD]]\n   - LDAP_CONFIG_PASSWORD=[[LDAPCONFIGURATIONPASSWORD]]\n   - LDAP_TLS_CIPHER_SUITE=NORMAL\n   - LDAP_TLS_VERIFY_CLIENT=allow\n   - LDAP_TLS=true\n   - LDAP_TLS_CRT_FILENAME=[[PRIMARYDOMAIN]].crt\n   - LDAP_TLS_KEY_FILENAME=[[PRIMARYDOMAIN]].key\n   - LDAP_TLS_CA_CRT_FILENAME=[[PRIMARYDOMAIN]].crt\n  tty: true\n  stdin_open: true\n  volumes:\n   - \\${PWD}/logs/ldap:/var/log/ldap\n   - \\${PWD}/ldap/ldif-files:/container/service/slapd/assets/config/bootstrap/ldif/custom\n   - \\${PWD}/ldap/lib:/var/lib/ldap\n   - \\${PWD}/ldap/slapd.d:/etc/ldap/slapd.d\n   - \\${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/container/service/slapd/assets/certs/[[PRIMARYDOMAIN]].crt:ro\n   - \\${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/container/service/slapd/assets/certs/[[PRIMARYDOMAIN]].key:ro\n  ports:\n   - 389:389\n   - 636:636\n\n ldapadmin:\n  image: osixia/phpldapadmin:latest\n  command: --copy-service\n  environment:\n   - SERVER_NAME=[[MOBNAME]]_ldap\n   - PHPLDAPADMIN_LDAP_HOSTS=[[MOBNAME]]_ldap\n   - PHPLDAPADMIN_TRUST_PROXY_SSL=true\n   - PHPLDAPADMIN_HTTPS=false\n   - PHPLDAPADMIN_SERVER_ADMIN=[[LETSENCRYPTEMAIL]]\n   - PHPLDAPADMIN_HTTPS_CRT_FILENAME=certs/[[PRIMARYDOMAIN]].crt\n   - PHPLDAPADMIN_HTTPS_KEY_FILENAME=private/[[PRIMARYDOMAIN]].key\n   - PHPLDAPADMIN_HTTPS_CA_CRT_FILENAME=certs/[[PRIMARYDOMAIN]].crt\n  volumes:\n   - \\${PWD}/logs/ldap:/loglocation\n   - \\${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/container/service/phpldapadmin/assets/apache2/certs/certs/[[PRIMARYDOMAIN]].crt:ro\n   - \\${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/container/service/phpldapadmin/assets/apache2/certs/private/[[PRIMARYDOMAIN]].key:ro\n   - \\${PWD}/traefik/ssl/private/letsencrypt.key:/container/service/phpldapadmin/assets/apache2/certs/certs/letsencrypt.key:ro\n   - \\${PWD}/traefik/ssl/certs/[[PRIMARYDOMAIN]].crt:/container/service/ldap-client/assets/certs/[[PRIMARYDOMAIN]].crt:ro\n   - \\${PWD}/traefik/ssl/private/[[PRIMARYDOMAIN]].key:/container/service/ldap-client/assets/certs/[[PRIMARYDOMAIN]].key:ro\n   - \\${PWD}/traefik/ssl/private/letsencrypt.key:/container/service/ldap-client/assets/certs/letsencrypt.key:ro\n  networks:\n   - ldap\n   - traefik\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.ldapadmin.entrypoints=plainhttp'\n    - 'traefik.http.services.ldapadmin.loadbalancer.server.port=80'\n    - 'traefik.http.routers.ldapadmin.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.ldapadmin-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.ldapadmin.middlewares=ldapadmin-force-secure'\n    - 'traefik.http.routers.ldapadmin.service=ldapadmin'\n    - 'traefik.http.routers.ldapadmin-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.ldapadmin-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.ldapadmin-https.service=ldapadmin'\n    - 'traefik.http.routers.ldapadmin-https.tls=true'\n    - 'traefik.http.services.ldapadmin-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=LDAP user authentication server'\n\n authelia-app:\n  image: authelia/authelia\n  networks:\n   - ldap\n   - traefik\n  environment:\n   - TZ=$HOSTTIMEZONE\n  volumes:\n   - \\${PWD}/ldap/authelia-data:/var/lib/authelia\n   - \\${PWD}/ldap/authelia-config/configuration.yml:/etc/authelia/configuration.yml:ro\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.authelia.entrypoints=plainhttp'\n    - 'traefik.http.services.authelia.loadbalancer.server.port=9091'\n    - 'traefik.http.routers.authelia.rule=Host(\"${hostnames[1]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.authelia-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.authelia.middlewares=ldapadmin-force-secure'\n    - 'traefik.http.routers.authelia.service=authelia'\n    - 'traefik.http.routers.authelia-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.authelia-https.rule=Host(\"${hostnames[1]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.authelia-https.service=authelia'\n    - 'traefik.http.routers.authelia-https.tls=true'\n    - 'traefik.http.services.authelia-https.loadbalancer.server.port=9091'\n    - 'com.MegaDocker.description=Authelia - authentication front-end'\n\n authelia-mariadb:\n  image: mariadb\n  networks:\n   - ldap\n  volumes:\n   - \\${PWD}/ldap/authelia-mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[AUTHELIAMARIADBROOTPASSWORD]]\n   - MYSQL_DATABASE=authelia\n   - MYSQL_USER=[[AUTHELIAMARIADBUSER]]\n   - MYSQL_PASSWORD=[[AUTHELIAMARIADBPASSWORD]]\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'com.MegaDocker.description=Authelia MariaDB - MariaDB database to store Authelia data'\n  \n# End LDAP Service Section\n\n`,\n}\n","/** @format */\n\n//  ldap.ts\n//  MEGADocker\n//  A Manikin to generate a LDAP service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { ldapAdminPassword } from '../memories/ldapAdminPassword'\nimport { ldapAdminUsername } from '../memories/ldapAdminUsername'\nimport { ldapConfigurationPassword } from '../memories/ldapConfigurationPassword'\nimport { ldapServiceMite } from '../mites/service/ldapServiceMite'\nimport { ldapNetworkMite } from '../mites/network/ldapNetworkMite'\nimport ldapIcon from '../../images/manikin-icons/ldapIcon.png'\nimport { ldapOrganisation } from '../memories/ldapOrganisation'\nimport { ldapBootstrapMegaDockerDotLdifMite } from '../mites/custom/ldapBootstrapMegaDockerDotLdifMite'\nimport { autheliaDotConfMite } from '../mites/custom/autheliaDotConfMite'\nimport { autheliaMariaDBPassword } from '../memories/autheliaMariaDBPassword'\nimport { autheliaMariaDBRootPassword } from '../memories/autheliaMariaDBRootPassword'\nimport { autheliaMariaDBUser } from '../memories/autheliaMariaDBUser'\nimport { ldapLdifMite } from '../mites/ldif/ldapLdifMite'\n\n/**\n * ldap Manikin\n */\nexport const ldapManikin: IManikin = {\n  description: `Authentication`,\n  folder: `ldap`,\n  isCore: true,\n  isSelected: true,\n  manikinGroups: [`Core`, `Utility`],\n  manikinIcon: ldapIcon,\n  manikinIndex: 10012,\n  memories: [autheliaMariaDBPassword, autheliaMariaDBRootPassword, autheliaMariaDBUser, ldapAdminUsername, ldapAdminPassword, ldapConfigurationPassword, ldapOrganisation],\n  mites: [ldapLdifMite, autheliaDotConfMite, ldapServiceMite, ldapNetworkMite, ldapBootstrapMegaDockerDotLdifMite],\n  name: `LDAP`,\n  ports: [],\n  subfolders: [`authelia-conf`, `authelia-data`, `authelia-mariadb`, `conf`, `pages`, `log`, `certs`, `lib`, `ldif-files`, `slapd.d`],\n}\n","export default __webpack_public_path__ + \"static/media/ldapIcon.bc5b181f.png\";","/** @format */\n\n//  autheliaMariaDBPassword.ts\n//  MEGADocker\n//  The variable for authelia's MariaDB root user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const autheliaMariaDBPassword: IMemory = {\n  memoryIndex: 20000,\n  memoryMarker: `[[AUTHELIAMARIADBPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Authelia MariaDB Password`,\n  tooltip: `The password for the Authelia MariaDB user`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  autheliaMariaDBRootPassword.ts\n//  MEGADocker\n//  The variable for authelia's MariaDB root user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const autheliaMariaDBRootPassword: IMemory = {\n  memoryIndex: 20001,\n  memoryMarker: `[[AUTHELIAMARIADBROOTPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Authelia MariaDB Root Password`,\n  tooltip: `The password for the Authelia MariaDB root user`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  autheliaMariaDBUser.ts\n//  MEGADocker\n//  The variable for the authelia MariaDB username\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const autheliaMariaDBUser: IMemory = {\n  memoryIndex: 20002,\n  memoryMarker: `[[AUTHELIAMARIADBUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Authelia MariaDB User`,\n  tooltip: `The Authelia MariaDB user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  ldapAdminUsername.ts\n//  MEGADocker\n//  The variable for the LDAP administrative user's username\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\n// import { noWhitespaceValidator } from '../../functions/validators/noWhitespaceValidator';\nimport { noValidator } from '../../functions/validators/noValidator'\n\nexport const ldapOrganisation: IMemory = {\n  memoryIndex: 20021,\n  memoryMarker: `[[LDAPORGANISATION]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `LDAP Organisation Name`,\n  tooltip: `The top-level LDAP organization`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  // TODO: create a validator that allows whitespace\n  validator: noValidator,\n}\n","/** @format */\n\n//  noValidator.ts\n//  MEGADocker\n//  a dummy validator function that allows anything\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nexport const noValidator: Function = (stringToValidate: string): boolean => {\n  if (!stringToValidate || stringToValidate.length === 0) {\n    return false\n  }\n  //TODO: replace all instances of this validator function with a real one\n  return true\n}\n","/** @format */\n\n//  ldapLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for LDAP\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const ldapLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50013,\n  miteString: `# Begin LDAP Section\n\ndn: ou=LDAPUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LDAPAdmins,ou=LDAPUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LDAPModerators,ou=LDAPUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LDAPAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LDAPAdmins\naliasedObjectName: ou=LDAPITAdmins,ou=LDAPAdmins,ou=LDAPUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=LDAPModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LDAPModerators\naliasedObjectName: ou=LDAPITModerators,ou=LDAPModerators,ou=LDAPUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End LDAP Section\n`,\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const autheliaDotConfMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60000,\n  miteFile: {\n    path: `ldap/authelia-conf`,\n    name: `authelia`,\n    extension: `conf`,\n    permissions: `644`,\n    contents: `# MegaDocker authelia.conf file for [[MOBNAME]]\nhost: 0.0.0.0\nport: 9091\nlog_level: debug\ndefault_redirection_url: https://authelia.[[PRIMARYDOMAIN]]/\n\ntotp:\n issuer: [[PRIMARYDOMAIN]]\n\n authentication_backend:\n ldap:\n  url: ldaps://[[MOBNAME]]_ldap\n  skip_verify: false\n  base_dn: dc=ldap,[[LDAPDOMAINASDCS]]\n  username_attribute: uid\n  additional_users_dn: ou=users\n  users_filter: (&({username_attribute}={input})(objectClass=person))\n  additional_groups_dn: ou=groups\n  groups_filter: (&(member={dn})(objectclass=groupOfNames))\n  group_name_attribute: cn\n  mail_attribute: mail\n  user: cn=[[LDAPADMINUSER]],dc=ldap,[[LDAPDOMAINASDCS]]\n  password: [[LDAPADMINPASSWORD]]\n\nnotifier:\n smtp:\n  username: [[LDAPMAILUSERNAME]]\n  sender: [[LDAPMAILUSERNAME]]@[[LDAPMAILDOMAIN]]\n  password: [[LDAPSMTPASSWORD]]\n  host: [[LDAPSMTPHOST]]\n  port: 587\n\njwt_secret: [[LDAPJWTSECRET]]\n\naccess_control:\n default_policy: deny\n rules:\n  - domain: \"*.[[PRIMARYDOMAIN]]\"\n    policy: one_factor\n\nsession:\n name: authelia_session\n secret: [[LDAPAUTHELIASESSIONSECRET]]\n expiration: 3600\n inactivity: 300\n domain: [[PRIMARYDOMAIN]]\n\nregulation:\n max_retries: 3\n find_time: 90\n ban_time: 300\n    \nstorage:\n mysql:\n  host: [[MOBNAME]]_authelia-mariadb\n  port: 3306\n  database: authelia\n  username: [[LDAPADMINUSER]]\n  password: [[LDAPADMINPASSWORD]]\n\n        `,\n  },\n}\n","/** @format */\n\n//  ledgerServiceMite.ts\n//  MEGADocker\n//  Service Mite for Ledger\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`ledger`]\n\nexport const ledgerServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30013,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Ledger Section\n\n ledger:\n  image: ledgersmb/ledgersmb\n  networks:\n   - ledger\n   - traefik\n  environment:\n   - DEFAULT_DB=ledger\n   - POSTGRES_HOST=[[MOBNAME]]_ledger-postgres\n   - POSTGRES_USER=[[LEDGERUSER]]\n   - POSTGRES_PASSWORD=[[LEDGERPOSTGRESPASSWORD]]\n  deploy:\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.ledger.entrypoints=plainhttp'\n    - 'traefik.http.services.ledger.loadbalancer.server.port=5762'\n    - 'traefik.http.routers.ledger.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.ledger-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.ledger.middlewares=ledger-force-secure'\n    - 'traefik.http.routers.ledger.service=ledger'\n    - 'traefik.http.routers.ledger-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.ledger-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.ledger-https.service=ledger'\n    - 'traefik.http.routers.ledger-https.tls=true'\n    - 'traefik.http.services.ledger-https.loadbalancer.server.port=5762'\n    - 'com.MegaDocker.description=LedgerSMB - Bookkeeping application'\n\n ledger-postgres:\n  image: postgres\n  networks:\n   - ledger\n  environment:\n   - POSTGRES_USER=[[LEDGERPOSTGRESUSER]]\n   - POSTGRES_PASSWORD=[[LEDGERPOSTGRESPASSWORD]]\n   - PGDATA=/var/lib/postgresql/data/pgdata\n  volumes:\n   - \\${PWD}/ledger:/var/lib/postgresql/data\n\n# End Ledger Section\n\n`,\n}\n","/** @format */\n\n//  ldapAdminPassword.ts\n//  MEGADocker\n//  The variable for the LDAP administrative user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const ledgerPostgresPassword: IMemory = {\n  memoryIndex: 20022,\n  memoryMarker: `[[LEDGERPOSTGRESPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Ledger Postgres Password`,\n  tooltip: `The LedgerSMB Postgres user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  ledger.ts\n//  MEGADocker\n//  A Manikin to generate a Ledger bookeeping service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { ledgerServiceMite } from '../mites/service/ledgerServiceMite'\nimport { ledgerNetworkMite } from '../mites/network/ledgerNetworkMite'\nimport { ledgerPostgresPassword } from '../memories/ledgerPostgresPassword'\nimport ledgerIcon from '../../images/manikin-icons/ledgerIcon.png'\nimport { ledgerPostgresUser } from '../memories/ledgerPostgresUser'\nimport { ledgerLdifMite } from '../mites/ldif/ledgerLdifMite'\n\n/**\n * elk Manikin\n */\nexport const ledgerManikin: IManikin = {\n  description: `Bookkeeping`,\n  folder: `ledger`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`, `Financial`, `Organization`, `Productivity`],\n  manikinIcon: ledgerIcon,\n  manikinIndex: 10013,\n  memories: [ledgerPostgresPassword, ledgerPostgresUser],\n  mites: [ledgerLdifMite, ledgerServiceMite, ledgerNetworkMite],\n  name: `Ledger`,\n  ports: [],\n  subfolders: [`pgdata`],\n}\n","export default __webpack_public_path__ + \"static/media/ledgerIcon.0a660951.png\";","/** @format */\n\n//  rocketchatBotUsername.ts\n//  MEGADocker\n//  The variable for\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const ledgerPostgresUser: IMemory = {\n  memoryIndex: 20023,\n  memoryMarker: `[[LEDGERPOSTGRESUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Ledger Postgres User`,\n  tooltip: `The LedgerSMB Postgres user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  ledgerLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for LedgerSMB\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const ledgerLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50014,\n  miteString: `# Begin LedgerSMB Section\n\ndn: ou=LedgerSMBUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LedgerSMBAdmins,ou=LedgerSMBUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LedgerSMBModerators,ou=LedgerSMBUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LedgerSMBAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LedgerSMBAdmins\naliasedObjectName: ou=LedgerSMBITAdmins,ou=LedgerSMBAdmins,ou=LedgerSMBUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=LedgerSMBModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LedgerSMBModerators\naliasedObjectName: ou=LedgerSMBITModerators,ou=LedgerSMBModerators,ou=LedgerSMBUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End LedgerSMB Section\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for NextCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const ledgerNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40012,\n  miteString: `\n\n# Begin Ledger Network Section\n\n ledger:\n  driver: overlay\n\n# End Ledger Network Section\n\n`,\n}\n","/** @format */\n\n//  mealieServiceMite.ts\n//  MEGADocker\n//  Service Mite for Mealie\n//  Created by George Georgulas IV on 3/5/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`mealie`]\n\nexport const mealieServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30014,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Mealie Service Section\n \n mealie:\n  image: hkotel/mealie:latest\n  environment:\n   - db_type=sqlite \n  volumes:\n   - /var/data/mealie:/app/data\n   - /etc/localtime:/etc/localtime:ro\n  networks:\n   - traefik\n  deploy:\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.mealie.entrypoints=plainhttp'\n    - 'traefik.http.services.mealie.loadbalancer.server.port=80'\n    - 'traefik.http.routers.mealie.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.mealie-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.mealie.middlewares=mealie-force-secure'\n    - 'traefik.http.routers.mealie.service=kanboard'\n    - 'traefik.http.routers.mealie-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.mealie-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.mealie-https.service=mealie'\n    - 'traefik.http.routers.mealie-https.tls=true'\n    - 'traefik.http.services.mealie-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Mealie - a recipe manager and meal planner'\n\n# End Mealie Service Section\n\n`,\n}\n","/** @format */\n\n//  mealie.ts\n//  MEGADocker\n//  A Manikin to generate a mealie recipe server\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { mealieServiceMite } from '../mites/service/mealieServiceMite'\nimport mealieIcon from '../../images/manikin-icons/mealieIcon.png'\nimport { mealieLdifMite } from '../mites/ldif/mealieLdifMite'\n\n/**\n * elk Manikin\n */\nexport const mealieManikin: IManikin = {\n  description: `Recipe Manager and Meal Planning`,\n  folder: ``,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Organization`],\n  manikinIcon: mealieIcon,\n  manikinIndex: 10014,\n  memories: [],\n  mites: [mealieLdifMite, mealieServiceMite],\n  name: `Mealie`,\n  ports: [],\n  subfolders: [],\n}\n","export default __webpack_public_path__ + \"static/media/mealieIcon.e1aeed47.png\";","/** @format */\n\n//  mealieLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Mealie\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const mealieLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50016,\n  miteString: `# Begin Mealie Section\n\ndn: ou=MealieUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=MealieAdmins,ou=MealieUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=MealieModerators,ou=MealieUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=MealieAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: MealieAdmins\naliasedObjectName: ou=MealieITAdmins,ou=MealieAdmins,ou=MealieUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=MealieModeratorss,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: MealieModerators\naliasedObjectName: ou=MealieITModerators,ou=MealieModerators,ou=MealieUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Mealie Section\n\n`,\n}\n","/** @format */\n\n//  n8nServiceMite.ts\n//  MEGADocker\n//  Service Mite for n8n\n//  Created by George Georgulas IV on 11/3/2020.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`n8n`]\n\nexport const n8nServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30018,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin n8n Service Section\n\n n8n:\n  image: n8nio/n8n:latest\n  networks:\n   - n8n\n   - traefik\n  environment:\n   - ZABBIX_HOSTNAME=n8n\n   - NODE_ENV=production\n   - N8N_BASIC_AUTH_ACTIVE=true\n   - N8N_BASIC_AUTH_USER=[[N8NUSERNAME]]\n   - N8N_BASIC_AUTH_PASSWORD=[[N8NPASSWORD]]\n   - GENERIC_TIMEZONE=HOSTTIMEZONE\n   - WEBHOOK_TUNNEL_URL=https://${hostnames[0]}.[[PRIMARYDOMAIN]]/\n   - VUE_APP_URL_BASE_API=https://${hostnames[0]}.[[PRIMARYDOMAIN]]/\n   - N8N_PROTOCOL=https\n   - N8N_HOST=${hostnames[0]}.[[PRIMARYDOMAIN]]\n   - N8N_PORT=5678 \n   - DEBUG_MODE=FALSE\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n   - DATA_FOLDER=/root/n8n/\n   - DOMAIN_NAME=[[PRIMARYDOMAIN]]\n   - SUBDOMAIN=${hostnames[0]}\n  volumes:\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n   - \\${PWD}/n8n/data:/root/n8n\n   - \\${PWD}/n8n/settings:/root/.n8n\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.n8n.entrypoints=plainhttp'\n    - 'traefik.http.services.n8n.loadbalancer.server.port=5678'\n    - 'traefik.http.routers.n8n.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.n8n-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.n8n.middlewares=n8n-force-secure'\n    - 'traefik.http.routers.n8n.service=n8n'\n    - 'traefik.http.routers.n8n-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.n8n-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.n8n-https.service=n8n'\n    - 'traefik.http.routers.n8n-https.tls=true'\n    - 'traefik.http.services.n8n-https.loadbalancer.server.port=5678'\n    - 'com.MegaDocker.description=n8n - a middleware to connect multiple services'\n\n# End n8n Service Section \n\n`,\n}\n","/** @format */\n\n//  n8n.ts\n//  MEGADocker\n//  A Manikin to create the n8n middleware\n//  Created by George Georgulas IV on 11/3/2020.\n//  Copyright © 2020 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\nimport { n8nServiceMite } from '../mites/service/n8nServiceMite'\nimport { n8nNetworkMite } from '../mites/network/n8nNetworkMite'\nimport n8nIcon from '../../images/manikin-icons/n8nIcon.png'\nimport { n8nUser } from '../memories/n8nUser'\nimport { n8nPassword } from '../memories/n8nPassword'\nimport { n8nLdifMite } from '../mites/ldif/n8nLdifMite'\n\n/**\n * n8n Manikin\n */\nexport const n8nManikin: IManikin = {\n  description: `Automation and Integration`,\n  folder: `n8n`,\n  isCore: true,\n  isSelected: true,\n  manikinGroups: [`Utility`],\n  manikinIcon: n8nIcon,\n  manikinIndex: 10017,\n  memories: [n8nUser, n8nPassword],\n  mites: [n8nLdifMite, n8nServiceMite, n8nNetworkMite],\n  name: `n8n`,\n  ports: [],\n  subfolders: [`data`, `settings`],\n}\n","export default __webpack_public_path__ + \"static/media/n8nIcon.8adca8a2.png\";","/** @format */\n\n//  n8nUser.ts\n//  MEGADocker\n//  The variable for the n8n user name\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const n8nUser: IMemory = {\n  memoryIndex: 20028,\n  memoryMarker: `[[N8NUSERNAME]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `n8n User`,\n  tooltip: `The n8n admin user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  n8nPassword.ts\n//  MEGADocker\n//  The variable for the n8n administrative password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const n8nPassword: IMemory = {\n  memoryIndex: 20027,\n  memoryMarker: `[[N8NPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `n8n Password`,\n  tooltip: `The password for the n8n admin user`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  n8nLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for n8n\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const n8nLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50020,\n  miteString: `# Begin N8N Section\n\ndn: ou=N8NUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=N8NAdmins,ou=N8NUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=N8NModerators,ou=N8NUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=N8NAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: N8NAdmins\naliasedObjectName: ou=N8NITAdmins,ou=N8NAdmins,ou=N8NUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=N8NModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: N8NModerators\naliasedObjectName: ou=N8NITModerators,ou=N8NModerators,ou=N8NUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End N8N Section\n`,\n}\n","/** @format */\n\n//  n8nNetworkMite.ts\n//  MEGADocker\n//  Network Mite for n8n\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const n8nNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40016,\n  miteString: `\n\n# Begin n8n Network Section\n\n n8n:\n  driver: overlay\n\n# End n8n Network Section\n\n`,\n}\n","/** @format */\n\n//  nextcloudServiceMite.ts\n//  MEGADocker\n//  Service Mite for NextCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`nextcloud`]\n\nexport const nextcloudServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30019,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin NextCloud Service Sections\n\n nextcloud:\n  image: nextcloud\n  networks:\n   - nextcloud\n   - traefik\n  volumes:\n   - \\${PWD}/nextcloud/application:/var/www/html\n  environment:\n   - MYSQL_HOST=[[MOBNAME]]_nextcloud_mariadb\n   - MYSQL_PASSWORD=[[NEXTCLOUDMARIADBPASSWORD]]\n   - MYSQL_DATABASE=nextcloud\n   - MYSQL_USER=[[NEXTCLOUDMARIADBUSER]]\n  deploy:\n   restart_policy:\n    condition: any\n   placement:\n    constraints:\n     - node.role == manager\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.nextcloud.entrypoints=plainhttp'\n    - 'traefik.http.services.nextcloud.loadbalancer.server.port=80'\n    - 'traefik.http.routers.nextcloud.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.nextcloud-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.nextcloud.middlewares=nextcloud-force-secure'\n    - 'traefik.http.routers.nextcloud.service=nextcloud'\n    - 'traefik.http.routers.nextcloud-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.nextcloud-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.nextcloud-https.service=nextcloud'\n    - 'traefik.http.routers.nextcloud-https.tls=true'\n    - 'traefik.http.services.nextcloud-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Nextcloud office suite'\n\n nextcloud-mariadb:\n  image: mariadb\n  networks:\n   - nextcloud\n  command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW\n  volumes:\n   - \\${PWD}/nextcloud/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[NEXTCLOUDMARIADBROOTPASSWORD]]\n   - MYSQL_PASSWORD=[[NEXTCLOUDMARIADBPASSWORD]]\n   - MYSQL_DATABASE=nextcloud\n   - MYSQL_USER=[[NEXTCLOUDMARIADBUSER]]\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - \"com.MegaDocker.description=MariaDB - Storage for NextCloud\"\n  placement:\n   constraints:\n    - node.role == manager\n\n# End NextCloud Service Section\n\n`,\n}\n","/** @format */\n\n//  nextcloud.ts\n//  MEGADocker\n//  A Manikin to generate a Owncloud file-sharing service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { nextcloudServiceMite } from '../mites/service/nextcloudServiceMite'\nimport { nextcloudNetworkMite } from '../mites/network/nextcloudNetworkMite'\nimport nextcloudIcon from '../../images/manikin-icons/nextcloudIcon.png'\nimport { nextcloudMariaDBPassword } from '../memories/nextcloudMariaDBPassword'\nimport { nextcloudMariaDBRootPassword } from '../memories/nextcloudMariaDBRootPassword'\nimport { nextcloudMariaDBUser } from '../memories/nextcloudMariaDBUser'\nimport { nextcloudLdifMite } from '../mites/ldif/nextcloudLdifMite'\n\n/**\n * nextcloud Manikin\n */\nexport const nextcloudManikin: IManikin = {\n  description: `Filesharing`,\n  folder: `nextcloud`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`, `Organization`, `Productivity`],\n  manikinIcon: nextcloudIcon,\n  manikinIndex: 10018,\n  memories: [nextcloudMariaDBPassword, nextcloudMariaDBRootPassword, nextcloudMariaDBUser],\n  mites: [nextcloudLdifMite, nextcloudServiceMite, nextcloudNetworkMite],\n  name: `Nextcloud`,\n  ports: [],\n  subfolders: [`application`, `mariadb`],\n}\n","export default __webpack_public_path__ + \"static/media/nextcloudIcon.b557d31b.png\";","/** @format */\n\n//  primaryDomain.ts\n//  MEGADocker\n//  The variable for the domain name of your primary web domain\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const nextcloudMariaDBPassword: IMemory = {\n  memoryIndex: 20029,\n  memoryMarker: `[[NEXTCLOUDMARIADBPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Nextcloud MariaDB Password`,\n  tooltip: `The Nextcloud MariaDB password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  primaryDomain.ts\n//  MEGADocker\n//  The variable for the domain name of your primary web domain\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const nextcloudMariaDBRootPassword: IMemory = {\n  memoryIndex: 20030,\n  memoryMarker: `[[NEXTCLOUDMARIADBROOTPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Nextcloud MariaDB Root Password`,\n  tooltip: `The Nextcloud MariaDB root user`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  rocketchatBotUsername.ts\n//  MEGADocker\n//  The variable for\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const nextcloudMariaDBUser: IMemory = {\n  memoryIndex: 20031,\n  memoryMarker: `[[NEXTCLOUDMARIADBUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `Nextcloud MariaDB User`,\n  tooltip: `The Nextcloud MariDB user.`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  nextcloudLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Nextcloud\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const nextcloudLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50021,\n  miteString: `# Begin Nextcloud Section\n\ndn: ou=NextcloudUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NextcloudModerators,ou=NextcloudUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NextcloudAdmins,ou=NextcloudUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NextcloudITAdmins,ou=NextcloudAdmins,ou=NextcloudUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NextcloudAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: NextcloudAdmins\naliasedObjectName: ou=NextcloudITAdmins,ou=NextcloudAdmins,ou=NextcloudUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=NextcloudModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: NextcloudModerators\naliasedObjectName: ou=NextcloudITModerators,ou=NextcloudModerators,ou=NextcloudUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Nextcloud Section\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for NextCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const nextcloudNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40017,\n  miteString: `\n\n# Begin Nextcloud Network Section\n\n nextcloud:\n  driver: overlay\n\n# End Nextcloud Network Section\n\n`,\n}\n","/** @format */\n\n//  nginxServiceMite.ts\n//  MEGADocker\n//  Service Mite for Nginx\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`nginx`]\n\nexport const nginxServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30020,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Nginx Service Sections\n\n nginx:\n  image: nginx:alpine\n  networks:\n   - traefik\n  volumes:\n   - \\${PWD}/logs/nginx:/loglocation\n   - \\${PWD}/nginx/pages:/usr/share/nginx/html\n   - \\${PWD}/nginx/log:/var/log/nginx/log\n  environment:\n   - NGINX_HOST=www.[[PRIMARYDOMAIN]]\n  deploy:\n   replicas: 1\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.nginx.entrypoints=plainhttp'\n    - 'traefik.http.services.nginx.loadbalancer.server.port=80'\n    - 'traefik.http.routers.nginx.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.nginx-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.nginx.middlewares=nginx-force-secure'\n    - 'traefik.http.routers.nginx.service=nginx'\n    - 'traefik.http.routers.nginx-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.nginx-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.nginx-https.service=nginx'\n    - 'traefik.http.routers.nginx-https.tls=true'\n    - 'traefik.http.services.nginx-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=nginx - Nginx web server'\n\n# End Nginx Service Section\n\n`,\n}\n","/** @format */\n\n//  nginx.ts\n//  MEGADocker\n//  A Manikin to generate a Nginx webpage hosting service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { nginxServiceMite } from '../mites/service/nginxServiceMite'\nimport { nginxNetworkMite } from '../mites/network/nginxNetworkMite'\nimport nginxIcon from '../../images/manikin-icons/nginxIcon.png'\nimport { nginxDefaultIndexHtmlMite } from '../mites/custom/nginxDefaultIndexHtmlMite'\nimport { nginxLdifMite } from '../mites/ldif/nginxLdifMite'\n\n/**\n * nginx Manikin\n */\nexport const nginxManikin: IManikin = {\n  description: `HTTP/S Web Server`,\n  folder: `nginx`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`],\n  manikinIcon: nginxIcon,\n  manikinIndex: 10019,\n  memories: [],\n  mites: [nginxLdifMite, nginxServiceMite, nginxNetworkMite, nginxDefaultIndexHtmlMite],\n  name: `Nginx`,\n  ports: [],\n  subfolders: [`pages`, `log`],\n}\n","export default __webpack_public_path__ + \"static/media/nginxIcon.054bfc6d.png\";","/** @format */\n\n//  nginxLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Nginx\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const nginxLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50022,\n  miteString: `# Begin Nginx Section\n\ndn: ou=NginxUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NginxAdmins,ou=NginxUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NginxModerators,ou=NginxUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=NginxAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: NginxAdmins\naliasedObjectName: ou=NginxITAdmins,ou=NginxAdmins,ou=NginxUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=NginxModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: NginxModerators\naliasedObjectName: ou=NginxITModerators,ou=NginxModerators,ou=NginxUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Nginx Section\n`,\n}\n","/** @format */\n\n//  serviceMite.ts\n//  MEGADocker\n//  Network Mite for Nginx\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const nginxNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40018,\n  miteString: `\n\n# Begin Nginx Network Section\n\n nginx:\n  driver: overlay\n\n# End Nginx Network Section\n\n`,\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const nginxDefaultIndexHtmlMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60012,\n  miteFile: {\n    path: `nginx/pages`,\n    name: `index`,\n    extension: `html`,\n    permissions: `644`,\n    contents: `\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Asap\"\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <title>MEGADocker</title>\n  </head>\n  <body>\n    <div id=\"root\">\n      <h1>\n        Welcome to MegaDocker!\n      </h1>\n      <p>\n        You should populate your /nginx/pages folder inside of your mob folder with some actual content.\n      </p>\n    </div>\n  </body>\n</html>\n    `,\n  },\n}\n","/** @format */\n\n//  opensourcePOSServiceMite.ts\n//  MEGADocker\n//  Service Mite for opensourcePOS\n//  Created by George Georgulas IV on 3/5/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`opensourcepos`]\n\nexport const opensourcePOSServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30021,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin opensourcePOS Service Section\n\n opensourcepos-app:\n  image: jekkos/opensourcepos:latest\n  networks:\n   - opensourcepos\n   - traefik\n  volumes:\n   - \\${PWD}/opensourcepos/app:/app/public/uploads\n#   - \\${PWD}/logs/opensourcepos/app:/app/application/logs\n  environment:\n   - CI_ENV=production\n   - FORCE_HTTPS=true\n   - PHP_TIMEZONE=UTC\n   - MYSQL_USERNAME=[[OPENSOURCEPOSMARIADBUSER]]\n   - MYSQL_PASSWORD=[[OPENSOURCEPOSMARIADBPASSWORD]]\n   - MYSQL_DB_NAME=opensourcepos\n   - MYSQL_HOST_NAME=[[MOBNAME]]_opensourcepos-mariadb\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.opensourcepos.entrypoints=plainhttp'\n    - 'traefik.http.services.opensourcepos.loadbalancer.server.port=80'\n    - 'traefik.http.routers.opensourcepos.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.opensourcepos-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.opensourcepos.middlewares=opensourcepos-force-secure'\n    - 'traefik.http.routers.opensourcepos.service=opensourcepos'\n    - 'traefik.http.routers.opensourcepos-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.opensourcepos-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.opensourcepos-https.service=opensourcepos'\n    - 'traefik.http.routers.opensourcepos-https.tls=true'\n    - 'traefik.http.services.opensourcepos-interface-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=opensourcePOS - Point of Sale system'\n\n opensourcepos-mariadb:\n  image: mariadb:latest\n  networks:\n   - opensourcepos\n  volumes:\n## TODO: add database.sql customMite\n   - \\${PWD}/opensourcepos/database/database.sql:/docker-entrypoint-initdb.d/database.sql\n   - \\${PWD}/opensourcepos/mariadb:/var/lib/mysql\n  environment:\n   - MYSQL_ROOT_PASSWORD=[[OPENSOURCEPOSMARIADBROOTPASSWORD]]\n   - MYSQL_DATABASE=opensourcepos\n   - MYSQL_USER=[[OPENSOURCEPOSMARIADBUSER]]\n   - MYSQL_PASSWORD=[[OPENSOURCEPOSMARIADBPASSWORD]]\n  deploy:\n   restart_policy:\n    condition: any\n\n# End opensourcePOS Service Section\n\n`,\n}\n","/** @format */\n\n//  minpos.ts\n//  MEGADocker\n//  A Manikin to generate a MinPOS point of sale service\n//  Created by George Georgulas IV on 3/04/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport opensourceposIcon from '../../images/manikin-icons/opensourceposIcon.png'\nimport { opensourcePOSNetworkMite } from '../mites/network/opensourcePOSNetworkMite'\nimport { opensourcePOSServiceMite } from '../mites/service/opensourcePOSServiceMite'\nimport { opensourcePOSMariaDBPassword } from '../memories/opensourcePOSMariaDBPassword'\nimport { opensourcePOSMariaDBUser } from '../memories/opensourcePOSMariaDBUser'\nimport { opensourcePOSMariaDBRootPassword } from '../memories/opensourcePOSMariaDBRootPassword'\nimport { opensourceposLdifMite } from '../mites/ldif/opensourceposLdifMite'\n\n/**\n * minpos Manikin\n */\nexport const opensourceposManikin: IManikin = {\n  description: `Point of Sale`,\n  folder: `opensourcepos`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`, `Financial`],\n  manikinIcon: opensourceposIcon,\n  manikinIndex: 10020,\n  memories: [opensourcePOSMariaDBPassword, opensourcePOSMariaDBUser, opensourcePOSMariaDBRootPassword],\n  mites: [opensourceposLdifMite, opensourcePOSServiceMite, opensourcePOSNetworkMite],\n  name: `osPOS`,\n  ports: [],\n  subfolders: [`mariadb`, `opensourcepos`],\n}\n","export default __webpack_public_path__ + \"static/media/opensourceposIcon.4ae12f81.png\";","/** @format */\n\n//  opensourcePOSMariaDBPassword.ts\n//  MEGADocker\n//  The password that opensourcePOS will use to connect to it's MariaDB database\n//  Created by George Georgulas IV on 3/5/2021.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const opensourcePOSMariaDBPassword: IMemory = {\n  memoryIndex: 20034,\n  memoryMarker: `[[OPENSOURCEPOSMARIADBPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `osPOS MariaDB Password`,\n  tooltip: `The osPOS MariaDB user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  opensourcePOSMariaDBUser.ts\n//  MEGADocker\n//  The user opensourcePOS will use to connect to it's MariaDB database\n//  Created by George Georgulas IV on 3/5/2021.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const opensourcePOSMariaDBUser: IMemory = {\n  memoryIndex: 20036,\n  memoryMarker: `[[OPENSOURCEPOSMARIADBUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `osPOS MariaDB User`,\n  tooltip: `The osPOS MariaDB user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  opensourcePOSMariaDBRootPassword.ts\n//  MEGADocker\n//  The root password for opensourcePOS's MariaDB instance\n//  Created by George Georgulas IV on 3/5/2021.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const opensourcePOSMariaDBRootPassword: IMemory = {\n  memoryIndex: 20035,\n  memoryMarker: `[[OPENSOURCEPOSMARIADBROOTPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `osPOS MariaDB Root Password`,\n  tooltip: `The root password for osPOS's MariaDB instance`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  opensourceposLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for osPOS\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const opensourceposLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50023,\n  miteString: `# Begin OSPOS Section\n\ndn: ou=OSPOSUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=OSPOSAdmins,ou=OSPOSUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=OSPOSModerators,ou=OSPOSUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=OSPOSAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: OSPOSAdmins\naliasedObjectName: ou=OSPOSITAdmins,ou=OSPOSAdmins,ou=OSPOSUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=OSPOSModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: OSPOSModerators\naliasedObjectName: ou=OSPOSITModerators,ou=OSPOSModerators,ou=OSPOSUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End OSPOS Section\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for OwnCloud\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const opensourcePOSNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40019,\n  miteString: `\n\n# Begin opensourcePOS Network Section\n\n opensourcepos:\n  driver: overlay\n\n# End opensourcePOS Network Section\n\n`,\n}\n","/** @format */\n\n//  piholeServiceMite.ts\n//  MEGADocker\n//  Service Mite for Pihole\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`pihole`]\n\nexport const piholeServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30023,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n  \n# Begin pihole service section\n\n pihole:\n  image: pihole/pihole:latest\n  networks:\n   - traefik\n  ports:\n   - 53:53/tcp\n   - 53:53/udp\n  environment:\n   TZ=$HOSTTIMEZONE\n   WEBPASSWORD=[[PIHOLEPASSWORD]]\n  volumes:\n   - \\${PWD}/logs/pihole:/loglocation\n   - \\${PWD}/pihole/etc-pihole/:/etc/pihole/\n   - \\${PWD}/pihole/etc-dnsmasq/:/etc/dnsmasq.d/\n  dns:\n   - 9.9.9.9\n   - 8.8.8.8\n   - 8.8.4.4\n   - 1.1.1.1\n   - 1.0.0.1\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.pihole.entrypoints=plainhttp'\n    - 'traefik.http.services.pihole.loadbalancer.server.port=80'\n    - 'traefik.http.routers.pihole.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.pihole-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.pihole.middlewares=pihole-force-secure'\n    - 'traefik.http.routers.pihole.service=pihole'\n    - 'traefik.http.routers.pihole-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.pihole-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.pihole-https.service=pihole'\n    - 'traefik.http.routers.pihole-https.tls=true'\n    - 'traefik.http.services.pihole-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=Pihole DNS-based adblocker'\n\n# End pihole service section\n\n`,\n}\n","/** @format */\n\n//  primaryDomain.ts\n//  MEGADocker\n//  The variable for the domain name of your primary web domain\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const piholePassword: IMemory = {\n  memoryIndex: 20037,\n  memoryMarker: `[[PIHOLEPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `Pihole Password`,\n  tooltip: `The Pihole admin user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  pihole.ts\n//  MEGADocker\n//  A Manikin to generate a pihole DNS adblocker service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { piholeServiceMite } from '../mites/service/piholeServiceMite'\nimport { piholeNetworkMite } from '../mites/network/piholeNetworkMite'\nimport { piholePassword } from '../memories/piholePassword'\nimport piholeIcon from '../../images/manikin-icons/piholeIcon.png'\nimport { piholeLdifMite } from '../mites/ldif/piholeLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const piholeManikin: IManikin = {\n  description: `Network Ad Blocker`,\n  folder: `pihole`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Utility`, `Network`],\n  manikinIcon: piholeIcon,\n  manikinIndex: 10022,\n  memories: [piholePassword],\n  mites: [piholeLdifMite, piholeServiceMite, piholeNetworkMite],\n  name: `Pihole`,\n  ports: [],\n  subfolders: [`etc-pihole`, `etc-dnsmasq`],\n}\n","export default __webpack_public_path__ + \"static/media/piholeIcon.7339fee8.png\";","/** @format */\n\n//  piholeLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Pihole\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const piholeLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50025,\n  miteString: `# Begin Pihole Section\n\ndn: ou=PiholeUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PiholeAdmins,ou=PiholeUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PiholeITAdmins,ou=PiholeAdmins,ou=PiholeUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PiholeAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: PiholeAdmins\naliasedObjectName: ou=PiholeITAdmins,ou=PiholeAdmins,ou=PiholeUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Pihole Section\n`,\n}\n","/** @format */\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const piholeNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40021,\n  miteString: `\n\n# Begin pihole Network Section\n\n pihole:\n  driver: overlay\n\n# End pihole Network Section\n\n`,\n}\n","/** @format */\n\n//  portainerServiceMite.ts\n//  MEGADocker\n//  Service Mite for Portainer\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`portainer`]\n\nexport const portainerServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30025,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Portainer Service Section\n\n portainer:\n  image: portainer/portainer\n  networks:\n   - traefik\n  command: '--no-auth'\n  volumes:\n   - \\${PWD}/logs/portainer:/loglocation\n   - /var/run/docker.sock:/var/run/docker.sock\n  deploy:\n   mode: global\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.portainer.entrypoints=plainhttp'\n    - 'traefik.http.services.portainer.loadbalancer.server.port=9000'\n    - 'traefik.http.routers.portainer.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.portainer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.portainer.middlewares=portainer-force-secure'\n    - 'traefik.http.routers.portainer.service=portainer'\n    - 'traefik.http.routers.portainer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.portainer-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.portainer-https.service=portainer'\n    - 'traefik.http.routers.portainer-https.tls=true'\n    - 'traefik.http.services.portainer-https.loadbalancer.server.port=9000'\n    - 'com.MegaDocker.description=Portainer docker host management UI'\n   placement:\n    constraints:\n     - node.role == manager\n\n# End Portainer Service Section\n\n`,\n}\n","/** @format */\n\n//  portainer.ts\n//  MEGADocker\n//  A Manikin to generate a Portainer Docker UI service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { portainerServiceMite } from '../mites/service/portainerServiceMite'\nimport { portainerNetworkMite } from '../mites/network/portainerNetworkMite'\nimport portainerIcon from '../../images/manikin-icons/portainerIcon.png'\nimport { portainerLdifMite } from '../mites/ldif/portainerLdifMite'\n\n/**\n * portainer Manikin\n */\nexport const portainerManikin: IManikin = {\n  description: `Docker Host GUI`,\n  folder: `portainer`,\n  isSelected: false,\n  isCore: false,\n  manikinGroups: [`Infrastructure`, `Utility`, `Monitoring`, `Network`],\n  manikinIcon: portainerIcon,\n  manikinIndex: 10023,\n  memories: [],\n  mites: [portainerLdifMite, portainerServiceMite, portainerNetworkMite],\n  name: `Portainer`,\n  ports: [],\n  subfolders: [],\n}\n","export default __webpack_public_path__ + \"static/media/portainerIcon.73d6b827.png\";","/** @format */\n\n//  portainerLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Portainer\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const portainerLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50027,\n  miteString: `# Begin Portainer Section\n\ndn: ou=PortainerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PortainerAdmins,ou=PortainerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PortainerITAdmins,ou=PortainerAdmins,ou=PortainerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=PortainerAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: PortainerAdmins\naliasedObjectName: ou=PortainerITAdmins,ou=PortainerAdmins,ou=PortainerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Portainer Section\n`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for Portainer\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const portainerNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40023,\n  miteString: `\n\n# Begin Portainer Network Section\n\n portainer:\n  driver: overlay\n\n# End Portainer Network Section\n\n`,\n}\n","/** @format */\n\n//  rocketchatServiceMite.ts\n//  MEGADocker\n//  Service Mite for RocketChat\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`rocketchat`]\n\nexport const rocketchatServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30026,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Rocketchat Service Section\n\n rocketchat-mongo:\n  image: mongo\n  networks:\n   - rocketchat\n  command: mongod --replSet rocketchat\n  volumes:\n   - \\${PWD}/rocketchat/database:/data/db\n   - \\${PWD}/rocketchat/dump:/dump\n  deploy:\n   restart_policy:\n    condition: any\n\n rocketchat-mongo-replicator:\n  image: mongo\n  networks:\n   - rocketchat\n  command: 'mongo [[MOBNAME]]_rocketchat-mongo/rocketchat --eval \"rs.initiate({ _id: ''rocketchat'', members: [ { _id: 0, host: ''[[MOBNAME]]_rocketchat-mongo:27017'' } ]})\"'\n  deploy:\n   restart_policy:\n    condition: on-failure\n\n rocketchat-app:\n  image: rocketchat/rocket.chat\n  command: node main.js\n  networks:\n   - ldap\n   - rocketchat\n   - traefik\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.rocketchat.entrypoints=plainhttp'\n    - 'traefik.http.services.rocketchat.loadbalancer.server.port=3000'\n    - 'traefik.http.routers.rocketchat.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.rocketchat-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.rocketchat.middlewares=rocketchat-force-secure'\n    - 'traefik.http.routers.rocketchat.service=rocketchat'\n    - 'traefik.http.routers.rocketchat-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.rocketchat-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.rocketchat-https.service=rocketchat'\n    - 'traefik.http.routers.rocketchat-https.tls=true'\n    - 'traefik.http.services.rocketchat-https.loadbalancer.server.port=3000'\n    - 'com.MegaDocker.description=RockeChat team management software'\n  volumes:\n   - \\${PWD}/rocketchat/uploads:/app/uploads\n  environment:\n   - PORT=3000\n   - ROOT_URL=https://rocketchat.[[PRIMARYDOMAIN]]\n   - MONGO_URL=mongodb://[[MOBNAME]]_rocketchat-mongo:27017/rocketchat\n   - MONGO_OPLOG_URL=mongodb://[[MOBNAME]]_rocketchat-mongo:27017/local\n\n rocketchat-hubot:\n  image: rocketchat/hubot-rocketchat:latest\n  deploy:\n   restart_policy:\n    condition: any\n  environment:\n   - ROCKETCHAT_URL=[[MOBNAME]]_rocketchat-app:3000\n   - ROCKETCHAT_ROOM=GENERAL\n   - ROCKETCHAT_USER=[[ROCKETCHATBOTUSERNAME]]\n   - ROCKETCHAT_PASSWORD=[[ROCKETCHATBOTPASSWORD]]\n   - BOT_NAME=bot\n  # you can add more scripts as you'd like here, they need to be installable by npm\n   - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics\n  volumes:\n   - \\${PWD}/rocketchat/hubot-scripts:/home/hubot/scripts\n# this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier, and should be forwarded through traefik over tcp\n  ports:\n   - 3001:8080\n\n# End Rocketchat Service Section\n\n`,\n}\n","/** @format */\n\n//  rocketchat.ts\n//  MEGADocker\n//  A Manikin to generate a RocketChat team chat service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { rocketchatServiceMite } from '../mites/service/rocketchatServiceMite'\nimport { rocketchatNetworkMite } from '../mites/network/rocketchatNetworkMite'\nimport rocketchatIcon from '../../images/manikin-icons/rocketchatIcon.png'\nimport { rocketchatBotPassword } from '../memories/rocketchatBotPassword'\nimport { rocketchatBotUsername } from '../memories/rocketchatBotUsername'\nimport { rocketchatLdifMite } from '../mites/ldif/rocketchatLdifMite'\n\n/**\n * rocketchat Manikin\n * replace MVOs\n */\nexport const rocketchatManikin: IManikin = {\n  description: `Collaboration`,\n  folder: `rocketchat`,\n  // isCore: true,\n  // isSelected: true,\n  manikinGroups: [`Utility`, `Organization`, `Productivity`],\n  isCore: false,\n  isSelected: false,\n  manikinIcon: rocketchatIcon,\n  manikinIndex: 10024,\n  memories: [rocketchatBotPassword, rocketchatBotUsername],\n  mites: [rocketchatLdifMite, rocketchatServiceMite, rocketchatNetworkMite],\n  name: `RocketChat`,\n  ports: [],\n  subfolders: [`database`, `dump`, `hubot-scripts`, `uploads`],\n}\n","export default __webpack_public_path__ + \"static/media/rocketchatIcon.e1d709e1.png\";","/** @format */\n\n//  rocketchatBotPassword.ts\n//  MEGADocker\n//  The variable for\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const rocketchatBotPassword: IMemory = {\n  memoryIndex: 20039,\n  memoryMarker: `[[ROCKETCHATBOTPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `RocketChat Bot Password`,\n  tooltip: `The RocketChat bot user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  rocketchatBotUsername.ts\n//  MEGADocker\n//  The variable for\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const rocketchatBotUsername: IMemory = {\n  memoryIndex: 20040,\n  memoryMarker: `[[ROCKETCHATBOTUSERNAME]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `RocketChat Bot User`,\n  tooltip: `The RocketChat bot user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  rocketchatLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Rocketchat\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const rocketchatLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50028,\n  miteString: `# Begin Rocketchat Section\n\ndn: ou=RocketchatUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RocketchatModerators,ou=RocketchatUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RocketchatAdmins,ou=RocketchatUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RocketchatGuestUsers,ou=ExternalUsers,ou=HumanUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RocketchatITAdmins,ou=RocketchatAdmins,ou=RocketchatUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RocketchatITModerators,ou=RocketchatModerators,ou=RocketchatUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RocketchatAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: RocketchatAdmins\naliasedObjectName: ou=RocketchatITAdmins,ou=RocketchatAdmins,ou=RocketchatUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=RocketchatModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: RocketchatModerators\naliasedObjectName: ou=RocketchatITModerators,ou=RocketchatModerators,ou=RocketchatUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Rocketchat Section`,\n}\n","/** @format */\n\n//  traefikNetworkMite.ts\n//  MEGADocker\n//  Network Mite for RocketChat\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const rocketchatNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40024,\n  miteString: `\n\n# Begin RocketChat Network Section\n\n rocketchat:\n  driver: overlay\n\n# End RocketChat Network Section\n\n`,\n}\n","/** @format */\n\n//  styleguidistServiceMite.ts\n//  MEGADocker\n//  Service Mite for Styleguidist\n//  Created by George Georgulas IV on 8/15/20.\n//  Copyright © 2020-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`style`]\n\nexport const styleguidistServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30027,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Styleguidist Service Section\n\n styleguidist:\n  image: georgegeorgulasiv/component-library\n  volumes:\n   - \\${PWD}/styleguidist/components:/app/src/shared/components\n## TODO: add mite for image typings - probably just use the ones we use internally\n   - \\${PWD}/styleguidist/typings:/app/src/shared/typings\n   - \\${PWD}/styleguidist/interfaces:/app/src/shared/interfaces\n   - \\${PWD}/styleguidist/assets:/app/src/shared/assets\n   - \\${PWD}/styleguidist/objects:/app/src/shared/objects\n   - \\${PWD}/styleguidist/configs/package.json:/app/package.json\n   - \\${PWD}/styleguidist/configs/styleguide.config.js:/app/styleguide.config.js\n   - \\${PWD}/styleguidist/configs/tsconfig.json:/app/tsconfig.json\n   - \\${PWD}/styleguidist/configs/webpack.config.js:/app/webpack.config.js\n  networks:\n   - styleguidist\n   - traefik\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.styleguidist.entrypoints=plainhttp'\n    - 'traefik.http.services.styleguidist.loadbalancer.server.port=6060'\n    - 'traefik.http.routers.styleguidist.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.styleguidist-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.styleguidist.middlewares=styleguidist-force-secure'\n    - 'traefik.http.routers.styleguidist.service=styleguidist'\n    - 'traefik.http.routers.styleguidist-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.styleguidist-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.styleguidist-https.service=styleguidist'\n    - 'traefik.http.routers.styleguidist-https.tls=true'\n    - 'traefik.http.services.styleguidist-https.loadbalancer.server.port=6060'\n    - 'com.MegaDocker.description=Styleguidist - a web sandbox for a react component library.'\n\n# End Styleguidist Service Section\n\n`,\n}\n","/** @format */\n\n//  .ts\n//  MEGADocker\n//  A Manikin to generate a react component styleguidist service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { styleguidistServiceMite } from '../mites/service/styleguidistServiceMite'\nimport { styleguidistNetworkMite } from '../mites/network/styleguidistNetworkMite'\nimport styleguidistIcon from '../../images/manikin-icons/styleguidistIcon.png'\nimport { styleguidistPackageDotJsonMite } from '../mites/custom/styleguidistPackageDotJsonMite'\nimport { styleguidistStyleguideDotConfigDotJsMite } from '../mites/custom/styleguidistStyleguideDotConfigDotJsMite'\nimport { styleguidistTsconfigDotJsonMite } from '../mites/custom/styleguidistTsconfigDotJsonMite'\nimport { styleguidistWebpackDotConfigDotJsMite } from '../mites/custom/styleguidistWebpackDotConfigDotJsMite'\nimport { styleguidistLdifMite } from '../mites/ldif/styleguidistLdifMite'\n/**\n * styleguidist Manikin\n */\nexport const styleguidistManikin: IManikin = {\n  description: `React Component Library`,\n  isCore: false,\n  isSelected: false,\n  folder: `styleguidist`,\n  manikinGroups: [`Development`, `Utility`, `Organization`, `Productivity`],\n  manikinIcon: styleguidistIcon,\n  manikinIndex: 10025,\n  memories: [],\n  name: `Styleguidist`,\n  mites: [\n    styleguidistLdifMite,\n    styleguidistServiceMite,\n    styleguidistNetworkMite,\n    styleguidistPackageDotJsonMite,\n    styleguidistStyleguideDotConfigDotJsMite,\n    styleguidistTsconfigDotJsonMite,\n    styleguidistWebpackDotConfigDotJsMite,\n  ],\n  ports: [],\n  subfolders: [`assets`, `components`, `configs`, `docs`, `interfaces`, `objects`, `typings`],\n}\n","export default __webpack_public_path__ + \"static/media/styleguidistIcon.d21ca764.png\";","/** @format */\n\n//  styleguidistLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Styleguidist\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const styleguidistLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50029,\n  miteString: `# Begin Styleguidist Section\n\ndn: ou=StyleguidistUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=StyleguidistAdmins,ou=StyleguidistUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=StyleguidistModerators,ou=StyleguidistUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=StyleguidistAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: StyleguidistAdmins\naliasedObjectName: ou=StyleguidistITAdmins,ou=StyleguidistAdmins,ou=StyleguidistUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=StyleguidistModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: StyleguidistModerators\naliasedObjectName: ou=StyleguidistITModerators,ou=StyleguidistModerators,ou=StyleguidistUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Styleguidist Section\n`,\n}\n","/** @format */\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const styleguidistNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40025,\n  miteString: `\n\n# Begin Styleguidist Network Section\n\n styleguidist:\n  driver: overlay\n\n# End Styleguidist Network Section\n\n`,\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const styleguidistPackageDotJsonMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60014,\n  miteFile: {\n    path: `styleguidist/configs`,\n    name: `package`,\n    extension: `json`,\n    permissions: `644`,\n    contents: `{\n      \"name\": \"styleguidist-typescript-react-material-ui-component-library\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"build\": \"./node_modules/.bin/webpack && cp src/index.html dist/index.html\",\n        \"start\": \"./node_modules/.bin/webpack-dev-server --port 9000 --open --hot --inline --content-base src\",\n        \"styleguide\": \"styleguidist server\",\n        \"styleguide:build\": \"styleguidist build\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      },\n      \"author\": \"george@orb.run\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@material-ui/core\": \"latest\",\n        \"@material-ui/icons\": \"latest\",\n        \"@material-ui/styles\": \"latest\",\n        \"@types/material-ui\": \"latest\",\n        \"@types/react\": \"16.9.22\",\n        \"@types/react-dom\": \"16.9.5\",\n        \"@types/react-intl-redux\": \"0.1.14\",\n        \"react\": \"16.12.0\",\n        \"react-dom\": \"16.12.0\",\n        \"react-intl\": \"3.12.0\",\n        \"react-intl-redux\": \"2.2.0\",\n        \"react-redux\": \"7.2.0\",\n        \"redux\": \"4.0.5\",\n        \"typesafe-actions\": \"4.4.2\"\n      },\n      \"devDependencies\": {\n        \"css-loader\": \"3.4.2\",\n        \"file-loader\": \"^6.2.0\",\n        \"react-docgen-typescript\": \"1.16.2\",\n        \"react-styleguidist\": \"10.6.2\",\n        \"source-map-loader\": \"0.2.4\",\n        \"style-loader\": \"1.1.3\",\n        \"ts-loader\": \"6.2.1\",\n        \"typescript\": \"latest\",\n        \"webpack\": \"4.41.5\",\n        \"webpack-cli\": \"3.3.11\",\n        \"webpack-dev-server\": \"3.10.1\"\n      }\n    }\n    `,\n  },\n}\n","/**\n * @format\n */\n\n/* eslint-disable no-template-curly-in-string */\n// for line 26\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const styleguidistStyleguideDotConfigDotJsMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60015,\n  miteFile: {\n    path: `styleguidist/configs`,\n    name: `styleguide.config`,\n    extension: `js`,\n    permissions: `644`,\n    contents: `const glob = require(\"glob\");\n    const path = require(\"path\");\n    const fs   = require(\"fs\");\n    \n    module.exports = {\n      components: () => {\n        return glob.sync(\"src/shared/components/**/*.{ts,tsx}\").filter(file => {\n          if (file.match(/connect.tsx$/)) {\n            return true\n          } else {\n            const pathObject = path.parse(file);\n            pathObject.ext = \\`.connect\\${pathObject.ext}\\`\n            const { root, dir, ext, name } = pathObject;\n            return !fs.existsSync(path.format({ root, dir, ext, name }));\n          }\n        });\n      },\n      propsParser: require(\"react-docgen-typescript\").withDefaultConfig({\n        savePropValueAsString: true,\n      }).parse,\n      webpackConfig: Object.assign({}, require(\"./webpack.config\"), {}),\n      styleguideComponents: {\n        Wrapper: __dirname + \"/src/styleguide/Wrapper.tsx\",\n      },\n      styleguideDir: \"docs\",\n    };\n    `,\n  },\n}\n","/** @format */\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const styleguidistTsconfigDotJsonMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60016,\n  miteFile: {\n    path: `styleguidist/configs`,\n    name: `tsconfig`,\n    extension: `json`,\n    permissions: `644`,\n    contents: `{\n      \"compilerOptions\": {\n        \"esModuleInterop\": true,\n        \"outDir\": \"./dist/\",\n        \"sourceMap\": true,\n        \"noImplicitAny\": true,\n        \"module\": \"commonjs\",\n        \"lib\": [\"es6\", \"dom\", \"es2017\"],\n        \"target\": \"esnext\",\n        \"jsx\": \"react\"\n      },\n      \"include\": [\n        \"src\",\n        \"public\",\n        \"typings\",\n        \"./src/**/*\"\n      ]\n    }\n    `,\n  },\n}\n","/**\n * @format\n */\n\n/* eslint-disable no-useless-escape */\n// for lines 29 - 32\n\nimport { ICustomMite } from '../../../interfaces/ICustomMite'\n\nexport const styleguidistWebpackDotConfigDotJsMite: ICustomMite = {\n  type: `Custom`,\n  miteString: ``,\n  miteIndex: 60017,\n  miteFile: {\n    path: `styleguidist/configs`,\n    name: `webpack.config`,\n    extension: `js`,\n    permissions: `644`,\n    contents: `module.exports = {\n      entry: \"./src/index.tsx\",\n      output: {\n        filename: \"bundle.js\",\n        path: __dirname + \"/dist\"\n      },\n      devServer: {\n        host: '0.0.0.0',\n        port: 6060,\n        disableHostCheck: true\n      },\n      devtool: \"source-map\",\n      resolve: {\n        extensions: [\".ts\", \".tsx\", \".js\", \".json\"]\n      },\n      module: {\n        rules: [\n          { test: /\\.tsx?$/, loader: \"ts-loader\" },\n          { test: /\\.(png|jpe?g|gif|tif|bmp)$/i, use: [{loader: 'file-loader'}] },\n          { enforce: \"pre\", test: /\\.js$/, loader: \"source-map-loader\" },\n          { test: /\\.css$/, use: [\"style-loader\", \"css-loader\"] }\n        ]\n      }\n    };`,\n  },\n}\n","/** @format */\n\n//  swarmpitServiceMite.ts\n//  MEGADocker\n//  Service Mite for Swarmpit\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`swarmpit`]\n\nexport const swarmpitServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30028,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Swarmpit Service Section\n\n swarmpit-app:\n  image: swarmpit/swarmpit\n  environment:\n   - SWARMPIT_DB=http://[[MOBNAME]]_swarmpit-couchbase-db:5984\n   - SWARMPIT_INFLUXDB=http://[[MOBNAME]]_swarmpit-influx-db:8086\n  volumes:\n   - \\${PWD}/logs/swarmpit:/loglocation\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  networks:\n   - traefik\n   - swarmpit\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.swarmpit.entrypoints=plainhttp'\n    - 'traefik.http.services.swarmpit.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.swarmpit.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.swarmpit-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.swarmpit.middlewares=swarmpit-force-secure'\n    - 'traefik.http.routers.swarmpit.service=swarmpit'\n    - 'traefik.http.routers.swarmpit-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.swarmpit-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.swarmpit-https.service=swarmpit'\n    - 'traefik.http.routers.swarmpit-https.tls=true'\n    - 'traefik.http.services.swarmpit-https.loadbalancer.server.port=8080'\n    - 'com.MegaDocker.description=Swarmpit App - a web GUI for Docker Swarm.'\n   resources:\n    limits:\n     cpus: '0.50'\n     memory: 1024M\n    reservations:\n     cpus: '0.25'\n     memory: 512M\n   placement:\n    constraints:\n     - node.role == manager\n\n swarmpit-couchbase-db:\n  image: couchdb:2.3.0\n  volumes:\n   - \\${PWD}/logs/swarmpit:/loglocation\n   - \\${PWD}/swarmpit/couchbase-data:/opt/couchdb/data\n  networks:\n   - swarmpit\n  deploy:\n   labels:\n    - 'com.MegaDocker.description=Swarmpit Couchbase - Swarmpit couchdb database'\n   resources:\n    limits:\n     cpus: '0.30'\n     memory: 256M\n    reservations:\n     cpus: '0.15'\n     memory: 128M\n\n swarmpit-influx-db:\n  image: influxdb:1.7\n  volumes:\n   - \\${PWD}/logs/swarmpit:/loglocation\n   - \\${PWD}/swarmpit/influx-data:/var/lib/influxdb\n  networks:\n   - swarmpit\n  deploy:\n   labels:\n    - 'com.MegaDocker.description=Swarmpit Influx - Swarmpit influx database'\n   restart_policy:\n    condition: any\n   resources:\n    limits:\n     cpus: '0.60'\n     memory: 512M\n    reservations:\n     cpus: '0.30'\n     memory: 128M\n\n swarmpit-agent:\n  image: swarmpit/agent\n  environment:\n   - DOCKER_API_VERSION=1.35\n  volumes:\n   - \\${PWD}/logs/swarmpit:/loglocation\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  networks:\n   - swarmpit\n  deploy:\n   restart_policy:\n    condition: any\n   mode: global\n   labels:\n    - 'swarmpit.agent=true'\n    - 'com.MegaDocker.description=Swarmpit Agent - Swarmpit event monitoring daemon'\n   resources:\n    limits:\n     cpus: '0.10'\n     memory: 64M\n    reservations:\n     cpus: '0.05'\n     memory: 32M\n\n# End Swarmpit Service Section\n\n`,\n}\n","/** @format */\n\n//  .ts\n//  MEGADocker\n//  A Manikin to generate a  service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { swarmpitServiceMite } from '../mites/service/swarmpitServiceMite'\nimport { swarmpitNetworkMite } from '../mites/network/swarmpitNetworkMite'\nimport swarmpitIcon from '../../images/manikin-icons/swarmpitIcon.png'\nimport { swarmpitLdifMite } from '../mites/ldif/swarmpitLdifMite'\n\n/**\n * swarmpit Manikin\n */\nexport const swarmpitManikin: IManikin = {\n  description: `Docker Swarm GUI`,\n  isCore: true,\n  isSelected: true,\n  manikinGroups: [`Development`, `Utility`, `Organization`, `Productivity`],\n  folder: `swarmpit`,\n  manikinIcon: swarmpitIcon,\n  manikinIndex: 10026,\n  memories: [],\n  name: `Swarmpit`,\n  mites: [swarmpitLdifMite, swarmpitServiceMite, swarmpitNetworkMite],\n  ports: [],\n  subfolders: [`couchbase-data`, `influx-data`],\n}\n","export default __webpack_public_path__ + \"static/media/swarmpitIcon.a9733000.png\";","/** @format */\n\n//  swarmpitLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Swarmpit\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const swarmpitLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50030,\n  miteString: `# Begin Swarmpit section\n\ndn: ou=SwarmpitUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SwarmpitAdmins,ou=SwarmpitUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SwarmpitITAdmins,ou=SwarmpitAdmins,ou=SwarmpitUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SwarmpitAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: SwarmpitAdmins\naliasedObjectName: ou=SwarmpitITAdmins,ou=SwarmpitAdmins,ou=SwarmpitUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Swarmpit Section\n`,\n}\n","/** @format */\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const swarmpitNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40026,\n  miteString: `\n\n# Begin Swarmpit Network Section\n\n swarmpit:\n  driver: overlay\n\n# End Swarmpit Network Section\n\n`,\n}\n","/** @format */\n\n//  syncthingServiceMite.ts\n//  MEGADocker\n//  Service Mite for Syncthing\n//  Created by George Georgulas IV on 3/03/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`syncthing`]\n\nexport const syncthingServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30029,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Syncthing Service Section\n\n  syncthing:\n   image: syncthing/syncthing:latest\n   networks:\n    - traefik\n   environment:\n    - PUID=$HOSTUSERID\n    - PGID=$HOSTUSERGID\n   volumes:\n    - \\${PWD}/syncthing/data:/var/syncthing\n   deploy:\n    restart_policy:\n     condition: any\n    labels:\n     - 'traefik.enable=true'\n     - 'traefik.http.routers.syncthing.entrypoints=plainhttp'\n     - 'traefik.http.services.syncthing.loadbalancer.server.port=8384'\n     - 'traefik.http.routers.syncthing.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n     - 'traefik.http.middlewares.syncthing-force-secure.redirectscheme.scheme=https'\n     - 'traefik.http.routers.syncthing.middlewares=syncthing-force-secure'\n     - 'traefik.http.routers.syncthing.service=syncthing'\n     - 'traefik.http.routers.syncthing-https.entrypoints=encryptedhttp'\n     - 'traefik.http.routers.syncthing-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n     - 'traefik.http.routers.syncthing-https.service=syncthing'\n     - 'traefik.http.routers.syncthing-https.tls=true'\n     - 'traefik.http.services.syncthing-https.loadbalancer.server.port=8384'\n     - 'com.MegaDocker.description=syncthing - syncthing filesharing for video files'\n \n# End Syncthing Service Section\n\n`,\n}\n","/** @format */\n\n//  .ts\n//  MEGADocker\n//  A Manikin to generate a react component styleguidist service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { syncthingServiceMite } from '../mites/service/syncthingServiceMite'\nimport syncthingIcon from '../../images/manikin-icons/syncthingIcon.png'\nimport { syncthingLdifMite } from '../mites/ldif/syncthingLdifMite'\n\n/**\n * styleguidist Manikin\n */\nexport const syncthingManikin: IManikin = {\n  description: `Folder Synchronization`,\n  isCore: false,\n  isSelected: false,\n  folder: `syncthing`,\n  manikinGroups: [`Development`, `Utility`, `Organization`, `Productivity`],\n  manikinIcon: syncthingIcon,\n  manikinIndex: 10027,\n  memories: [],\n  name: `Syncthing`,\n  mites: [syncthingLdifMite, syncthingServiceMite],\n  ports: [],\n  subfolders: [`data`],\n}\n","export default __webpack_public_path__ + \"static/media/syncthingIcon.9ac49006.png\";","/** @format */\n\n//  syncthingLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Syncthing\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const syncthingLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50031,\n  miteString: `# Begin Syncthing Section\n\ndn: ou=SyncthingUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SyncthingAdmins,ou=SyncthingUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SyncthingModerators,ou=SyncthingUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SyncthingAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: SyncthingAdmins\naliasedObjectName: ou=SyncthingITAdmins,ou=SyncthingAdmins,ou=SyncthingUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=SyncthingModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: SyncthingModerators\naliasedObjectName: ou=SyncthingITModerators,ou=SyncthingModerators,ou=SyncthingUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Syncthing Section\n`,\n}\n","/** @format */\n\n//  tvServiceMite.ts\n//  MEGADocker\n//  Network Mite for sonarr\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`tv`]\n\nexport const tvServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30031,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin TV Service Section\n\n tv:\n  image: linuxserver/sonarr:latest\n  networks:\n   - traefik\n   - tv\n  volumes:\n   - \\${PWD}/media/tv-config:/config\n   - \\${PWD}/media/tv-data:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.tv.entrypoints=plainhttp'\n    - 'traefik.http.services.tv.loadbalancer.server.port=8989'\n    - 'traefik.http.routers.tv.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.tv-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.tv.middlewares=tv-force-secure'\n    - 'traefik.http.routers.tv.service=tv'\n    - 'traefik.http.routers.tv-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.tv-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.tv-https.service=tv'\n    - 'traefik.http.routers.tv-https.tls=true'\n    - 'traefik.http.services.tv-https.loadbalancer.server.port=8989'\n    - 'com.MegaDocker.description=Sonarr - a tv episode search tool'\n\n# End TV Service Section\n\n`,\n}\n","/** @format */\n\n//  pihole.ts\n//  MEGADocker\n//  A Manikin to generate a pihole DNS adblocker service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { tvServiceMite } from '../mites/service/tvServiceMite'\nimport { mediaRequestsServiceMite } from '../mites/service/mediaRequestsServiceMite'\nimport { tvNetworkMite } from '../mites/network/tvNetworkMite'\nimport { plexServiceMite } from '../mites/service/plexServiceMite'\nimport { plexNetworkMite } from '../mites/network/plexNetworkMite'\nimport tvIcon from '../../images/manikin-icons/tvIcon.png'\nimport { booksNetworkMite } from '../mites/network/booksNetworkMite'\nimport { comicsNetworkMite } from '../mites/network/comicsNetworkMite'\nimport { moviesNetworkMite } from '../mites/network/moviesNetworkMite'\nimport { musicNetworkMite } from '../mites/network/musicNetworkMite'\nimport { tvLdifMite } from '../mites/ldif/tvLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const tvManikin: IManikin = {\n  description: `Automatic TV Downloader`,\n  folder: `media`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`],\n  manikinIcon: tvIcon,\n  manikinIndex: 10029,\n  memories: [],\n  mites: [tvLdifMite, tvServiceMite, mediaRequestsServiceMite, plexServiceMite, booksNetworkMite, comicsNetworkMite, moviesNetworkMite, musicNetworkMite, tvNetworkMite, plexNetworkMite],\n  name: `TV`,\n  ports: [],\n  subfolders: [`content`, `newsgroups-config`, `newsgroup-indexer-config`, `plex-config`, `requests-config`, `torrent-config`, `torrent-indexer-config`, `tv-config`],\n}\n","export default __webpack_public_path__ + \"static/media/tvIcon.b83d9330.png\";","/** @format */\n\n//  tvLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Sonarr\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const tvLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50033,\n  miteString: `# Begin Sonarr Section\n\ndn: ou=SonarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SonarrAdmins,ou=SonarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SonarrModerators,ou=SonarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=SonarrAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: SonarrAdmins\naliasedObjectName: ou=SonarrITAdmins,ou=SonarrAdmins,ou=SonarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=SonarrModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: SonarrModerators\naliasedObjectName: ou=SonarrITModerators,ou=SonarrModerators,ou=SonarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Sonarr Section\n`,\n}\n","/** @format */\n\n//  visualizerServiceMite.ts\n//  MEGADocker\n//  Service Mite for docker swarm visualizer\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`visualizer`]\n\nexport const visualizerServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30032,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Visualizer Service Section\n\n visualizer:\n  image: dockersamples/visualizer\n  networks:\n   - traefik\n  volumes:\n   - /var/run/docker.sock:/var/run/docker.sock:ro\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.visualizer.entrypoints=plainhttp'\n    - 'traefik.http.services.visualizer.loadbalancer.server.port=8080'\n    - 'traefik.http.routers.visualizer.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.visualizer-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.visualizer.middlewares=visualizer-force-secure'\n    - 'traefik.http.routers.visualizer.service=visualizer'\n    - 'traefik.http.routers.visualizer-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.visualizer-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.visualizer-https.service=visualizer'\n    - 'traefik.http.routers.visualizer-https.tls=true'\n    - 'traefik.http.services.visualizer-https.loadbalancer.server.port=8080'\n    - 'com.MegaDocker.description=Visualizer - Container node placement web visualizer'\n   placement:\n    constraints:\n     - node.role == manager\n\n\n# End Visualizer Service Section\n\n`,\n}\n","/** @format */\n\n//  visualizer.ts\n//  MEGADocker\n//  A Manikin to generate a Docker Swarm container placement visualizer service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { visualizerServiceMite } from '../mites/service/visualizerServiceMite'\nimport { visualizerNetworkMite } from '../mites/network/visualizerNetworkMite'\nimport visualizerIcon from '../../images/manikin-icons/visualizerIcon.png'\nimport { visualizerLdifMite } from '../mites/ldif/visualizerLdifMite'\n\n/**\n * visualizer Manikin\n */\nexport const visualizerManikin: IManikin = {\n  description: `Docker Swarm Container Placement Visualization`,\n  folder: `visualizer`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Monitoring`, `Utility`],\n  manikinIcon: visualizerIcon,\n  manikinIndex: 10030,\n  memories: [],\n  mites: [visualizerLdifMite, visualizerServiceMite, visualizerNetworkMite],\n  name: `Visualizer`,\n  ports: [],\n  subfolders: [],\n}\n","export default __webpack_public_path__ + \"static/media/visualizerIcon.89cf4619.png\";","/** @format */\n\n//  visualizerLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Visualizer\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const visualizerLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50034,\n  miteString: `# Begin Visualizer Section\n\ndn: ou=VisualizerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=VisualizerAdmins,ou=VisualizerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=VisualizerModerators,ou=VisualizerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=VisualizerAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: VisualizerAdmins\naliasedObjectName: ou=VisualizerITAdmins,ou=VisualizerAdmins,ou=VisualizerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=VisualizerModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: VisualizerModerators\naliasedObjectName: ou=VisualizerITModerators,ou=VisualizerModerators,ou=VisualizerUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Visualizer Section\n`,\n}\n","/** @format */\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const visualizerNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40029,\n  miteString: `\n\n# Begin Visualizer Network Section\n\n visualizer:\n  driver: overlay\n\n# End Visualizer Network Section\n\n`,\n}\n","/** @format */\n\n//  wordpressServiceMite.ts\n//  MEGADocker\n//  Service Mite for Wordpress\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`wordpress`]\n\nexport const wordpressServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30035,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin WordPress Service Section\n\n wordpress:\n  image: wordpress\n  depends_on:\n   - mariadb\n  networks:\n   - wordpress\n   - traefik\n  environment:\n   - WORDPRESS_DB_HOST=[[MOBNAME]]_wordpress-mariadb\n   - WORDPRESS_DB_USER=[[WORDPRESSMARIADBUSER]]\n   - WORDPRESS_DB_PASSWORD=[[WORDPRESSMARIADBPASSWORD]]\n   - WORDPRESS_DB_NAME=wordpress\n  volumes:\n   - \\${PWD}/wordpress/php:/var/www/html\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.wordpress.entrypoints=plainhttp'\n    - 'traefik.http.services.wordpress.loadbalancer.server.port=80'\n    - 'traefik.http.routers.wordpress.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.wordpress-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.wordpress.middlewares=wordpress-force-secure'\n    - 'traefik.http.routers.wordpress.service=wordpress'\n    - 'traefik.http.routers.wordpress-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.wordpress-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.wordpress-https.service=wordpress'\n    - 'traefik.http.routers.wordpress-https.tls=true'\n    - 'traefik.http.services.wordpress-https.loadbalancer.server.port=80'\n    - 'com.MegaDocker.description=WordPress - WordPress blogging platform'\n\n wordpress-mariadb:\n  image: mariadb\n  networks:\n   - wordpress\n  environment:\n   - MYSQL_DATABASE=wordpress\n   - MYSQL_ROOT_PASSWORD=[[WORDPRESSMARIADBROOTPASSWORD]]\n   - MYSQL_USER=[[WORDPRESSMARIADBUSER]]\n   - MYSQL_PASSWORD=[[WORDPRESSMARIADBPASSWORD]]\n  volumes:\n   - \\${PWD}/wordpress/mariadb:/var/lib/mysql\n  deploy:\n   restart_policy:\n    condition: any\n\n# End WordPress Service Section\n\n`,\n}\n","/** @format */\n\n//  wordpressMariaDBPassword.ts\n//  MEGADocker\n//  The variable for Wordpress's MariaDB User's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const wordpressMariaDBPassword: IMemory = {\n  memoryIndex: 20045,\n  memoryMarker: `[[WORDPRESSMARIADBPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `WP MariaDB Password`,\n  tooltip: `The WordPress MariaDB user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  wordpressMariaDBRootPassword.ts\n//  MEGADocker\n//  The variable for the WordPress MariaDB's root user's password\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { passwordValidator } from '../../functions/validators/passwordValidator'\n\nexport const wordpressMariaDBRootPassword: IMemory = {\n  memoryIndex: 20046,\n  memoryMarker: `[[WORDPRESSMARIADBROOTPASSWORD]]`,\n  memoryType: `SecretMemory`,\n  shouldAutocomplete: false,\n  name: `WP MariaDB Root Password`,\n  tooltip: `The WordPress root user's password`,\n  value: ``,\n  valueType: `password`,\n  isReady: false,\n  validator: passwordValidator,\n}\n","/** @format */\n\n//  wordpressMariaDBUser.ts\n//  MEGADocker\n//  The variable for the Wordpress MariaDB username\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMemory } from '../../interfaces/IMemory'\nimport { noWhitespaceOrSymbolsValidator } from '../../functions/validators/noWhitespaceOrSymbolsValidator'\n\nexport const wordpressMariaDBUser: IMemory = {\n  memoryIndex: 20047,\n  memoryMarker: `[[WORDPRESSMARIADBUSER]]`,\n  memoryType: `NormalMemory`,\n  shouldAutocomplete: false,\n  name: `WP MariaDB User`,\n  tooltip: `The WordPress MariaDB user`,\n  value: ``,\n  valueType: `text`,\n  isReady: false,\n  validator: noWhitespaceOrSymbolsValidator,\n}\n","/** @format */\n\n//  wordpress.ts\n//  MEGADocker\n//  A Manikin to generate a WordPress blogging service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\nimport { wordpressServiceMite } from '../mites/service/wordpressServiceMite'\nimport { wordpressNetworkMite } from '../mites/network/wordpressNetworkMite'\nimport { wordpressMariaDBPassword } from '../memories/wordpressMariaDBPassword'\nimport { wordpressMariaDBRootPassword } from '../memories/wordpressMariaDBRootPassword'\nimport { wordpressMariaDBUser } from '../memories/wordpressMariaDBUser'\nimport wordpressIcon from '../../images/manikin-icons/wordpressIcon.png'\nimport { wordpressLdifMite } from '../mites/ldif/wordpressLdifMite'\n\nexport const wordpressManikin: IManikin = {\n  description: `Wordpress Blog`,\n  folder: `wordpress`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`, `Development`],\n  manikinIcon: wordpressIcon,\n  manikinIndex: 10033,\n  memories: [wordpressMariaDBRootPassword, wordpressMariaDBUser, wordpressMariaDBPassword],\n  mites: [wordpressLdifMite, wordpressServiceMite, wordpressNetworkMite],\n  name: `WordPress`,\n  ports: [],\n  subfolders: [`mariadb`, `php`],\n}\n","export default __webpack_public_path__ + \"static/media/wordpressIcon.6ff201b7.png\";","/** @format */\n\n//  wordpressLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for WordPress\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const wordpressLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50037,\n  miteString: `# Begin WordPress Section\n\n\ndn: ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WordpressModerators,ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WordpressAdmins,ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WordpressGuestUsers,ou=ExternalUsers,ou=HumanUsers,ou=Users,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WordpressITAdmins,ou=WordpressAdmins,ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WordpressITModerators,ou=WordpressModerators,ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=ITModerators,ou=WordpressModerators,ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=WordpressAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: WordpressAdmins\naliasedObjectName: ou=WordpressITAdmins,ou=WordpressAdmins,ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=WordpressModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: WordpressModerators\naliasedObjectName: ou=WordpressITModerators,ou=WordpressModerators,ou=WordpressUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End WordPress Section`,\n}\n","/** @format */\n\n//  wordpressNetworkMite.ts\n//  MEGADocker\n//  Network Mite for WordPress\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../../interfaces/IMite'\n\nexport const wordpressNetworkMite: IMite = {\n  type: `DockerSwarmNetwork`,\n  miteIndex: 40032,\n  miteString: `\n\n# Begin WordPress Network Section\n\n wordpress:\n  driver: overlay\n\n# End WordPress Network Section\n\n`,\n}\n","/** @format */\n\n//  moviesServiceMite.ts\n//  MEGADocker\n//  Service Mite for radarr\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`movies`]\n\nexport const moviesServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30016,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Movie Service Section\n\n movies:\n  image: linuxserver/radarr:latest\n  networks:\n   - movies\n   - traefik\n  volumes:\n   - \\${PWD}/media/movies-config:/config\n   - \\${PWD}/media/content:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.movies.entrypoints=plainhttp'\n    - 'traefik.http.services.movies.loadbalancer.server.port=80'\n    - 'traefik.http.routers.movies.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.movies-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.movies.middlewares=movies-force-secure'\n    - 'traefik.http.routers.movies.service=movies'\n    - 'traefik.http.routers.movies-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.movies-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.movies-https.service=movies'\n    - 'traefik.http.routers.movies-https.tls=true'\n    - 'traefik.http.services.movies-https.loadbalancer.server.port=443'\n    - 'com.MegaDocker.description=Radarr - a movies episode search tool'\n\n# End Movies Service Section\n\n`,\n}\n","/** @format */\n\n//  musicServiceMite.ts\n//  MEGADocker\n//  Network Mite for lidarr\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { ITraefikedServiceMite } from '../../../interfaces/ITraefikedServiceMite'\n\nconst hostnames: string[] = [`music`]\n\nexport const musicServiceMite: ITraefikedServiceMite = {\n  type: `DockerSwarmService`,\n  miteIndex: 30017,\n  webInterfaceHostnames: hostnames,\n  miteString: `\n\n# Begin Music Service Section\n\n music:\n  image: linuxserver/lidarr\n  networks:\n   - movies\n   - traefik\n  volumes:\n   - \\${PWD}/media/music-config:/config\n   - \\${PWD}/media/music-data:/media\n  environment:\n   - PUID=$HOSTUSERID\n   - PGID=$HOSTUSERGID\n  deploy:\n   restart_policy:\n    condition: any\n   labels:\n    - 'traefik.enable=true'\n    - 'traefik.http.routers.music.entrypoints=plainhttp'\n    - 'traefik.http.services.music.loadbalancer.server.port=8686'\n    - 'traefik.http.routers.music.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.middlewares.music-force-secure.redirectscheme.scheme=https'\n    - 'traefik.http.routers.music.middlewares=music-force-secure'\n    - 'traefik.http.routers.music.service=music'\n    - 'traefik.http.routers.music-https.entrypoints=encryptedhttp'\n    - 'traefik.http.routers.music-https.rule=Host(\"${hostnames[0]}.[[PRIMARYDOMAIN]]\")'\n    - 'traefik.http.routers.music-https.service=music'\n    - 'traefik.http.routers.music-https.tls=true'\n    - 'traefik.http.services.music-https.loadbalancer.server.port=8686'\n    - 'com.MegaDocker.description=Lidarr - a music search tool'\n\n# End Music Service Section\n\n`,\n}\n","/** @format */\n\nimport { IManikin } from '../interfaces/IManikin'\n// import manikins\nimport { booksManikin } from '../mobparts/manikins/books'\nimport { comicsManikin } from '../mobparts/manikins/comics'\nimport { duplicatiManikin } from '../mobparts/manikins/duplicati'\nimport { drupalManikin } from '../mobparts/manikins/drupal'\nimport { elkManikin } from '../mobparts/manikins/elk'\nimport { emailManikin } from '../mobparts/manikins/email'\nimport { filebrowserManikin } from '../mobparts/manikins/filebrowser'\nimport { ghostManikin } from '../mobparts/manikins/ghost'\n// import { gitlabManikin } from '../mobparts/manikins/gitlab';\nimport { grocyManikin } from '../mobparts/manikins/grocy'\nimport { heimdallManikin } from '../mobparts/manikins/heimdall'\nimport { kanboardManikin } from '../mobparts/manikins/kanboard'\nimport { ldapManikin } from '../mobparts/manikins/ldap'\nimport { ledgerManikin } from '../mobparts/manikins/ledger'\nimport { mealieManikin } from '../mobparts/manikins/mealie'\nimport { n8nManikin } from '../mobparts/manikins/n8n'\nimport { nextcloudManikin } from '../mobparts/manikins/nextcloud'\nimport { nginxManikin } from '../mobparts/manikins/nginx'\nimport { opensourceposManikin } from '../mobparts/manikins/opensourcepos'\n// import { owncloudManikin } from '../mobparts/manikins/owncloud';\nimport { piholeManikin } from '../mobparts/manikins/pihole'\nimport { portainerManikin } from '../mobparts/manikins/portainer'\nimport { rocketchatManikin } from '../mobparts/manikins/rocketchat'\nimport { styleguidistManikin } from '../mobparts/manikins/styleguidist'\nimport { swarmpitManikin } from '../mobparts/manikins/swarmpit'\nimport { syncthingManikin } from '../mobparts/manikins/syncthing'\nimport { traefikManikin } from '../mobparts/manikins/traefik'\nimport { tvManikin } from '../mobparts/manikins/tv'\nimport { visualizerManikin } from '../mobparts/manikins/visualizer'\n// import { vsCodeManikin } from '../mobparts/manikins/vscode';\n// import { webdavManikin } from '../mobparts/manikins/webdav';\nimport { wordpressManikin } from '../mobparts/manikins/wordpress'\nimport { moviesManikin } from '../mobparts/manikins/movies'\nimport { musicManikin } from '../mobparts/manikins/music'\n\n/**\n * an array containing all Manikins available in MEGADocker\n */\nexport const workingManikins: IManikin[] = [\n  booksManikin,\n  comicsManikin,\n  duplicatiManikin,\n  drupalManikin,\n  elkManikin,\n  emailManikin,\n  filebrowserManikin,\n  ghostManikin,\n  // gitlabManikin,\n  grocyManikin,\n  heimdallManikin,\n  kanboardManikin,\n  ldapManikin,\n  ledgerManikin,\n  mealieManikin,\n  moviesManikin,\n  musicManikin,\n  n8nManikin,\n  nextcloudManikin,\n  nginxManikin,\n  // owncloudManikin,\n  opensourceposManikin,\n  piholeManikin,\n  portainerManikin,\n  rocketchatManikin,\n  styleguidistManikin,\n  syncthingManikin,\n  swarmpitManikin,\n  traefikManikin,\n  tvManikin,\n  visualizerManikin,\n  // vsCodeManikin,\n  // webdavManikin,\n  wordpressManikin,\n]\n","/** @format */\n\n//  pihole.ts\n//  MEGADocker\n//  A Manikin to generate a pihole DNS adblocker service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { mediaRequestsServiceMite } from '../mites/service/mediaRequestsServiceMite'\nimport { moviesServiceMite } from '../mites/service/moviesServiceMite'\nimport { moviesNetworkMite } from '../mites/network/moviesNetworkMite'\nimport { plexServiceMite } from '../mites/service/plexServiceMite'\nimport { plexNetworkMite } from '../mites/network/plexNetworkMite'\nimport moviesIcon from '../../images/manikin-icons/moviesIcon.png'\nimport { booksNetworkMite } from '../mites/network/booksNetworkMite'\nimport { comicsNetworkMite } from '../mites/network/comicsNetworkMite'\nimport { musicNetworkMite } from '../mites/network/musicNetworkMite'\nimport { tvNetworkMite } from '../mites/network/tvNetworkMite'\nimport { moviesLdifMite } from '../mites/ldif/moviesLdifMite'\nimport { plexLdifMite } from '../mites/ldif/plexLdifMite'\nimport { mediarequestsLdifMite } from '../mites/ldif/mediarequestsLdifMite'\n\n/**\n * drupal Manikin\n */\nexport const moviesManikin: IManikin = {\n  description: `Automatic Movies Downloader`,\n  folder: `media`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`],\n  manikinIcon: moviesIcon,\n  manikinIndex: 10015,\n  memories: [],\n  mites: [\n    moviesLdifMite,\n    plexLdifMite,\n    mediarequestsLdifMite,\n    mediaRequestsServiceMite,\n    moviesServiceMite,\n    plexServiceMite,\n    booksNetworkMite,\n    comicsNetworkMite,\n    moviesNetworkMite,\n    musicNetworkMite,\n    tvNetworkMite,\n    plexNetworkMite,\n  ],\n  name: `Movies`,\n  ports: [],\n  subfolders: [`content`, `movies-config`, `newsgroups-config`, `newsgroup-indexer-config`, `plex-config`, `requests-config`, `torrent-config`, `torrent-indexer-config`],\n}\n","export default __webpack_public_path__ + \"static/media/moviesIcon.0ee0f7c5.png\";","/** @format */\n\n//  moviesLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Radarr\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const moviesLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50018,\n  miteString: `# Begin Radarr Section\n\ndn: ou=RadarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RadarrAdmins,ou=RadarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RadarrModerators,ou=RadarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=RadarrAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: RadarrAdmins\naliasedObjectName: ou=RadarrITAdmins,ou=RadarrAdmins,ou=RadarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=RadarrModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: RadarrModerators\naliasedObjectName: ou=RadarrITModerators,ou=RadarrModerators,ou=RadarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Radarr Section\n`,\n}\n","/** @format */\n\n//  pihole.ts\n//  MEGADocker\n//  A Manikin to generate a pihole DNS adblocker service\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\nimport { mediaRequestsServiceMite } from '../mites/service/mediaRequestsServiceMite'\nimport { musicNetworkMite } from '../mites/network/musicNetworkMite'\nimport { plexServiceMite } from '../mites/service/plexServiceMite'\nimport { plexNetworkMite } from '../mites/network/plexNetworkMite'\nimport musicIcon from '../../images/manikin-icons/musicIcon.png'\nimport { booksNetworkMite } from '../mites/network/booksNetworkMite'\nimport { comicsNetworkMite } from '../mites/network/comicsNetworkMite'\nimport { moviesNetworkMite } from '../mites/network/moviesNetworkMite'\nimport { tvNetworkMite } from '../mites/network/tvNetworkMite'\nimport { musicLdifMite } from '../mites/ldif/musicLdifMite'\nimport { mediarequestsLdifMite } from '../mites/ldif/mediarequestsLdifMite'\nimport { musicServiceMite } from '../mites/service/musicServiceMite'\n\n/**\n * drupal Manikin\n */\nexport const musicManikin: IManikin = {\n  description: `Automatic Music Downloader`,\n  folder: `media`,\n  isCore: false,\n  isSelected: false,\n  manikinGroups: [`Content`],\n  manikinIcon: musicIcon,\n  manikinIndex: 10016,\n  memories: [],\n  mites: [\n    musicLdifMite,\n    mediarequestsLdifMite,\n    musicServiceMite,\n    mediaRequestsServiceMite,\n    plexServiceMite,\n    booksNetworkMite,\n    comicsNetworkMite,\n    moviesNetworkMite,\n    musicNetworkMite,\n    tvNetworkMite,\n    plexNetworkMite,\n  ],\n  name: `Music`,\n  ports: [],\n  subfolders: [`content`, `music-config`, `newsgroups-config`, `newsgroup-indexer-config`, `plex-config`, `requests-config`, `torrent-config`, `torrent-indexer-config`],\n}\n","export default __webpack_public_path__ + \"static/media/musicIcon.b4344604.png\";","/** @format */\n\n//  musicLdifMite.ts\n//  MEGADocker\n//  LDIF Mite for Lidarr\n//  Created by George Georgulas IV on 3/27/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\nimport { ILDIFMite } from '../../../interfaces/ILDIFMite'\n\nexport const musicLdifMite: ILDIFMite = {\n  type: `LDIF`,\n  miteIndex: 50019,\n  miteString: `# Begin Lidarr Section\n\ndn: ou=LidarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LidarrAdmins,ou=LidarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LidarrModerators,ou=LidarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: organizationalUnit\n\ndn: ou=LidarrAdmins,ou=Administrators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LidarrAdmins\naliasedObjectName: ou=LidarrITAdmins,ou=LidarrAdmins,ou=LidarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\ndn: ou=LidarrModerators,ou=Moderators,ou=Technicians,ou=Employees,[[LDAPDOMAINASDCS]]\nobjectclass: alias\nobjectclass: extensibleobject\nou: LidarrModerators\naliasedObjectName: ou=LidarrITModerators,ou=LidarrModerators,ou=LidarrUsers,ou=InternalUsers,ou=Employees,[[LDAPDOMAINASDCS]]\n\n# End Lidarr Section\n`,\n}\n","/** @format */\n\n//  initialMegaDockerState.tsx\n//  MEGADocker\n//  the application's beginning state\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { OrbThemeLight } from '../components/OrbThemeLight'\nimport { IManikin } from '../interfaces/IManikin'\nimport { IMegaDockerState } from '../interfaces/IMegaDockerState'\nimport { IMite } from '../interfaces/IMite'\nimport { workingManikins } from './workingManikins'\n\nconst coreManikins: IManikin[] = workingManikins.filter((eachManikin: IManikin) => (eachManikin.isCore ? true : false))\nconst otherManikins: IManikin[] = workingManikins.filter((eachManikin: IManikin) => (eachManikin.isCore ? false : true))\nconst initialMobMites: IMite[] = coreManikins.flatMap((eachManikin) => eachManikin.mites.flatMap((eachMite) => eachMite))\n\nexport const initialMegaDockerState: IMegaDockerState = {\n  theme: OrbThemeLight,\n  manikinTable: [...coreManikins, ...otherManikins],\n  selectedManikins: coreManikins,\n  memories: coreManikins.flatMap((eachManikin) => eachManikin.memories),\n  allMobMites: initialMobMites,\n  mobDServiceMites: initialMobMites.filter((eachMite) => eachMite.type === `DockerSwarmService`),\n  mobDNetworkMites: initialMobMites.filter((eachMite) => eachMite.type === `DockerSwarmNetwork`),\n  mobCustomMites: [initialMobMites.filter((eachMite) => eachMite.type === `Custom`)],\n  ymlOutput: ``,\n}\n","/** @format */\n\n//  megaReducer.ts\n//  MEGADocker\n//  a function that handles React Context state changes for {IMegaDockerAction, IMegaDockerState} React Hooks\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { Theme } from '@material-ui/core'\nimport { getManikins } from './getManikins'\nimport { getMemories } from './getMemories'\nimport { getMites } from './getMites'\nimport { getDServiceMites } from './getDServiceMites'\nimport { getDNetworkMites } from './getDNetworkMites'\nimport { getCustomMites } from './getCustomMites'\nimport { toggleTheme } from './toggleTheme'\nimport { zipDockerSwarm } from './zipDockerSwarm'\nimport { initialMegaDockerState } from '../../globals/initialMegaDockerState'\nimport { IMegaDockerAction } from '../../interfaces/IMegaDockerAction'\nimport { IMegaDockerState } from '../../interfaces/IMegaDockerState'\n\n/**\n * Updates application state\n */\nexport const megaReducer: React.Reducer<IMegaDockerState, IMegaDockerAction> = (state: IMegaDockerState, action: IMegaDockerAction): IMegaDockerState => {\n  /**\n   * a mutable copy of the state to make changes to\n   */\n  let newState: IMegaDockerState = { ...state }\n\n  switch (\n    action.type // check which modification to make to state\n  ) {\n    case `APPLICATION_START`: // to start the program with only core manikins selected\n      return initialMegaDockerState\n\n    case `TOGGLE_THEME`:\n      const newTheme: Theme = toggleTheme(newState.theme) as Theme\n      newState.theme = newTheme\n      return newState\n\n    case `TOGGLE_MANIKIN`: // to select or deselect a manikin\n      newState.manikinTable[action.payload].isSelected = !state.manikinTable[action.payload].isSelected // reverses the selected boolean in the manikin passed to it\n      newState.selectedManikins = getManikins(newState.manikinTable) // rebuilds selected Manikins array\n      newState.memories = getMemories(newState.selectedManikins) // rebuilds Memories array\n      newState.allMobMites = getMites(newState.selectedManikins) // rebuilds Mites array\n      newState.mobDServiceMites = getDServiceMites(newState.allMobMites) // rebuilds Docker Swarm network Mites array\n      newState.mobDNetworkMites = getDNetworkMites(newState.allMobMites) // rebuilds Docker Swarm service Mites array\n      newState.mobCustomMites = getCustomMites(newState.allMobMites) // custom mite file-based Mite[]\n      return newState\n\n    case `UPDATE_MEMORY_VALUE`: // to handle changing data in a memory's value\n      const memoryIndex = newState.memories.indexOf(action.payload.memory)\n      newState.memories[memoryIndex].value = action.payload.value\n      newState.memories[memoryIndex].isReady = newState.memories[memoryIndex].validator(newState.memories[memoryIndex].value)\n      return newState\n\n    case `DOCKER_SWARM_OUTPUT`: // handles creation and download of Docker Swarm zip file\n      zipDockerSwarm({\n        manikins: state.selectedManikins,\n        memories: state.memories,\n      })\n      return state\n\n    default:\n      throw new Error(`megaReducer Error: hit default case in action.type switch`) // to prevent non-standard actions being passed\n  }\n}\n","/** @format */\n\nimport { Theme } from '@material-ui/core'\nimport { OrbThemeDark } from '../../components/OrbThemeDark'\nimport { OrbThemeLight } from '../../components/OrbThemeLight'\n\n//  toggleTheme.ts\n//  MEGADocker\n//  a function that switches between light mode and dark mode\n//  Created by George Georgulas IV on 3/23/21.\n//  Copyright © 2021 The MegaDocker Group. All rights reserved.\n\n/**\n * toggles the UI Theme, defaulting to light if theme is neither light nor dark\n */\nexport const toggleTheme: Function = (theme: Theme): Theme => {\n  switch (theme) {\n    case OrbThemeDark:\n      return OrbThemeLight\n    case OrbThemeLight:\n      return OrbThemeDark\n    default:\n      throw new Error(`toggleTheme error: passed non-standard theme to theme switch`)\n  }\n}\n","/** @format */\n\n//  getManikins.ts\n//  MEGADocker\n//  a function that pulls the selected Manikins from an array of Manikins\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\n\n/**\n * updates selectedManikins array based on application state\n */\nexport const getManikins = (manikinsToSelectFrom: IManikin[]): IManikin[] => manikinsToSelectFrom.filter((eachManikin) => eachManikin.isSelected === true)\n","/** @format */\n\n//  getMites.ts\n//  MEGADocker\n//  a function that pulls the Mites from an array of Manikins\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IManikin } from '../../interfaces/IManikin'\nimport { IMite } from '../../interfaces/IMite'\n\n/**\n * updates allMobMites array based on application state\n */\nexport const getMites = (manikinsToGetMitesFrom: IManikin[]): IMite[] => manikinsToGetMitesFrom.flatMap((eachManikin) => eachManikin.mites.flatMap((eachMite) => eachMite))\n","/** @format */\n\n//  getDServiceMites.ts\n//  MEGADocker\n//  a function that pulls the Docker Swarm service Mites from an array of Mites\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../interfaces/IMite'\n\n/**\n * updates serviceMites array based on application state\n */\nexport const getDServiceMites = (miteArray: IMite[]): IMite[] => miteArray.filter((eachMite) => eachMite.type === `DockerSwarmService`)\n","/** @format */\n\n//  getDNetworkMites.ts\n//  MEGADocker\n//  a function that pulls the Docker Swarm network Mites from an array of Mites\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../interfaces/IMite'\nimport { INetworkMite } from '../../interfaces/INetworkMite'\n\n/**\n * updates networkMites array based on application state\n */\nexport const getDNetworkMites = (miteArray: IMite[]): INetworkMite[] => miteArray.filter((eachMite) => eachMite.type === `DockerSwarmNetwork`) as INetworkMite[]\n","/** @format */\n\n//  getCustomMites.ts\n//  MEGADocker\n//  a function that pulls the Custom Mites from an array of Mites\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport { IMite } from '../../interfaces/IMite'\n\n/**\n * updates customMites array based on application state\n */\nexport const getCustomMites = (miteArray: IMite[]): IMite[][] => [miteArray.filter((eachMite) => eachMite.type === `Custom`)]\n","/** @format */\n\n//  zipDockerSwarm.ts\n//  MEGADocker\n//  a function that creates and downloads a zip file containing the user's Docker Swarm\n//  Created by George Georgulas IV on 1/26/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport JSZip from 'jszip'\nimport fileSaver from 'file-saver'\nimport { IMemory } from '../../interfaces/IMemory'\nimport { IManikin } from '../../interfaces/IManikin'\nimport { IMite } from '../../interfaces/IMite'\nimport { ILDIFMite } from '../../interfaces/ILDIFMite'\nimport { ICustomMite } from '../../interfaces/ICustomMite'\nimport { ITraefikedServiceMite } from '../../interfaces/ITraefikedServiceMite'\nimport { IZipDockerCompose } from '../../interfaces/IZipDockerCompose'\nimport { mobFileHeaderSectionString } from '../../mobparts/mites/headers/mobFileHeaderSectionString'\nimport { mobServicesFooterSectionString } from '../../mobparts/mites/headers/mobServicesFooterSectionString'\nimport { mobNetworkHeaderSectionString } from '../../mobparts/mites/headers/mobNetworkHeaderSectionString'\nimport { mobNetworkFooterSectionString } from '../../mobparts/mites/headers/mobNetworkFooterSectionString'\nimport { traefikManikin } from '../../mobparts/manikins/traefik'\nimport { mobName } from '../../mobparts/memories/mobName'\nimport { ldapBootstrapMegaDockerDotLdifMite } from '../../mobparts/mites/custom/ldapBootstrapMegaDockerDotLdifMite'\nimport { primaryDomain } from '../../mobparts/memories/primaryDomain'\nimport { cloudflareAPIToken } from '../../mobparts/memories/cloudflareAPIToken'\nimport { mobSecretsHeaderSectionString } from '../../mobparts/mites/headers/mobSecretsHeaderSectionString'\nimport { mobSecretsFooterSectionString } from '../../mobparts/mites/headers/mobSecretsFooterSectionString'\n\n/**\n * makes .zip file for docker-compose\n */\nexport const zipDockerSwarm = (zipCompose: IZipDockerCompose): JSZip => {\n  let zip: JSZip = JSZip()\n\n  let zipManikins: IManikin[] = [...zipCompose.manikins]\n  let zipMemories: IMemory[] = [...zipCompose.memories]\n\n  const traefikIndex: number = zipManikins.indexOf(traefikManikin)\n  const mobNameIndex: number = zipManikins[traefikIndex].memories.indexOf(mobName)\n  const domainIndex: number = zipManikins[traefikIndex].memories.indexOf(primaryDomain)\n  const cloudflareAPITokenIndex: number = zipManikins[traefikIndex].memories.indexOf(cloudflareAPIToken)\n  const cloudflareAPITokenValue: string = zipManikins[traefikIndex].memories[cloudflareAPITokenIndex].value.toString().split(',').join('\" \"')\n\n  const mites: IMite[] = Array.from(new Set(zipManikins.flatMap((eachManikin: IManikin) => eachManikin.mites.map((eachMite: IMite) => eachMite))))\n\n  const serviceMites: string[] = mites\n    .filter((eachMite: IMite) => eachMite.type === `DockerSwarmService`)\n    .sort((mite1, mite2): number => {\n      if (mite1.miteIndex > mite2.miteIndex) {\n        return 1\n      }\n      if (mite1.miteIndex < mite2.miteIndex) {\n        return -1\n      }\n      return 0\n    })\n    .map((eachMite: IMite) => eachMite.miteString)\n\n  const traefikMites: ITraefikedServiceMite[] = mites.filter((eachMite: IMite) => eachMite.type === `DockerSwarmService`) as ITraefikedServiceMite[]\n\n  const cloudflareHosts: string = traefikMites\n    .map((eachTraefikedMite: ITraefikedServiceMite) => eachTraefikedMite.webInterfaceHostnames)\n    .flat()\n    .join()\n    .split(',')\n    .join('\" \"')\n\n  const networkMites: string[] = mites\n    .filter((eachMite: IMite) => eachMite.type === `DockerSwarmNetwork`)\n    .sort((mite1, mite2): number => {\n      if (mite1.miteIndex > mite2.miteIndex) {\n        return 1\n      }\n      if (mite1.miteIndex < mite2.miteIndex) {\n        return -1\n      }\n      return 0\n    })\n    .map((eachMite: IMite) => eachMite.miteString)\n\n  const customs: IMite[] = mites.filter((eachMite: IMite) => eachMite.type === `Custom`)\n\n  const customMites: ICustomMite[] = customs.map((mite: IMite) => mite as ICustomMite)\n\n  const ldifs: ILDIFMite[] = mites.filter((eachMite: IMite) => eachMite.type === `LDIF`) as ILDIFMite[]\n\n  const ldifAdditions: string = ldifs.map((mite: IMite) => mite.miteString).join(``)\n\n  const ldifIndex: number = customMites.indexOf(ldapBootstrapMegaDockerDotLdifMite)\n\n  /**\n   * adds dc values to bootstrap ldif\n   */\n  const populateLdifDCs: Function = (): string => {\n    const fullDomain: string = zipCompose.manikins[traefikIndex].memories[domainIndex].value\n    const tld: string = fullDomain.split(`.`)[1]\n    const domain: string = fullDomain.split(`.`)[0]\n    const ldifContents: string = ldapBootstrapMegaDockerDotLdifMite.miteFile.contents + ldifAdditions\n    const workingLdif = ldifContents.split(`[[LDAPDOMAINASDCS]]`).join(`dc=${domain},dc=${tld}`)\n\n    return workingLdif\n  }\n  customMites[ldifIndex].miteFile.contents = populateLdifDCs()\n\n  /**\n   * updates yml with variables from memories\n   * @param ymlInput the initial string to change\n   * @param memories the memories to apply\n   */\n  const insertMemoryValues: Function = (ymlInput: string, memories: IMemory[]): string => {\n    let workingYml: string = ymlInput\n\n    memories.forEach((eachMemory: IMemory) => {\n      let tempYml = workingYml.split(eachMemory.memoryMarker).join(eachMemory.value)\n      workingYml = tempYml\n    })\n\n    const finalYml = workingYml\n    return finalYml\n  }\n\n  customMites.map((eachCustomMite: ICustomMite) => {\n    const newFileContents = zipMemories.forEach((eachMemory: IMemory) => {\n      const workingFileContents = eachCustomMite.miteFile.contents.split(eachMemory.memoryMarker).join(eachMemory.value)\n      eachCustomMite.miteFile.contents = workingFileContents\n    })\n    return newFileContents\n  })\n\n  const ymlOutputArray: string[] = [\n    mobFileHeaderSectionString.miteString,\n    ...serviceMites,\n    mobServicesFooterSectionString.miteString,\n    mobNetworkHeaderSectionString.miteString,\n    ...networkMites,\n    mobNetworkFooterSectionString.miteString,\n    mobSecretsHeaderSectionString.miteString,\n    mobSecretsFooterSectionString.miteString,\n  ]\n\n  let ymlString: string = ymlOutputArray.join(``)\n\n  /**\n   * makes docker-compose.yml file\n   */\n  const createZipContents = async (): Promise<string> => {\n    const makeZip = async (): Promise<string> => {\n      try {\n        zip.folder(`${zipManikins[traefikIndex].memories[mobNameIndex].value}`)!.file(`${zipManikins[traefikIndex].memories[mobNameIndex].value}.yml`, `${insertMemoryValues(ymlString, zipMemories)}`)\n        customMites.forEach((eachCustomMite) => {\n          zip.file(\n            `${zipManikins[traefikIndex].memories[mobNameIndex].value}/${eachCustomMite.miteFile.path}/${eachCustomMite.miteFile.name}.${eachCustomMite.miteFile.extension}`,\n            `${eachCustomMite.miteFile.contents}`,\n            { unixPermissions: `${eachCustomMite.miteFile.permissions}` }\n          )\n        })\n        const output = await zip.generateAsync({\n          type: `binarystring`,\n        })\n\n        return output\n      } catch {\n        return `zip failed`\n      }\n    }\n\n    return makeZip()\n  }\n\n  /**\n   * generates manikin folders and subfolders\n   */\n  const makeFoldersAndConvenienceScripts: VoidFunction = (): void => {\n    // eslint-disable-next-line array-callback-return\n    zipManikins.map((eachManikin: IManikin) => {\n      const subs = eachManikin.subfolders\n      zip.folder(`${zipManikins[traefikIndex].memories[mobNameIndex].value}`)!.folder(`logs`)!.folder(eachManikin.folder)\n      for (let eachSubfolder in subs) {\n        zip.folder(`${zipManikins[traefikIndex].memories[mobNameIndex].value}`)!.folder(eachManikin.folder)!.folder(subs[eachSubfolder])\n      }\n\n      zip.folder(`${zipManikins[traefikIndex].memories[mobNameIndex].value}`)!.file(\n        `launchstack.sh`,\n        `#!/bin/sh\nexport HOSTUSERID=$(id -u)\nexport HOSTUSERGID=$(id -g)\nif [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n  export HOSTTIMEZONE=$(wget -q -O - https://ipapi.co/timezone)\nelif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  export HOSTTIMEZONE=$(curl -s https://ipapi.co/timezone)\nelif [[ \"$OSTYPE\" == \"win32\" ]]; then\n  export HOSTTIMEZONE=$(curl https://ipapi.co/timezone)\nelse\n  echo \"Setting default timezone as 'America/New_York' because we couldn't determine OS type\"\n  export HOSTTIMEZONE=America/New_York\nfi\n\necho\necho \"We seem to be running on $OSTYPE\"\necho \"         with user id of $HOSTUSERID\"\necho \"    and user group id of $HOSTUSERGID\"\necho \"         in the timezone $HOSTTIMEZONE.\"\necho\ndocker stack deploy -c ${zipManikins[traefikIndex].memories[mobNameIndex].value}.yml ${zipManikins[traefikIndex].memories[mobNameIndex].value}\n`,\n        { unixPermissions: `755` }\n      )\n\n      // makes stopstack.sh script\n      zip.folder(`${zipManikins[traefikIndex].memories[mobNameIndex].value}`)!.file(\n        `stopstack.sh`,\n        `#!/bin/sh\ndocker stack rm ${zipManikins[traefikIndex].memories[mobNameIndex].value}\n`,\n        { unixPermissions: `755` }\n      )\n\n      // makes setupdns.sh script\n      zip.folder(`${zipManikins[traefikIndex].memories[mobNameIndex].value}`)!.file(\n        `setupdns.sh`,\n        `#!/bin/sh\nISJQINSTALLED=$(which jq)\nif [ \"\\${ISJQINSTALLED}\" = 'jq not found' ]; then\n  echo;\n  echo \"Error: exiting with status 1 (Couldn't find jq binary).  You must install jq to use this script.\";\n  echo \"Try 'sudo apt install jq' on Debian/Ubuntu/Mint.\";\n  echo \"Try 'sudo yum install jq' on CentOS/Fedore/RedHat\";\n  echo \"Try 'sudo apk install jq' on Alpine\";\n  echo \"Try 'brew install jq' on macOS\";\n  echo;\n    exit 1;\n  else\n  echo \"Found jq binary at \\${ISJQINSTALLED}\"...;\nfi;\n  echo \"Setting script variables...\";\n  echo \"Setting domain name...\";\n  DOMAIN=\"${zipManikins[traefikIndex].memories[domainIndex].value}\";\n  echo \"Setting CNAME target...\";\n  CNAMETARGET=\"megadockerswarm.${zipManikins[traefikIndex].memories[domainIndex].value}\";\n  echo \"Setting hostnames...\";\n  HOSTS=(\"${cloudflareHosts}\")\n  echo \"Setting Cloudflare API Token...\";\n  CLOUDFLAREAPITOKEN=\"${cloudflareAPITokenValue}\";\n  echo \"Getting our external IP address...\";\n  EXTERNALIPADDRESS=$(curl -s https://api.ipify.org);\n  echo \"Setting Zone ID for domain ${zipManikins[traefikIndex].memories[domainIndex].value}...\";\n  ZONEIDRESULT=$(curl -s -X GET \"https://api.cloudflare.com/client/v4/zones?name=${zipManikins[traefikIndex].memories[domainIndex].value}\" -H \"Authorization: Bearer \\${CLOUDFLAREAPITOKEN}\" -H \"Content-Type: application/json\");\n  ZONEIDSUCCEEDED=$(echo \"\\${ZONEIDRESULT}\" | jq | grep \"success\");\n  if [ \"\\${ZONEIDSUCCEEDED}\" = '  \"success\": true,' ]; then\n    ZONEID=$(echo \"\\${ZONEIDRESULT}\" | jq -r | grep \"id\" | sed 1q | sed 's/^.............//' | sed 's/..$//');\n  else\n    echo;\n    echo \"Error: exiting with status 2 (Couldn't determine Cloudflare Zone for ${zipManikins[traefikIndex].memories[domainIndex].value})\";\n    echo \"Please confirm that this domain is managed by your Cloudflare account.\";\n    echo \"Please confirm that your Cloudflare API Token has 'Zone: Read' and 'DNS: Edit' privileges for ${zipManikins[traefikIndex].memories[domainIndex].value}.\";\n    echo;\n    echo \"https://dash.cloudflare.com\";\n    echo;\n    exit 2;\n  fi;\n  echo \"Getting Host ID for \\${CNAMETARGET} A record...\";\n  DOMAINHOSTSRESULT=$(curl -s -X GET \"https://api.cloudflare.com/client/v4/zones/\\${ZONEID}/dns_records?type=A&name=megadockerswarm.${zipManikins[traefikIndex].memories[domainIndex].value}\" -H \"Authorization: Bearer \\${CLOUDFLAREAPITOKEN}\" -H \"Content-Type: application/json\");\n  DOMAINHOSTSUCCEEDED=$(echo \"\\${DOMAINHOSTSRESULT}\" | jq | grep success);\n  if [ \"\\${DOMAINHOSTSUCCEEDED}\" = '  \"success\": true,' ]; then\n    DOMAINHOSTID=$(echo \"\\${DOMAINHOSTSRESULT}\" | jq -r | grep id | sed 1q | sed 's/^.............//' | sed 's/..$//');\n    if [ \"\\${DOMAINHOSTID}\" != \"\"  ]; then\n      DOMAINHOSTIPADDRESS=$(echo \"\\${DOMAINHOSTSRESULT}\" | jq -r | grep content| sed 's/^..................//' | sed 's/..$//');\n      if [ \"\\${DOMAINHOSTIPADDRESS}\" == \"\\${EXTERNALIPADDRESS}\" ]; then\n        echo \"The A record for \\${CNAMETARGET} appears to be configured correctly.\";\n      else\n        echo \"Updating A record for \\${CNAMETARGET} to point to \\${EXTERNALIPADDRESS}...\";\n      DATAFLAG=\"{\\\\\"type\\\\\":\\\\\"A\\\\\",\\\\\"name\\\\\":\\\\\"megadockerswarm\\\\\",\\\\\"content\\\\\":\\\\\"\\${EXTERNALIPADDRESS}\\\\\",\\\\\"ttl\\\\\":1,\\\\\"priority\\\\\":10,\\\\\"proxied\\\\\":false}\";\n      UPDATEMEGADOCKERSWARMRECORDRESULT=$(curl -s -X PUT \"https://api.cloudflare.com/client/v4/zones/\\${ZONEID}/dns_records/\\${DOMAINHOSTID}\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer \\${CLOUDFLAREAPITOKEN}\" --data \\${DATAFLAG});\n      fi;\n    fi;\n    if [ \"\\${DOMAINHOSTID}\" == \"\" ]; then\n      echo \"Creating an A record for megadockerswarm.${zipManikins[traefikIndex].memories[domainIndex].value}\";\n      CREATEMEGADOCKERSWARMRECORDRESULT=$(curl -s -X POST \"https://api.cloudflare.com/client/v4/zones/\\${ZONEID}/dns_records\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer \\${CLOUDFLAREAPITOKEN}\" --data '{\"type\":\"A\",\"name\":\"megadockerswarm\",\"content\":\"'\"\\${EXTERNALIPADDRESS}\"'\",\"ttl\":1,\"proxied\":false}');\n      MEGADOCKERSWARMHOSTID=$(echo \"\\${CREATEMEGADOCKERSWARMRECORDRESULT}\" | jq | grep id | sed 1q | sed 's/^..//' | sed 's/..$//');\n    fi;\n  fi;\n  for EACHHOST in \\${HOSTS[@]}; do\n    DATAFLAG=\"{\\\\\"type\\\\\":\\\\\"CNAME\\\\\",\\\\\"name\\\\\":\\\\\"\\${EACHHOST}\\\\\",\\\\\"content\\\\\":\\\\\"\\${CNAMETARGET}\\\\\",\\\\\"ttl\\\\\":1,\\\\\"priority\\\\\":10,\\\\\"proxied\\\\\":false}\"\n    HOSTCNAMEEXISTSRESULTS=$(curl -s -X GET \"https://api.cloudflare.com/client/v4/zones/\\${ZONEID}/dns_records?type=CNAME&name=\\${EACHHOST}.${zipManikins[traefikIndex].memories[domainIndex].value}&match=all\" -H \"Authorization: Bearer \\${CLOUDFLAREAPITOKEN}\" -H \"Content-Type:application/json\");\n    HOSTCNAMEID=$(echo \\${HOSTCNAMEEXISTSRESULTS} | jq | grep id | sed 1q | sed 's/^.............//' | sed 's/..$//');\n    if [ \"\\${HOSTCNAMEID}\" != \"\" ]; then\n      HOSTCONTENTRESULTS=$(echo \\${HOSTCNAMEEXISTSRESULTS} | jq | grep content | sed 's/^..................//' | sed 's/..$//');\n      if [ \"\\${HOSTCONTENTRESULTS}\" = \"\\${CNAMETARGET}\" ]; then\n        echo \"\\${EACHHOST} appears to be configured already.\";\n      elif [ \"\\${HOSTCONTENTRESULTS}\" != \"\\${CNAMETARGET}\" ]; then\n        echo \"Updating \\${EACHHOST}.${zipManikins[traefikIndex].memories[domainIndex].value} to point to \\${CNAMETARGET}...\"\n        UPDATEHOSTRESULT=$(curl -s -X PUT \"https://api.cloudflare.com/client/v4/zones/\\${ZONEID}/dns_records/\\${HOSTCNAMEID}\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer \\${CLOUDFLAREAPITOKEN}\" --data \\${DATAFLAG});\n      fi;\n    fi;\n    if [ \"\\${HOSTCNAMEID}\" == \"\" ]; then\n      echo \"Creating \\${EACHHOST} CNAME record...\"\n      CREATEHOSTRESULT=$(curl -s -X POST \"https://api.cloudflare.com/client/v4/zones/\\${ZONEID}/dns_records\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer \\${CLOUDFLAREAPITOKEN}\" --data \\${DATAFLAG});\n    fi;\n  done;      \n  echo \"Your MEGADocker mob's DNS is probably configured correctly.\";\n  echo \"Run './launchstack.sh' and then visit any of the following addresses:\";\n  for EACHHOST in \\${HOSTS[@]}; do\n    echo \"https://$EACHHOST.${zipManikins[traefikIndex].memories[domainIndex].value}\";\n  done;\n`,\n        { unixPermissions: `755` }\n      )\n    })\n  }\n\n  createZipContents()\n  makeFoldersAndConvenienceScripts()\n\n  zip.folder(`${zipManikins[traefikIndex].memories[mobNameIndex].value}`)!.file(`traefik/acme.json`, ``, { unixPermissions: `600` })\n  zip\n    .generateAsync({\n      compression: `DEFLATE`,\n      compressionOptions: { level: 9 },\n      platform: `UNIX`,\n      type: `blob`,\n    })\n    .then(function (content) {\n      fileSaver.saveAs(content, `${zipManikins[traefikIndex].memories[mobNameIndex].value}.zip`)\n    })\n\n  return zip\n}\n","/** @format */\n\n//  MegaContext.tsx\n//  MEGADocker\n//  a React Component that handles application state for the MEGADocker application\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { megaReducer } from '../functions/reducers/megaReducer'\nimport { ThemeProvider } from '@material-ui/core'\nimport { initialMegaDockerState } from '../globals/initialMegaDockerState'\n\nexport const MegaContext: React.Context<any> = React.createContext({\n  state: initialMegaDockerState,\n})\n\nexport const MegaProvider: React.FC = (props: any): React.ReactElement => {\n  const [state, dispatch] = React.useReducer(megaReducer, initialMegaDockerState)\n\n  return (\n    <MegaContext.Provider value={{ state, dispatch }}>\n      <ThemeProvider theme={state.theme}>{props.children}</ThemeProvider>\n    </MegaContext.Provider>\n  )\n}\n\nexport const MegaConsumer: React.FC = (props: any): React.ReactElement => {\n  return <MegaContext.Consumer>{props.children}</MegaContext.Consumer>\n}\n","/** @format */\n\n//  DarkModeSwitch.tsx\n//  MEGADocker\n//  a React Component that renders the toggle switch for dark mode\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { Switch, TableCell, Theme } from '@material-ui/core'\nimport { IMegaDockerAction } from '../interfaces/IMegaDockerAction'\nimport { IMegaDockerState } from '../interfaces/IMegaDockerState'\nimport { MegaContext } from './MegaContext'\nimport { OrbThemeDark } from './OrbThemeDark'\n\nexport const DarkModeSwitch: React.FC = (): React.ReactElement => {\n  const {\n    state,\n    dispatch,\n  }: {\n    state: IMegaDockerState\n    dispatch: React.Dispatch<IMegaDockerAction>\n  } = React.useContext(MegaContext)\n\n  return (\n    <TableCell key='isSelected' style={{ width: '25%' }}>\n      <Switch\n        key={`ThemeToggleSwitch`}\n        checked={state.theme === OrbThemeDark ? true : false}\n        onClick={() => {\n          dispatch({\n            type: `TOGGLE_THEME`,\n            payload: state.theme as Theme,\n          })\n        }}\n      />\n    </TableCell>\n  )\n}\n","/** @format */\n\n//  ManikinIcon.tsx\n//  MEGADocker\n//  a React Component that renders the icon for a Manikin\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { TableCell } from '@material-ui/core'\nimport { IManikin } from '../interfaces/IManikin'\n\nexport const ManikinIcon: React.FC<IManikin> = (manikin: IManikin): React.ReactElement => {\n  return (\n    <TableCell className='ManikinIcon'>\n      <img src={manikin.manikinIcon} alt={`${manikin.name} Icon`} height='15' width='15' />\n    </TableCell>\n  )\n}\n","/** @format */\n\n//  ManikinSwitch.tsx\n//  MEGADocker\n//  a React Component that renders the toggle switch for a Manikin\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { Switch, TableCell } from '@material-ui/core'\nimport { MegaContext } from './MegaContext'\nimport { IManikin } from '../interfaces/IManikin'\nimport { IMegaDockerAction } from '../interfaces/IMegaDockerAction'\nimport { IMegaDockerState } from '../interfaces/IMegaDockerState'\n\nexport const ManikinSwitch: React.FC<IManikin> = (manikin: IManikin): React.ReactElement => {\n  const {\n    state,\n    dispatch,\n  }: {\n    state: IMegaDockerState\n    dispatch: React.Dispatch<IMegaDockerAction>\n  } = React.useContext(MegaContext)\n\n  return (\n    <div className='ManikinSwitch'>\n      <TableCell key={`${manikin.name}ToggleCell`}>\n        <Switch\n          key={`${manikin.name}Toggle`}\n          checked={manikin.isSelected}\n          disabled={manikin.isCore ? true : false}\n          onClick={() =>\n            dispatch({\n              type: `TOGGLE_MANIKIN`,\n              payload: state.manikinTable.indexOf(manikin),\n            })\n          }\n        />\n      </TableCell>\n    </div>\n  )\n}\n","/** @format */\n\n//  ManikinTable.tsx\n//  MEGADocker\n//  a React Component that renders a table for the Manikins\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { DarkModeSwitch } from './DarkModeSwitch'\nimport { ManikinRow } from './ManikinRow'\nimport { MegaContext } from './MegaContext'\nimport { IManikin } from '../interfaces/IManikin'\nimport { IMegaDockerAction } from '../interfaces/IMegaDockerAction'\nimport { IMegaDockerState } from '../interfaces/IMegaDockerState'\n\nexport const ManikinTable: React.FC = (): React.ReactElement => {\n  const {\n    state,\n    // eslint-disable-next-line\n    dispatch,\n  }: {\n    state: IMegaDockerState\n    dispatch: React.Dispatch<IMegaDockerAction>\n  } = React.useContext(MegaContext)\n\n  return (\n    <Table className='ManikinTable' size='small' stickyHeader>\n      <TableHead className='ManikinTableHeader'>\n        <TableRow className='ManikinHeaderRow'>\n          <TableCell key='name' style={{ width: '50%' }}>\n            Services\n          </TableCell>\n          <TableCell key='icon' style={{ width: '15%', height: '100%' }} />\n          <DarkModeSwitch />\n        </TableRow>\n      </TableHead>\n      <TableBody className='ManikinTableBody'>{state.manikinTable.map((eachManikin: IManikin) => ManikinRow(eachManikin))}</TableBody>\n    </Table>\n  )\n}\n","/** @format */\n\n//  ManikinRow.tsx\n//  MEGADocker\n//  a React Component that renders one row of the Manikin Table\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { TableCell, TableRow, Tooltip } from '@material-ui/core'\nimport { ManikinIcon } from './ManikinIcon'\nimport { ManikinSwitch } from './ManikinSwitch'\nimport { IManikin } from '../interfaces/IManikin'\n\nexport const ManikinRow: React.FC<IManikin> = (manikin: IManikin): React.ReactElement => {\n  return (\n    <Tooltip key={`${manikin.name}Row`} title={manikin.description}>\n      <TableRow className={manikin.isCore ? 'CoreManikinRow' : 'ManikinRow'} hover={manikin.isCore ? false : true}>\n        <TableCell size='small' key={`${manikin.name}NameCell`}>\n          {manikin.name}\n        </TableCell>\n        {ManikinIcon(manikin)}\n        {ManikinSwitch(manikin)}\n      </TableRow>\n    </Tooltip>\n  )\n}\n","/** @format */\n\n//  ContainerManikinPane.tsx\n//  MEGADocker\n//  a React Component that renders a div that holds the Manikin table\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { ManikinTable } from './ManikinTable'\n\nexport const ContainerManikinPane: React.FC = (): React.ReactElement => (\n  <div className='ManikinPane'>\n    <ManikinTable />\n  </div>\n)\n","/** @format */\n\n//  ButtonExportDockerSwarm.tsx\n//  MEGADocker\n//  a React Button Component that downloads a Docker Swarm zip file\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { Button } from '@material-ui/core'\nimport { MegaContext } from './MegaContext'\nimport { IMegaDockerState } from '../interfaces/IMegaDockerState'\nimport { IMegaDockerAction } from '../interfaces/IMegaDockerAction'\nimport { mobName } from '../mobparts/memories/mobName'\n\nexport const ButtonExportDockerSwarm: React.FC = (): React.ReactElement => {\n  const {\n    state,\n    dispatch,\n  }: {\n    state: IMegaDockerState\n    dispatch: React.Dispatch<IMegaDockerAction>\n  } = React.useContext(MegaContext)\n\n  const fullyValidated: boolean = state.memories.every((memory) => memory.isReady)\n\n  const buttonClicked = (): void => {\n    dispatch({ type: `DOCKER_SWARM_OUTPUT` })\n  }\n\n  const mobnameIndex: number = state.memories.indexOf(mobName)\n  const mobname: string = state.memories[mobnameIndex].value\n\n  return (\n    <Button disabled={fullyValidated ? false : true} variant='contained' onClick={buttonClicked}>\n      download {mobname}.zip\n    </Button>\n  )\n}\n","/** @format */\n\n//  ContainerButtonPane.tsx\n//  MEGADocker\n//  a React Component that renders a div that holds the buttons\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { ButtonExportDockerSwarm } from './ButtonExportDockerSwarm'\n\nexport const ContainerButtonPane: React.FC = (): React.ReactElement => (\n  <div className='ButtonPane'>\n    <ButtonExportDockerSwarm />\n  </div>\n)\n","export default __webpack_public_path__ + \"static/media/checkmarkIndicator.50bda404.png\";","export default __webpack_public_path__ + \"static/media/circleIndicator.8919f8cb.png\";","/** @format */\n\n//  MemoryValidationIcon.test.tsx\n//  MEGADocker\n//  a React Component that renders the validation icon on a Memory\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { TableCell } from '@material-ui/core'\nimport { IMemory } from '../interfaces/IMemory'\nimport checkmarkIndicator from '../images/indicators/checkmarkIndicator.png'\nimport circleIndicator from '../images/indicators/circleIndicator.png'\n\nexport const MemoryValidationIcon: React.FC<IMemory> = (memory: IMemory): React.ReactElement => (\n  <TableCell className='MemoryReadyIcon' variant='body' size='small'>\n    <img alt='ready indicator' height='25vh' src={memory.value === `` ? circleIndicator : memory.isReady ? checkmarkIndicator : circleIndicator} />\n  </TableCell>\n)\n","/** @format */\n\n//  MemoryTable.tsx\n//  MEGADocker\n//  a React Component that renders the table of Memories for the Manikins selected in the Manikin Table\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport { MegaContext } from './MegaContext'\nimport { MemoryRow } from './MemoryRow'\nimport checkmarkIndicator from '../images/indicators/checkmarkIndicator.png'\nimport circleIndicator from '../images/indicators/circleIndicator.png'\nimport { IMegaDockerAction } from '../interfaces/IMegaDockerAction'\nimport { IMegaDockerState } from '../interfaces/IMegaDockerState'\nimport { IMemory } from '../interfaces/IMemory'\nimport { IUpdateMemoryValueAction } from '../interfaces/actionInterfaces/IUpdateMemoryValueAction'\nimport { workingManikins } from '../globals/workingManikins'\nimport { getMemories } from '../functions/reducers/getMemories'\n\n/**\n * generates the memories table\n * @param props the component props\n */\nexport const MemoryTable: React.FC<any> = (props: any): React.ReactElement => {\n  /**\n   *  generates the payload to reduce\n   * @param memoryToUpdate the IMemory that will be reduced against the state\n   * @param newValue the IMemory.value to reduce against\n   */\n  const createMemoryValueAction: Function = (memoryToUpdate: IMemory, newValue: string): IUpdateMemoryValueAction => {\n    return {\n      type: `UPDATE_MEMORY_VALUE`,\n      payload: {\n        memory: memoryToUpdate,\n        value: newValue,\n      },\n    }\n  }\n  const {\n    state,\n    // eslint-disable-next-line\n    dispatch,\n  }: {\n    state: IMegaDockerState\n    dispatch: React.Dispatch<IMegaDockerAction>\n  } = React.useContext(MegaContext)\n\n  const fullyValidated: boolean = state.memories.every((memory) => memory.isReady)\n\n  const sortedMemories: IMemory[] = getMemories(workingManikins).sort((a: IMemory, b: IMemory) => a.name.localeCompare(b.name))\n\n  return (\n    <div style={{ width: '100%' }}>\n      <Table className='MemoryTable' size='small' stickyHeader>\n        <TableHead>\n          <TableRow className='MemoryHeaderRow'>\n            <TableCell size='small' variant='head' style={{ width: '20%' }}>\n              Settings\n            </TableCell>\n            <TableCell size='small' variant='head' style={{ width: '75%' }} />\n            <TableCell size='small' variant='head' style={{ width: '5%' }}>\n              <img alt='' src={fullyValidated ? checkmarkIndicator : circleIndicator} height='25vh' />\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody\n          className='MemoryTableBody'\n          style={{\n            width: '100%',\n          }}>\n          {sortedMemories.map((thisMemory: IMemory) => MemoryRow(thisMemory, (changeEvent: { target: { value: any } }) => dispatch(createMemoryValueAction(thisMemory, changeEvent.target.value))))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n","/** @format */\n\n//  MemoryRow.tsx\n//  MEGADocker\n//  a React Component that renders one row of the Memory Table\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { TableCell, TableRow, TextField, Tooltip } from '@material-ui/core'\nimport { IMemory } from '../interfaces/IMemory'\nimport { MemoryValidationIcon } from './MemoryValidationIcon'\n\n/**\n * renders a row of the memory table\n * @param memory the memory to render\n */\nexport const MemoryRow: React.FC<IMemory> = (\n  memory: IMemory,\n  handleChangeFunction: React.Dispatch<React.SetStateAction<React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>>>\n): React.ReactElement<IMemory> => {\n  return (\n    <Tooltip title={memory.tooltip} key={memory.memoryIndex}>\n      <TableRow hover>\n        <TableCell padding='checkbox' variant='body' size='small'>\n          {memory.name}\n        </TableCell>\n        <TableCell variant='body' size='small'>\n          <TextField\n            fullWidth\n            size='small'\n            required={true}\n            value={memory.value}\n            type={memory.valueType}\n            placeholder={`Please enter your ${memory.name} here`}\n            autoComplete={memory.shouldAutocomplete.toString()}\n            onChange={handleChangeFunction}\n          />\n        </TableCell>\n        {MemoryValidationIcon(memory)}\n      </TableRow>\n    </Tooltip>\n  )\n}\n","/** @format */\n\n//  ContainerMemoryPane.tsx\n//  MEGADocker\n//  a React Component that renders a div that holds the memory table\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { MemoryTable } from './MemoryTable'\n\nexport const ContainerMemoryPane: React.FC = (): React.ReactElement => {\n  return (\n    <div className='MemoryPane'>\n      <MemoryTable />\n    </div>\n  )\n}\n","/** @format */\n\n//  ContainerMainArea.tsx\n//  MEGADocker\n//  a React Component that renders a div that holds the right side of the application\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { ContainerButtonPane } from './ContainerButtonPane'\nimport { ContainerMemoryPane } from './ContainerMemoryPane'\n\nexport const ContainerMainArea: React.FC = (): React.ReactElement => (\n  <div className='MainArea'>\n    <ContainerMemoryPane />\n    <ContainerButtonPane />\n  </div>\n)\n","/** @format */\n\n//  App.tsx\n//  MEGADocker\n//  a React Component that renders the entire MEGADocker application\n//  Created by George Georgulas IV on 3/17/19.\n//  Copyright © 2019-2021 The MegaDocker Group. All rights reserved.\n\nimport * as React from 'react'\nimport { Grid, Paper } from '@material-ui/core'\nimport { ContainerManikinPane } from './ContainerManikinPane'\nimport { ContainerMainArea } from './ContainerMainArea'\nimport { MegaProvider } from './MegaContext'\n\nexport const App: React.FC = (): React.ReactElement => {\n  return (\n    <div className='App'>\n      <MegaProvider>\n        <Paper square>\n          <Grid container>\n            <Grid item xs={2}>\n              <ContainerManikinPane />\n            </Grid>\n            <Grid item xs={10}>\n              <ContainerMainArea />\n            </Grid>\n          </Grid>\n        </Paper>\n      </MegaProvider>\n    </div>\n  )\n}\n","/** @format */\n\nimport ReactDOM from 'react-dom'\nimport { App } from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}