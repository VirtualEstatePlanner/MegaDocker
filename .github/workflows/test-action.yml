name: "test-action"
on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 14
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - name: install example dependencies
      run: yarn
      working-directory: ./packages/action/__fixtures__/example
    - uses: ./
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Updater signature is exposed here to make sure it works in PR's
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_UPDATER_KEY }}
      with: 
        projectPath: ./packages/action/__fixtures__/example-with-tauri
        tagName: example-with-tauri-v__VERSION__
        releaseName: "Release example with preconfigured Tauri app v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false
    - uses: ./
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Updater signature is exposed here to make sure it works in PR's
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_UPDATER_KEY }}
      with: 
        projectPath: ./packages/action/__fixtures__/example
        # iconPath: ./icon.png
        tagName: example-v__VERSION__
        releaseName: "Release example app v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false